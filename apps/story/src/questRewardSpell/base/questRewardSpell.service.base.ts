/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";

import {
  Prisma,
  QuestRewardSpell as PrismaQuestRewardSpell,
  QuestOfferReward as PrismaQuestOfferReward,
} from "@prisma/client";

export class QuestRewardSpellServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.QuestRewardSpellCountArgs, "select">
  ): Promise<number> {
    return this.prisma.questRewardSpell.count(args);
  }

  async questRewardSpells(
    args: Prisma.QuestRewardSpellFindManyArgs
  ): Promise<PrismaQuestRewardSpell[]> {
    return this.prisma.questRewardSpell.findMany(args);
  }
  async questRewardSpell(
    args: Prisma.QuestRewardSpellFindUniqueArgs
  ): Promise<PrismaQuestRewardSpell | null> {
    return this.prisma.questRewardSpell.findUnique(args);
  }
  async createQuestRewardSpell(
    args: Prisma.QuestRewardSpellCreateArgs
  ): Promise<PrismaQuestRewardSpell> {
    return this.prisma.questRewardSpell.create(args);
  }
  async updateQuestRewardSpell(
    args: Prisma.QuestRewardSpellUpdateArgs
  ): Promise<PrismaQuestRewardSpell> {
    return this.prisma.questRewardSpell.update(args);
  }
  async deleteQuestRewardSpell(
    args: Prisma.QuestRewardSpellDeleteArgs
  ): Promise<PrismaQuestRewardSpell> {
    return this.prisma.questRewardSpell.delete(args);
  }

  async findQuestOfferRewards(
    parentId: string,
    args: Prisma.QuestOfferRewardFindManyArgs
  ): Promise<PrismaQuestOfferReward[]> {
    return this.prisma.questRewardSpell
      .findUniqueOrThrow({
        where: { id: parentId },
      })
      .questOfferRewards(args);
  }
}
