/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";

import {
  Prisma,
  QuestOfferRewardConditional as PrismaQuestOfferRewardConditional,
  QuestOfferReward as PrismaQuestOfferReward,
} from "@prisma/client";

export class QuestOfferRewardConditionalServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.QuestOfferRewardConditionalCountArgs, "select">
  ): Promise<number> {
    return this.prisma.questOfferRewardConditional.count(args);
  }

  async questOfferRewardConditionals(
    args: Prisma.QuestOfferRewardConditionalFindManyArgs
  ): Promise<PrismaQuestOfferRewardConditional[]> {
    return this.prisma.questOfferRewardConditional.findMany(args);
  }
  async questOfferRewardConditional(
    args: Prisma.QuestOfferRewardConditionalFindUniqueArgs
  ): Promise<PrismaQuestOfferRewardConditional | null> {
    return this.prisma.questOfferRewardConditional.findUnique(args);
  }
  async createQuestOfferRewardConditional(
    args: Prisma.QuestOfferRewardConditionalCreateArgs
  ): Promise<PrismaQuestOfferRewardConditional> {
    return this.prisma.questOfferRewardConditional.create(args);
  }
  async updateQuestOfferRewardConditional(
    args: Prisma.QuestOfferRewardConditionalUpdateArgs
  ): Promise<PrismaQuestOfferRewardConditional> {
    return this.prisma.questOfferRewardConditional.update(args);
  }
  async deleteQuestOfferRewardConditional(
    args: Prisma.QuestOfferRewardConditionalDeleteArgs
  ): Promise<PrismaQuestOfferRewardConditional> {
    return this.prisma.questOfferRewardConditional.delete(args);
  }

  async getQuestOfferReward(
    parentId: string
  ): Promise<PrismaQuestOfferReward | null> {
    return this.prisma.questOfferRewardConditional
      .findUnique({
        where: { id: parentId },
      })
      .questOfferReward();
  }
}
