/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { ObjectType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { AreaQuestTrigger } from "../../areaQuestTrigger/base/AreaQuestTrigger";
import { ValidateNested, IsOptional, IsDate, IsString } from "class-validator";
import { Type } from "class-transformer";
import { AreaScenarioTrigger } from "../../areaScenarioTrigger/base/AreaScenarioTrigger";
import { AreaTeleportTrigger } from "../../areaTeleportTrigger/base/AreaTeleportTrigger";
import { Zone } from "../../zone/base/Zone";

@ObjectType()
class Area {
  @ApiProperty({
    required: false,
    type: () => [AreaQuestTrigger],
  })
  @ValidateNested()
  @Type(() => AreaQuestTrigger)
  @IsOptional()
  areaQuestTriggers?: Array<AreaQuestTrigger>;

  @ApiProperty({
    required: false,
    type: () => [AreaScenarioTrigger],
  })
  @ValidateNested()
  @Type(() => AreaScenarioTrigger)
  @IsOptional()
  areaScenarioTriggers?: Array<AreaScenarioTrigger>;

  @ApiProperty({
    required: false,
    type: () => [AreaTeleportTrigger],
  })
  @ValidateNested()
  @Type(() => AreaTeleportTrigger)
  @IsOptional()
  areaTeleportTriggers?: Array<AreaTeleportTrigger>;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  createdAt!: Date;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  id!: string;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  updatedAt!: Date;

  @ApiProperty({
    required: false,
    type: () => Zone,
  })
  @ValidateNested()
  @Type(() => Zone)
  @IsOptional()
  zone?: Zone | null;
}

export { Area as Area };
