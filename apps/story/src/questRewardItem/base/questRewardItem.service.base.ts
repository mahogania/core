/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";

import {
  Prisma,
  QuestRewardItem as PrismaQuestRewardItem,
  QuestOfferReward as PrismaQuestOfferReward,
} from "@prisma/client";

export class QuestRewardItemServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.QuestRewardItemCountArgs, "select">
  ): Promise<number> {
    return this.prisma.questRewardItem.count(args);
  }

  async questRewardItems(
    args: Prisma.QuestRewardItemFindManyArgs
  ): Promise<PrismaQuestRewardItem[]> {
    return this.prisma.questRewardItem.findMany(args);
  }
  async questRewardItem(
    args: Prisma.QuestRewardItemFindUniqueArgs
  ): Promise<PrismaQuestRewardItem | null> {
    return this.prisma.questRewardItem.findUnique(args);
  }
  async createQuestRewardItem(
    args: Prisma.QuestRewardItemCreateArgs
  ): Promise<PrismaQuestRewardItem> {
    return this.prisma.questRewardItem.create(args);
  }
  async updateQuestRewardItem(
    args: Prisma.QuestRewardItemUpdateArgs
  ): Promise<PrismaQuestRewardItem> {
    return this.prisma.questRewardItem.update(args);
  }
  async deleteQuestRewardItem(
    args: Prisma.QuestRewardItemDeleteArgs
  ): Promise<PrismaQuestRewardItem> {
    return this.prisma.questRewardItem.delete(args);
  }

  async findQuestOfferRewards(
    parentId: string,
    args: Prisma.QuestOfferRewardFindManyArgs
  ): Promise<PrismaQuestOfferReward[]> {
    return this.prisma.questRewardItem
      .findUniqueOrThrow({
        where: { id: parentId },
      })
      .questOfferRewards(args);
  }
}
