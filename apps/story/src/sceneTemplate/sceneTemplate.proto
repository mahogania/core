syntax = "proto3";

                 package sceneTemplate;
service SceneTemplateService {
 rpc createSceneTemplate (SceneTemplateCreateInput) returns (SceneTemplate) {}
rpc sceneTemplates (findManyParams) returns (stream SceneTemplate) {}
rpc sceneTemplate (SceneTemplateWhereUniqueInput) returns (SceneTemplate) {}
rpc updateSceneTemplate (SceneTemplateUpdateInput) returns (SceneTemplate) {}
rpc deleteSceneTemplate (SceneTemplateWhereUniqueInput) returns (SceneTemplate) {}
rpc findManySceneTemplate (SceneTemplateWhereUniqueInput) returns (stream Scenario) {}
rpc updateSceneTemplate (ScenarioParams) returns (stream Scenario) {}
rpc connectSceneTemplate (ScenarioParams) returns (Scenario) {}
rpc disconnectSceneTemplate (ScenarioParams) returns (Scenario) {} 
 }
message SceneTemplateCreateInput {
string createdAt = 1;
string id = 2;
string name = 3;
repeated Scenario scenarios = 4;
string sceneUrl = 5;
string updatedAt = 6;
};
message SceneTemplate {
string createdAt = 1;
string id = 2;
string name = 3;
repeated Scenario scenarios = 4;
string sceneUrl = 5;
string updatedAt = 6;
};
message SceneTemplateWhereUniqueInput {
string createdAt = 1;
string id = 2;
string name = 3;
repeated Scenario scenarios = 4;
string sceneUrl = 5;
string updatedAt = 6;
};
message SceneTemplateUpdateInput {
string createdAt = 1;
string id = 2;
string name = 3;
repeated Scenario scenarios = 4;
string sceneUrl = 5;
string updatedAt = 6;
};
message findManyParams {

};
message Scenario {
string createdAt = 1;
string id = 2;
string updatedAt = 3;
};
message ScenarioWhereUniqueInput {
string createdAt = 1;
string id = 2;
string updatedAt = 3;
};
message ScenarioParams {
SceneTemplateWhereUniqueInput sceneTemplateWhereUniqueInput = 1;
ScenarioWhereUniqueInput scenarioWhereUniqueInput = 2;
};