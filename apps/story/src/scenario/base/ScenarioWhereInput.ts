/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { AreaScenarioTriggerListRelationFilter } from "../../areaScenarioTrigger/base/AreaScenarioTriggerListRelationFilter";
import { ValidateNested, IsOptional } from "class-validator";
import { Type } from "class-transformer";
import { StringFilter } from "../../util/StringFilter";
import { ScenarioRegionWhereUniqueInput } from "../../scenarioRegion/base/ScenarioRegionWhereUniqueInput";
import { SceneTemplateWhereUniqueInput } from "../../sceneTemplate/base/SceneTemplateWhereUniqueInput";
import { UserWhereUniqueInput } from "../../user/base/UserWhereUniqueInput";

@InputType()
class ScenarioWhereInput {
  @ApiProperty({
    required: false,
    type: () => AreaScenarioTriggerListRelationFilter,
  })
  @ValidateNested()
  @Type(() => AreaScenarioTriggerListRelationFilter)
  @IsOptional()
  @Field(() => AreaScenarioTriggerListRelationFilter, {
    nullable: true,
  })
  areaScenarioTriggers?: AreaScenarioTriggerListRelationFilter;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  id?: StringFilter;

  @ApiProperty({
    required: false,
    type: () => ScenarioRegionWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => ScenarioRegionWhereUniqueInput)
  @IsOptional()
  @Field(() => ScenarioRegionWhereUniqueInput, {
    nullable: true,
  })
  scenarioRegions?: ScenarioRegionWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: () => SceneTemplateWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => SceneTemplateWhereUniqueInput)
  @IsOptional()
  @Field(() => SceneTemplateWhereUniqueInput, {
    nullable: true,
  })
  sceneTemplate?: SceneTemplateWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: () => UserWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => UserWhereUniqueInput)
  @IsOptional()
  @Field(() => UserWhereUniqueInput, {
    nullable: true,
  })
  user?: UserWhereUniqueInput;
}

export { ScenarioWhereInput as ScenarioWhereInput };
