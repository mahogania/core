/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  EmployeeExternalWorkHistory as PrismaEmployeeExternalWorkHistory,
} from "@prisma/client";

export class EmployeeExternalWorkHistoryServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.EmployeeExternalWorkHistoryCountArgs, "select">
  ): Promise<number> {
    return this.prisma.employeeExternalWorkHistory.count(args);
  }

  async employeeExternalWorkHistories(
    args: Prisma.EmployeeExternalWorkHistoryFindManyArgs
  ): Promise<PrismaEmployeeExternalWorkHistory[]> {
    return this.prisma.employeeExternalWorkHistory.findMany(args);
  }
  async employeeExternalWorkHistory(
    args: Prisma.EmployeeExternalWorkHistoryFindUniqueArgs
  ): Promise<PrismaEmployeeExternalWorkHistory | null> {
    return this.prisma.employeeExternalWorkHistory.findUnique(args);
  }
  async createEmployeeExternalWorkHistory(
    args: Prisma.EmployeeExternalWorkHistoryCreateArgs
  ): Promise<PrismaEmployeeExternalWorkHistory> {
    return this.prisma.employeeExternalWorkHistory.create(args);
  }
  async updateEmployeeExternalWorkHistory(
    args: Prisma.EmployeeExternalWorkHistoryUpdateArgs
  ): Promise<PrismaEmployeeExternalWorkHistory> {
    return this.prisma.employeeExternalWorkHistory.update(args);
  }
  async deleteEmployeeExternalWorkHistory(
    args: Prisma.EmployeeExternalWorkHistoryDeleteArgs
  ): Promise<PrismaEmployeeExternalWorkHistory> {
    return this.prisma.employeeExternalWorkHistory.delete(args);
  }
}
