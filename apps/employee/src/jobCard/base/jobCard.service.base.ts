/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, JobCard as PrismaJobCard } from "@prisma/client";

export class JobCardServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.JobCardCountArgs, "select">): Promise<number> {
    return this.prisma.jobCard.count(args);
  }

  async jobCards(args: Prisma.JobCardFindManyArgs): Promise<PrismaJobCard[]> {
    return this.prisma.jobCard.findMany(args);
  }
  async jobCard(
    args: Prisma.JobCardFindUniqueArgs
  ): Promise<PrismaJobCard | null> {
    return this.prisma.jobCard.findUnique(args);
  }
  async createJobCard(args: Prisma.JobCardCreateArgs): Promise<PrismaJobCard> {
    return this.prisma.jobCard.create(args);
  }
  async updateJobCard(args: Prisma.JobCardUpdateArgs): Promise<PrismaJobCard> {
    return this.prisma.jobCard.update(args);
  }
  async deleteJobCard(args: Prisma.JobCardDeleteArgs): Promise<PrismaJobCard> {
    return this.prisma.jobCard.delete(args);
  }
}
