/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  EmployeeGroupTable as PrismaEmployeeGroupTable,
} from "@prisma/client";

export class EmployeeGroupTableServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.EmployeeGroupTableCountArgs, "select">
  ): Promise<number> {
    return this.prisma.employeeGroupTable.count(args);
  }

  async employeeGroupTables(
    args: Prisma.EmployeeGroupTableFindManyArgs
  ): Promise<PrismaEmployeeGroupTable[]> {
    return this.prisma.employeeGroupTable.findMany(args);
  }
  async employeeGroupTable(
    args: Prisma.EmployeeGroupTableFindUniqueArgs
  ): Promise<PrismaEmployeeGroupTable | null> {
    return this.prisma.employeeGroupTable.findUnique(args);
  }
  async createEmployeeGroupTable(
    args: Prisma.EmployeeGroupTableCreateArgs
  ): Promise<PrismaEmployeeGroupTable> {
    return this.prisma.employeeGroupTable.create(args);
  }
  async updateEmployeeGroupTable(
    args: Prisma.EmployeeGroupTableUpdateArgs
  ): Promise<PrismaEmployeeGroupTable> {
    return this.prisma.employeeGroupTable.update(args);
  }
  async deleteEmployeeGroupTable(
    args: Prisma.EmployeeGroupTableDeleteArgs
  ): Promise<PrismaEmployeeGroupTable> {
    return this.prisma.employeeGroupTable.delete(args);
  }
}
