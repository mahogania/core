/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  EmployeeInternalWorkHistory as PrismaEmployeeInternalWorkHistory,
} from "@prisma/client";

export class EmployeeInternalWorkHistoryServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.EmployeeInternalWorkHistoryCountArgs, "select">
  ): Promise<number> {
    return this.prisma.employeeInternalWorkHistory.count(args);
  }

  async employeeInternalWorkHistories(
    args: Prisma.EmployeeInternalWorkHistoryFindManyArgs
  ): Promise<PrismaEmployeeInternalWorkHistory[]> {
    return this.prisma.employeeInternalWorkHistory.findMany(args);
  }
  async employeeInternalWorkHistory(
    args: Prisma.EmployeeInternalWorkHistoryFindUniqueArgs
  ): Promise<PrismaEmployeeInternalWorkHistory | null> {
    return this.prisma.employeeInternalWorkHistory.findUnique(args);
  }
  async createEmployeeInternalWorkHistory(
    args: Prisma.EmployeeInternalWorkHistoryCreateArgs
  ): Promise<PrismaEmployeeInternalWorkHistory> {
    return this.prisma.employeeInternalWorkHistory.create(args);
  }
  async updateEmployeeInternalWorkHistory(
    args: Prisma.EmployeeInternalWorkHistoryUpdateArgs
  ): Promise<PrismaEmployeeInternalWorkHistory> {
    return this.prisma.employeeInternalWorkHistory.update(args);
  }
  async deleteEmployeeInternalWorkHistory(
    args: Prisma.EmployeeInternalWorkHistoryDeleteArgs
  ): Promise<PrismaEmployeeInternalWorkHistory> {
    return this.prisma.employeeInternalWorkHistory.delete(args);
  }
}
