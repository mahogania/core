/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  CreatureQuestStarter as PrismaCreatureQuestStarter,
} from "@prisma/client";

export class CreatureQuestStarterServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.CreatureQuestStarterCountArgs, "select">
  ): Promise<number> {
    return this.prisma.creatureQuestStarter.count(args);
  }

  async creatureQuestStarters(
    args: Prisma.CreatureQuestStarterFindManyArgs
  ): Promise<PrismaCreatureQuestStarter[]> {
    return this.prisma.creatureQuestStarter.findMany(args);
  }
  async creatureQuestStarter(
    args: Prisma.CreatureQuestStarterFindUniqueArgs
  ): Promise<PrismaCreatureQuestStarter | null> {
    return this.prisma.creatureQuestStarter.findUnique(args);
  }
  async createCreatureQuestStarter(
    args: Prisma.CreatureQuestStarterCreateArgs
  ): Promise<PrismaCreatureQuestStarter> {
    return this.prisma.creatureQuestStarter.create(args);
  }
  async updateCreatureQuestStarter(
    args: Prisma.CreatureQuestStarterUpdateArgs
  ): Promise<PrismaCreatureQuestStarter> {
    return this.prisma.creatureQuestStarter.update(args);
  }
  async deleteCreatureQuestStarter(
    args: Prisma.CreatureQuestStarterDeleteArgs
  ): Promise<PrismaCreatureQuestStarter> {
    return this.prisma.creatureQuestStarter.delete(args);
  }
}
