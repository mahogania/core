/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  CreatureSummonedData as PrismaCreatureSummonedData,
} from "@prisma/client";

export class CreatureSummonedDataServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.CreatureSummonedDataCountArgs, "select">
  ): Promise<number> {
    return this.prisma.creatureSummonedData.count(args);
  }

  async creatureSummonedDataItems(
    args: Prisma.CreatureSummonedDataFindManyArgs
  ): Promise<PrismaCreatureSummonedData[]> {
    return this.prisma.creatureSummonedData.findMany(args);
  }
  async creatureSummonedData(
    args: Prisma.CreatureSummonedDataFindUniqueArgs
  ): Promise<PrismaCreatureSummonedData | null> {
    return this.prisma.creatureSummonedData.findUnique(args);
  }
  async createCreatureSummonedData(
    args: Prisma.CreatureSummonedDataCreateArgs
  ): Promise<PrismaCreatureSummonedData> {
    return this.prisma.creatureSummonedData.create(args);
  }
  async updateCreatureSummonedData(
    args: Prisma.CreatureSummonedDataUpdateArgs
  ): Promise<PrismaCreatureSummonedData> {
    return this.prisma.creatureSummonedData.update(args);
  }
  async deleteCreatureSummonedData(
    args: Prisma.CreatureSummonedDataDeleteArgs
  ): Promise<PrismaCreatureSummonedData> {
    return this.prisma.creatureSummonedData.delete(args);
  }
}
