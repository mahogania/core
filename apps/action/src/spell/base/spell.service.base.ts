/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Spell as PrismaSpell } from "@prisma/client";

export class SpellServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.SpellCountArgs, "select">): Promise<number> {
    return this.prisma.spell.count(args);
  }

  async spells(args: Prisma.SpellFindManyArgs): Promise<PrismaSpell[]> {
    return this.prisma.spell.findMany(args);
  }
  async spell(args: Prisma.SpellFindUniqueArgs): Promise<PrismaSpell | null> {
    return this.prisma.spell.findUnique(args);
  }
  async createSpell(args: Prisma.SpellCreateArgs): Promise<PrismaSpell> {
    return this.prisma.spell.create(args);
  }
  async updateSpell(args: Prisma.SpellUpdateArgs): Promise<PrismaSpell> {
    return this.prisma.spell.update(args);
  }
  async deleteSpell(args: Prisma.SpellDeleteArgs): Promise<PrismaSpell> {
    return this.prisma.spell.delete(args);
  }
}
