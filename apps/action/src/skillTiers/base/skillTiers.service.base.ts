/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, SkillTiers as PrismaSkillTiers } from "@prisma/client";

export class SkillTiersServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.SkillTiersCountArgs, "select">
  ): Promise<number> {
    return this.prisma.skillTiers.count(args);
  }

  async skillTiersItems(
    args: Prisma.SkillTiersFindManyArgs
  ): Promise<PrismaSkillTiers[]> {
    return this.prisma.skillTiers.findMany(args);
  }
  async skillTiers(
    args: Prisma.SkillTiersFindUniqueArgs
  ): Promise<PrismaSkillTiers | null> {
    return this.prisma.skillTiers.findUnique(args);
  }
  async createSkillTiers(
    args: Prisma.SkillTiersCreateArgs
  ): Promise<PrismaSkillTiers> {
    return this.prisma.skillTiers.create(args);
  }
  async updateSkillTiers(
    args: Prisma.SkillTiersUpdateArgs
  ): Promise<PrismaSkillTiers> {
    return this.prisma.skillTiers.update(args);
  }
  async deleteSkillTiers(
    args: Prisma.SkillTiersDeleteArgs
  ): Promise<PrismaSkillTiers> {
    return this.prisma.skillTiers.delete(args);
  }
}
