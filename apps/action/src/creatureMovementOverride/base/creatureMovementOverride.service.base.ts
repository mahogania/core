/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  CreatureMovementOverride as PrismaCreatureMovementOverride,
} from "@prisma/client";

export class CreatureMovementOverrideServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.CreatureMovementOverrideCountArgs, "select">
  ): Promise<number> {
    return this.prisma.creatureMovementOverride.count(args);
  }

  async creatureMovementOverrides(
    args: Prisma.CreatureMovementOverrideFindManyArgs
  ): Promise<PrismaCreatureMovementOverride[]> {
    return this.prisma.creatureMovementOverride.findMany(args);
  }
  async creatureMovementOverride(
    args: Prisma.CreatureMovementOverrideFindUniqueArgs
  ): Promise<PrismaCreatureMovementOverride | null> {
    return this.prisma.creatureMovementOverride.findUnique(args);
  }
  async createCreatureMovementOverride(
    args: Prisma.CreatureMovementOverrideCreateArgs
  ): Promise<PrismaCreatureMovementOverride> {
    return this.prisma.creatureMovementOverride.create(args);
  }
  async updateCreatureMovementOverride(
    args: Prisma.CreatureMovementOverrideUpdateArgs
  ): Promise<PrismaCreatureMovementOverride> {
    return this.prisma.creatureMovementOverride.update(args);
  }
  async deleteCreatureMovementOverride(
    args: Prisma.CreatureMovementOverrideDeleteArgs
  ): Promise<PrismaCreatureMovementOverride> {
    return this.prisma.creatureMovementOverride.delete(args);
  }
}
