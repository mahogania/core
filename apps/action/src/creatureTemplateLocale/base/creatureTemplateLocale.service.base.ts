/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  CreatureTemplateLocale as PrismaCreatureTemplateLocale,
} from "@prisma/client";

export class CreatureTemplateLocaleServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.CreatureTemplateLocaleCountArgs, "select">
  ): Promise<number> {
    return this.prisma.creatureTemplateLocale.count(args);
  }

  async creatureTemplateLocales(
    args: Prisma.CreatureTemplateLocaleFindManyArgs
  ): Promise<PrismaCreatureTemplateLocale[]> {
    return this.prisma.creatureTemplateLocale.findMany(args);
  }
  async creatureTemplateLocale(
    args: Prisma.CreatureTemplateLocaleFindUniqueArgs
  ): Promise<PrismaCreatureTemplateLocale | null> {
    return this.prisma.creatureTemplateLocale.findUnique(args);
  }
  async createCreatureTemplateLocale(
    args: Prisma.CreatureTemplateLocaleCreateArgs
  ): Promise<PrismaCreatureTemplateLocale> {
    return this.prisma.creatureTemplateLocale.create(args);
  }
  async updateCreatureTemplateLocale(
    args: Prisma.CreatureTemplateLocaleUpdateArgs
  ): Promise<PrismaCreatureTemplateLocale> {
    return this.prisma.creatureTemplateLocale.update(args);
  }
  async deleteCreatureTemplateLocale(
    args: Prisma.CreatureTemplateLocaleDeleteArgs
  ): Promise<PrismaCreatureTemplateLocale> {
    return this.prisma.creatureTemplateLocale.delete(args);
  }
}
