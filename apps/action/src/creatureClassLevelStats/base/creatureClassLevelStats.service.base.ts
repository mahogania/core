/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  CreatureClassLevelStats as PrismaCreatureClassLevelStats,
} from "@prisma/client";

export class CreatureClassLevelStatsServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.CreatureClassLevelStatsCountArgs, "select">
  ): Promise<number> {
    return this.prisma.creatureClassLevelStats.count(args);
  }

  async creatureClassLevelStatsItems(
    args: Prisma.CreatureClassLevelStatsFindManyArgs
  ): Promise<PrismaCreatureClassLevelStats[]> {
    return this.prisma.creatureClassLevelStats.findMany(args);
  }
  async creatureClassLevelStats(
    args: Prisma.CreatureClassLevelStatsFindUniqueArgs
  ): Promise<PrismaCreatureClassLevelStats | null> {
    return this.prisma.creatureClassLevelStats.findUnique(args);
  }
  async createCreatureClassLevelStats(
    args: Prisma.CreatureClassLevelStatsCreateArgs
  ): Promise<PrismaCreatureClassLevelStats> {
    return this.prisma.creatureClassLevelStats.create(args);
  }
  async updateCreatureClassLevelStats(
    args: Prisma.CreatureClassLevelStatsUpdateArgs
  ): Promise<PrismaCreatureClassLevelStats> {
    return this.prisma.creatureClassLevelStats.update(args);
  }
  async deleteCreatureClassLevelStats(
    args: Prisma.CreatureClassLevelStatsDeleteArgs
  ): Promise<PrismaCreatureClassLevelStats> {
    return this.prisma.creatureClassLevelStats.delete(args);
  }
}
