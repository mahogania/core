/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  ServersideSpellEffect as PrismaServersideSpellEffect,
} from "@prisma/client";

export class ServersideSpellEffectServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.ServersideSpellEffectCountArgs, "select">
  ): Promise<number> {
    return this.prisma.serversideSpellEffect.count(args);
  }

  async serversideSpellEffects(
    args: Prisma.ServersideSpellEffectFindManyArgs
  ): Promise<PrismaServersideSpellEffect[]> {
    return this.prisma.serversideSpellEffect.findMany(args);
  }
  async serversideSpellEffect(
    args: Prisma.ServersideSpellEffectFindUniqueArgs
  ): Promise<PrismaServersideSpellEffect | null> {
    return this.prisma.serversideSpellEffect.findUnique(args);
  }
  async createServersideSpellEffect(
    args: Prisma.ServersideSpellEffectCreateArgs
  ): Promise<PrismaServersideSpellEffect> {
    return this.prisma.serversideSpellEffect.create(args);
  }
  async updateServersideSpellEffect(
    args: Prisma.ServersideSpellEffectUpdateArgs
  ): Promise<PrismaServersideSpellEffect> {
    return this.prisma.serversideSpellEffect.update(args);
  }
  async deleteServersideSpellEffect(
    args: Prisma.ServersideSpellEffectDeleteArgs
  ): Promise<PrismaServersideSpellEffect> {
    return this.prisma.serversideSpellEffect.delete(args);
  }
}
