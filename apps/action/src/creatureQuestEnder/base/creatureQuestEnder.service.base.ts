/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  CreatureQuestEnder as PrismaCreatureQuestEnder,
} from "@prisma/client";

export class CreatureQuestEnderServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.CreatureQuestEnderCountArgs, "select">
  ): Promise<number> {
    return this.prisma.creatureQuestEnder.count(args);
  }

  async creatureQuestEnders(
    args: Prisma.CreatureQuestEnderFindManyArgs
  ): Promise<PrismaCreatureQuestEnder[]> {
    return this.prisma.creatureQuestEnder.findMany(args);
  }
  async creatureQuestEnder(
    args: Prisma.CreatureQuestEnderFindUniqueArgs
  ): Promise<PrismaCreatureQuestEnder | null> {
    return this.prisma.creatureQuestEnder.findUnique(args);
  }
  async createCreatureQuestEnder(
    args: Prisma.CreatureQuestEnderCreateArgs
  ): Promise<PrismaCreatureQuestEnder> {
    return this.prisma.creatureQuestEnder.create(args);
  }
  async updateCreatureQuestEnder(
    args: Prisma.CreatureQuestEnderUpdateArgs
  ): Promise<PrismaCreatureQuestEnder> {
    return this.prisma.creatureQuestEnder.update(args);
  }
  async deleteCreatureQuestEnder(
    args: Prisma.CreatureQuestEnderDeleteArgs
  ): Promise<PrismaCreatureQuestEnder> {
    return this.prisma.creatureQuestEnder.delete(args);
  }
}
