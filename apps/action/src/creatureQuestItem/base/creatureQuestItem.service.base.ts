/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  CreatureQuestItem as PrismaCreatureQuestItem,
} from "@prisma/client";

export class CreatureQuestItemServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.CreatureQuestItemCountArgs, "select">
  ): Promise<number> {
    return this.prisma.creatureQuestItem.count(args);
  }

  async creatureQuestItems(
    args: Prisma.CreatureQuestItemFindManyArgs
  ): Promise<PrismaCreatureQuestItem[]> {
    return this.prisma.creatureQuestItem.findMany(args);
  }
  async creatureQuestItem(
    args: Prisma.CreatureQuestItemFindUniqueArgs
  ): Promise<PrismaCreatureQuestItem | null> {
    return this.prisma.creatureQuestItem.findUnique(args);
  }
  async createCreatureQuestItem(
    args: Prisma.CreatureQuestItemCreateArgs
  ): Promise<PrismaCreatureQuestItem> {
    return this.prisma.creatureQuestItem.create(args);
  }
  async updateCreatureQuestItem(
    args: Prisma.CreatureQuestItemUpdateArgs
  ): Promise<PrismaCreatureQuestItem> {
    return this.prisma.creatureQuestItem.update(args);
  }
  async deleteCreatureQuestItem(
    args: Prisma.CreatureQuestItemDeleteArgs
  ): Promise<PrismaCreatureQuestItem> {
    return this.prisma.creatureQuestItem.delete(args);
  }
}
