/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, DeliveryTrip as PrismaDeliveryTrip } from "@prisma/client";

export class DeliveryTripServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.DeliveryTripCountArgs, "select">
  ): Promise<number> {
    return this.prisma.deliveryTrip.count(args);
  }

  async deliveryTrips(
    args: Prisma.DeliveryTripFindManyArgs
  ): Promise<PrismaDeliveryTrip[]> {
    return this.prisma.deliveryTrip.findMany(args);
  }
  async deliveryTrip(
    args: Prisma.DeliveryTripFindUniqueArgs
  ): Promise<PrismaDeliveryTrip | null> {
    return this.prisma.deliveryTrip.findUnique(args);
  }
  async createDeliveryTrip(
    args: Prisma.DeliveryTripCreateArgs
  ): Promise<PrismaDeliveryTrip> {
    return this.prisma.deliveryTrip.create(args);
  }
  async updateDeliveryTrip(
    args: Prisma.DeliveryTripUpdateArgs
  ): Promise<PrismaDeliveryTrip> {
    return this.prisma.deliveryTrip.update(args);
  }
  async deleteDeliveryTrip(
    args: Prisma.DeliveryTripDeleteArgs
  ): Promise<PrismaDeliveryTrip> {
    return this.prisma.deliveryTrip.delete(args);
  }
}
