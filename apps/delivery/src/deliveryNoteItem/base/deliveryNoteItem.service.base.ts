/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  DeliveryNoteItem as PrismaDeliveryNoteItem,
} from "@prisma/client";

export class DeliveryNoteItemServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.DeliveryNoteItemCountArgs, "select">
  ): Promise<number> {
    return this.prisma.deliveryNoteItem.count(args);
  }

  async deliveryNoteItems(
    args: Prisma.DeliveryNoteItemFindManyArgs
  ): Promise<PrismaDeliveryNoteItem[]> {
    return this.prisma.deliveryNoteItem.findMany(args);
  }
  async deliveryNoteItem(
    args: Prisma.DeliveryNoteItemFindUniqueArgs
  ): Promise<PrismaDeliveryNoteItem | null> {
    return this.prisma.deliveryNoteItem.findUnique(args);
  }
  async createDeliveryNoteItem(
    args: Prisma.DeliveryNoteItemCreateArgs
  ): Promise<PrismaDeliveryNoteItem> {
    return this.prisma.deliveryNoteItem.create(args);
  }
  async updateDeliveryNoteItem(
    args: Prisma.DeliveryNoteItemUpdateArgs
  ): Promise<PrismaDeliveryNoteItem> {
    return this.prisma.deliveryNoteItem.update(args);
  }
  async deleteDeliveryNoteItem(
    args: Prisma.DeliveryNoteItemDeleteArgs
  ): Promise<PrismaDeliveryNoteItem> {
    return this.prisma.deliveryNoteItem.delete(args);
  }
}
