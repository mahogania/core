/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  DrivingLicenseCategory as PrismaDrivingLicenseCategory,
} from "@prisma/client";

export class DrivingLicenseCategoryServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.DrivingLicenseCategoryCountArgs, "select">
  ): Promise<number> {
    return this.prisma.drivingLicenseCategory.count(args);
  }

  async drivingLicenseCategories(
    args: Prisma.DrivingLicenseCategoryFindManyArgs
  ): Promise<PrismaDrivingLicenseCategory[]> {
    return this.prisma.drivingLicenseCategory.findMany(args);
  }
  async drivingLicenseCategory(
    args: Prisma.DrivingLicenseCategoryFindUniqueArgs
  ): Promise<PrismaDrivingLicenseCategory | null> {
    return this.prisma.drivingLicenseCategory.findUnique(args);
  }
  async createDrivingLicenseCategory(
    args: Prisma.DrivingLicenseCategoryCreateArgs
  ): Promise<PrismaDrivingLicenseCategory> {
    return this.prisma.drivingLicenseCategory.create(args);
  }
  async updateDrivingLicenseCategory(
    args: Prisma.DrivingLicenseCategoryUpdateArgs
  ): Promise<PrismaDrivingLicenseCategory> {
    return this.prisma.drivingLicenseCategory.update(args);
  }
  async deleteDrivingLicenseCategory(
    args: Prisma.DrivingLicenseCategoryDeleteArgs
  ): Promise<PrismaDrivingLicenseCategory> {
    return this.prisma.drivingLicenseCategory.delete(args);
  }
}
