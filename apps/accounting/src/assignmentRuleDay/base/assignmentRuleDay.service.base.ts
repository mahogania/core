/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  AssignmentRuleDay as PrismaAssignmentRuleDay,
} from "@prisma/client";

export class AssignmentRuleDayServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.AssignmentRuleDayCountArgs, "select">
  ): Promise<number> {
    return this.prisma.assignmentRuleDay.count(args);
  }

  async assignmentRuleDays(
    args: Prisma.AssignmentRuleDayFindManyArgs
  ): Promise<PrismaAssignmentRuleDay[]> {
    return this.prisma.assignmentRuleDay.findMany(args);
  }
  async assignmentRuleDay(
    args: Prisma.AssignmentRuleDayFindUniqueArgs
  ): Promise<PrismaAssignmentRuleDay | null> {
    return this.prisma.assignmentRuleDay.findUnique(args);
  }
  async createAssignmentRuleDay(
    args: Prisma.AssignmentRuleDayCreateArgs
  ): Promise<PrismaAssignmentRuleDay> {
    return this.prisma.assignmentRuleDay.create(args);
  }
  async updateAssignmentRuleDay(
    args: Prisma.AssignmentRuleDayUpdateArgs
  ): Promise<PrismaAssignmentRuleDay> {
    return this.prisma.assignmentRuleDay.update(args);
  }
  async deleteAssignmentRuleDay(
    args: Prisma.AssignmentRuleDayDeleteArgs
  ): Promise<PrismaAssignmentRuleDay> {
    return this.prisma.assignmentRuleDay.delete(args);
  }
}
