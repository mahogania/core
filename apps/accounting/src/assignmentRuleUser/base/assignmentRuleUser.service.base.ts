/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  AssignmentRuleUser as PrismaAssignmentRuleUser,
} from "@prisma/client";

export class AssignmentRuleUserServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.AssignmentRuleUserCountArgs, "select">
  ): Promise<number> {
    return this.prisma.assignmentRuleUser.count(args);
  }

  async assignmentRuleUsers(
    args: Prisma.AssignmentRuleUserFindManyArgs
  ): Promise<PrismaAssignmentRuleUser[]> {
    return this.prisma.assignmentRuleUser.findMany(args);
  }
  async assignmentRuleUser(
    args: Prisma.AssignmentRuleUserFindUniqueArgs
  ): Promise<PrismaAssignmentRuleUser | null> {
    return this.prisma.assignmentRuleUser.findUnique(args);
  }
  async createAssignmentRuleUser(
    args: Prisma.AssignmentRuleUserCreateArgs
  ): Promise<PrismaAssignmentRuleUser> {
    return this.prisma.assignmentRuleUser.create(args);
  }
  async updateAssignmentRuleUser(
    args: Prisma.AssignmentRuleUserUpdateArgs
  ): Promise<PrismaAssignmentRuleUser> {
    return this.prisma.assignmentRuleUser.update(args);
  }
  async deleteAssignmentRuleUser(
    args: Prisma.AssignmentRuleUserDeleteArgs
  ): Promise<PrismaAssignmentRuleUser> {
    return this.prisma.assignmentRuleUser.delete(args);
  }
}
