/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  AssetMaintenanceLog as PrismaAssetMaintenanceLog,
} from "@prisma/client";

export class AssetMaintenanceLogServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.AssetMaintenanceLogCountArgs, "select">
  ): Promise<number> {
    return this.prisma.assetMaintenanceLog.count(args);
  }

  async assetMaintenanceLogs(
    args: Prisma.AssetMaintenanceLogFindManyArgs
  ): Promise<PrismaAssetMaintenanceLog[]> {
    return this.prisma.assetMaintenanceLog.findMany(args);
  }
  async assetMaintenanceLog(
    args: Prisma.AssetMaintenanceLogFindUniqueArgs
  ): Promise<PrismaAssetMaintenanceLog | null> {
    return this.prisma.assetMaintenanceLog.findUnique(args);
  }
  async createAssetMaintenanceLog(
    args: Prisma.AssetMaintenanceLogCreateArgs
  ): Promise<PrismaAssetMaintenanceLog> {
    return this.prisma.assetMaintenanceLog.create(args);
  }
  async updateAssetMaintenanceLog(
    args: Prisma.AssetMaintenanceLogUpdateArgs
  ): Promise<PrismaAssetMaintenanceLog> {
    return this.prisma.assetMaintenanceLog.update(args);
  }
  async deleteAssetMaintenanceLog(
    args: Prisma.AssetMaintenanceLogDeleteArgs
  ): Promise<PrismaAssetMaintenanceLog> {
    return this.prisma.assetMaintenanceLog.delete(args);
  }
}
