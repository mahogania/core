/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  AssetMaintenanceTask as PrismaAssetMaintenanceTask,
} from "@prisma/client";

export class AssetMaintenanceTaskServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.AssetMaintenanceTaskCountArgs, "select">
  ): Promise<number> {
    return this.prisma.assetMaintenanceTask.count(args);
  }

  async assetMaintenanceTasks(
    args: Prisma.AssetMaintenanceTaskFindManyArgs
  ): Promise<PrismaAssetMaintenanceTask[]> {
    return this.prisma.assetMaintenanceTask.findMany(args);
  }
  async assetMaintenanceTask(
    args: Prisma.AssetMaintenanceTaskFindUniqueArgs
  ): Promise<PrismaAssetMaintenanceTask | null> {
    return this.prisma.assetMaintenanceTask.findUnique(args);
  }
  async createAssetMaintenanceTask(
    args: Prisma.AssetMaintenanceTaskCreateArgs
  ): Promise<PrismaAssetMaintenanceTask> {
    return this.prisma.assetMaintenanceTask.create(args);
  }
  async updateAssetMaintenanceTask(
    args: Prisma.AssetMaintenanceTaskUpdateArgs
  ): Promise<PrismaAssetMaintenanceTask> {
    return this.prisma.assetMaintenanceTask.update(args);
  }
  async deleteAssetMaintenanceTask(
    args: Prisma.AssetMaintenanceTaskDeleteArgs
  ): Promise<PrismaAssetMaintenanceTask> {
    return this.prisma.assetMaintenanceTask.delete(args);
  }
}
