/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  AssetRepairConsumedItem as PrismaAssetRepairConsumedItem,
} from "@prisma/client";

export class AssetRepairConsumedItemServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.AssetRepairConsumedItemCountArgs, "select">
  ): Promise<number> {
    return this.prisma.assetRepairConsumedItem.count(args);
  }

  async assetRepairConsumedItems(
    args: Prisma.AssetRepairConsumedItemFindManyArgs
  ): Promise<PrismaAssetRepairConsumedItem[]> {
    return this.prisma.assetRepairConsumedItem.findMany(args);
  }
  async assetRepairConsumedItem(
    args: Prisma.AssetRepairConsumedItemFindUniqueArgs
  ): Promise<PrismaAssetRepairConsumedItem | null> {
    return this.prisma.assetRepairConsumedItem.findUnique(args);
  }
  async createAssetRepairConsumedItem(
    args: Prisma.AssetRepairConsumedItemCreateArgs
  ): Promise<PrismaAssetRepairConsumedItem> {
    return this.prisma.assetRepairConsumedItem.create(args);
  }
  async updateAssetRepairConsumedItem(
    args: Prisma.AssetRepairConsumedItemUpdateArgs
  ): Promise<PrismaAssetRepairConsumedItem> {
    return this.prisma.assetRepairConsumedItem.update(args);
  }
  async deleteAssetRepairConsumedItem(
    args: Prisma.AssetRepairConsumedItemDeleteArgs
  ): Promise<PrismaAssetRepairConsumedItem> {
    return this.prisma.assetRepairConsumedItem.delete(args);
  }
}
