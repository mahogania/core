/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  AssetValueAdjustment as PrismaAssetValueAdjustment,
} from "@prisma/client";

export class AssetValueAdjustmentServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.AssetValueAdjustmentCountArgs, "select">
  ): Promise<number> {
    return this.prisma.assetValueAdjustment.count(args);
  }

  async assetValueAdjustments(
    args: Prisma.AssetValueAdjustmentFindManyArgs
  ): Promise<PrismaAssetValueAdjustment[]> {
    return this.prisma.assetValueAdjustment.findMany(args);
  }
  async assetValueAdjustment(
    args: Prisma.AssetValueAdjustmentFindUniqueArgs
  ): Promise<PrismaAssetValueAdjustment | null> {
    return this.prisma.assetValueAdjustment.findUnique(args);
  }
  async createAssetValueAdjustment(
    args: Prisma.AssetValueAdjustmentCreateArgs
  ): Promise<PrismaAssetValueAdjustment> {
    return this.prisma.assetValueAdjustment.create(args);
  }
  async updateAssetValueAdjustment(
    args: Prisma.AssetValueAdjustmentUpdateArgs
  ): Promise<PrismaAssetValueAdjustment> {
    return this.prisma.assetValueAdjustment.update(args);
  }
  async deleteAssetValueAdjustment(
    args: Prisma.AssetValueAdjustmentDeleteArgs
  ): Promise<PrismaAssetValueAdjustment> {
    return this.prisma.assetValueAdjustment.delete(args);
  }
}
