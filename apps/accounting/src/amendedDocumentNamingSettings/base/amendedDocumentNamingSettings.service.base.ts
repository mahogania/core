/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";

import {
  Prisma,
  AmendedDocumentNamingSettings as PrismaAmendedDocumentNamingSettings,
} from "@prisma/client";

export class AmendedDocumentNamingSettingsServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.AmendedDocumentNamingSettingsCountArgs, "select">
  ): Promise<number> {
    return this.prisma.amendedDocumentNamingSettings.count(args);
  }

  async amendedDocumentNamingSettingsItems(
    args: Prisma.AmendedDocumentNamingSettingsFindManyArgs
  ): Promise<PrismaAmendedDocumentNamingSettings[]> {
    return this.prisma.amendedDocumentNamingSettings.findMany(args);
  }
  async amendedDocumentNamingSettings(
    args: Prisma.AmendedDocumentNamingSettingsFindUniqueArgs
  ): Promise<PrismaAmendedDocumentNamingSettings | null> {
    return this.prisma.amendedDocumentNamingSettings.findUnique(args);
  }
  async createAmendedDocumentNamingSettings(
    args: Prisma.AmendedDocumentNamingSettingsCreateArgs
  ): Promise<PrismaAmendedDocumentNamingSettings> {
    return this.prisma.amendedDocumentNamingSettings.create(args);
  }
  async updateAmendedDocumentNamingSettings(
    args: Prisma.AmendedDocumentNamingSettingsUpdateArgs
  ): Promise<PrismaAmendedDocumentNamingSettings> {
    return this.prisma.amendedDocumentNamingSettings.update(args);
  }
  async deleteAmendedDocumentNamingSettings(
    args: Prisma.AmendedDocumentNamingSettingsDeleteArgs
  ): Promise<PrismaAmendedDocumentNamingSettings> {
    return this.prisma.amendedDocumentNamingSettings.delete(args);
  }
}
