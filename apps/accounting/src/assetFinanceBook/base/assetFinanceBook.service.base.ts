/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  AssetFinanceBook as PrismaAssetFinanceBook,
} from "@prisma/client";

export class AssetFinanceBookServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.AssetFinanceBookCountArgs, "select">
  ): Promise<number> {
    return this.prisma.assetFinanceBook.count(args);
  }

  async assetFinanceBooks(
    args: Prisma.AssetFinanceBookFindManyArgs
  ): Promise<PrismaAssetFinanceBook[]> {
    return this.prisma.assetFinanceBook.findMany(args);
  }
  async assetFinanceBook(
    args: Prisma.AssetFinanceBookFindUniqueArgs
  ): Promise<PrismaAssetFinanceBook | null> {
    return this.prisma.assetFinanceBook.findUnique(args);
  }
  async createAssetFinanceBook(
    args: Prisma.AssetFinanceBookCreateArgs
  ): Promise<PrismaAssetFinanceBook> {
    return this.prisma.assetFinanceBook.create(args);
  }
  async updateAssetFinanceBook(
    args: Prisma.AssetFinanceBookUpdateArgs
  ): Promise<PrismaAssetFinanceBook> {
    return this.prisma.assetFinanceBook.update(args);
  }
  async deleteAssetFinanceBook(
    args: Prisma.AssetFinanceBookDeleteArgs
  ): Promise<PrismaAssetFinanceBook> {
    return this.prisma.assetFinanceBook.delete(args);
  }
}
