/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, ActivityType as PrismaActivityType } from "@prisma/client";

export class ActivityTypeServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.ActivityTypeCountArgs, "select">
  ): Promise<number> {
    return this.prisma.activityType.count(args);
  }

  async activityTypes(
    args: Prisma.ActivityTypeFindManyArgs
  ): Promise<PrismaActivityType[]> {
    return this.prisma.activityType.findMany(args);
  }
  async activityType(
    args: Prisma.ActivityTypeFindUniqueArgs
  ): Promise<PrismaActivityType | null> {
    return this.prisma.activityType.findUnique(args);
  }
  async createActivityType(
    args: Prisma.ActivityTypeCreateArgs
  ): Promise<PrismaActivityType> {
    return this.prisma.activityType.create(args);
  }
  async updateActivityType(
    args: Prisma.ActivityTypeUpdateArgs
  ): Promise<PrismaActivityType> {
    return this.prisma.activityType.update(args);
  }
  async deleteActivityType(
    args: Prisma.ActivityTypeDeleteArgs
  ): Promise<PrismaActivityType> {
    return this.prisma.activityType.delete(args);
  }
}
