/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  PaymentReconciliationLog as PrismaPaymentReconciliationLog,
} from "@prisma/client";

export class PaymentReconciliationLogServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.PaymentReconciliationLogCountArgs, "select">
  ): Promise<number> {
    return this.prisma.paymentReconciliationLog.count(args);
  }

  async paymentReconciliationLogs(
    args: Prisma.PaymentReconciliationLogFindManyArgs
  ): Promise<PrismaPaymentReconciliationLog[]> {
    return this.prisma.paymentReconciliationLog.findMany(args);
  }
  async paymentReconciliationLog(
    args: Prisma.PaymentReconciliationLogFindUniqueArgs
  ): Promise<PrismaPaymentReconciliationLog | null> {
    return this.prisma.paymentReconciliationLog.findUnique(args);
  }
  async createPaymentReconciliationLog(
    args: Prisma.PaymentReconciliationLogCreateArgs
  ): Promise<PrismaPaymentReconciliationLog> {
    return this.prisma.paymentReconciliationLog.create(args);
  }
  async updatePaymentReconciliationLog(
    args: Prisma.PaymentReconciliationLogUpdateArgs
  ): Promise<PrismaPaymentReconciliationLog> {
    return this.prisma.paymentReconciliationLog.update(args);
  }
  async deletePaymentReconciliationLog(
    args: Prisma.PaymentReconciliationLogDeleteArgs
  ): Promise<PrismaPaymentReconciliationLog> {
    return this.prisma.paymentReconciliationLog.delete(args);
  }
}
