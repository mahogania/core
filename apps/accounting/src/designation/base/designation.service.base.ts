/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Designation as PrismaDesignation } from "@prisma/client";

export class DesignationServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.DesignationCountArgs, "select">
  ): Promise<number> {
    return this.prisma.designation.count(args);
  }

  async designations(
    args: Prisma.DesignationFindManyArgs
  ): Promise<PrismaDesignation[]> {
    return this.prisma.designation.findMany(args);
  }
  async designation(
    args: Prisma.DesignationFindUniqueArgs
  ): Promise<PrismaDesignation | null> {
    return this.prisma.designation.findUnique(args);
  }
  async createDesignation(
    args: Prisma.DesignationCreateArgs
  ): Promise<PrismaDesignation> {
    return this.prisma.designation.create(args);
  }
  async updateDesignation(
    args: Prisma.DesignationUpdateArgs
  ): Promise<PrismaDesignation> {
    return this.prisma.designation.update(args);
  }
  async deleteDesignation(
    args: Prisma.DesignationDeleteArgs
  ): Promise<PrismaDesignation> {
    return this.prisma.designation.delete(args);
  }
}
