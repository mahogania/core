/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, BudgetAccount as PrismaBudgetAccount } from "@prisma/client";

export class BudgetAccountServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.BudgetAccountCountArgs, "select">
  ): Promise<number> {
    return this.prisma.budgetAccount.count(args);
  }

  async budgetAccounts(
    args: Prisma.BudgetAccountFindManyArgs
  ): Promise<PrismaBudgetAccount[]> {
    return this.prisma.budgetAccount.findMany(args);
  }
  async budgetAccount(
    args: Prisma.BudgetAccountFindUniqueArgs
  ): Promise<PrismaBudgetAccount | null> {
    return this.prisma.budgetAccount.findUnique(args);
  }
  async createBudgetAccount(
    args: Prisma.BudgetAccountCreateArgs
  ): Promise<PrismaBudgetAccount> {
    return this.prisma.budgetAccount.create(args);
  }
  async updateBudgetAccount(
    args: Prisma.BudgetAccountUpdateArgs
  ): Promise<PrismaBudgetAccount> {
    return this.prisma.budgetAccount.update(args);
  }
  async deleteBudgetAccount(
    args: Prisma.BudgetAccountDeleteArgs
  ): Promise<PrismaBudgetAccount> {
    return this.prisma.budgetAccount.delete(args);
  }
}
