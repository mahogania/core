/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  AccountClosingBalance as PrismaAccountClosingBalance,
} from "@prisma/client";

export class AccountClosingBalanceServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.AccountClosingBalanceCountArgs, "select">
  ): Promise<number> {
    return this.prisma.accountClosingBalance.count(args);
  }

  async accountClosingBalances(
    args: Prisma.AccountClosingBalanceFindManyArgs
  ): Promise<PrismaAccountClosingBalance[]> {
    return this.prisma.accountClosingBalance.findMany(args);
  }
  async accountClosingBalance(
    args: Prisma.AccountClosingBalanceFindUniqueArgs
  ): Promise<PrismaAccountClosingBalance | null> {
    return this.prisma.accountClosingBalance.findUnique(args);
  }
  async createAccountClosingBalance(
    args: Prisma.AccountClosingBalanceCreateArgs
  ): Promise<PrismaAccountClosingBalance> {
    return this.prisma.accountClosingBalance.create(args);
  }
  async updateAccountClosingBalance(
    args: Prisma.AccountClosingBalanceUpdateArgs
  ): Promise<PrismaAccountClosingBalance> {
    return this.prisma.accountClosingBalance.update(args);
  }
  async deleteAccountClosingBalance(
    args: Prisma.AccountClosingBalanceDeleteArgs
  ): Promise<PrismaAccountClosingBalance> {
    return this.prisma.accountClosingBalance.delete(args);
  }
}
