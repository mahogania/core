/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, FiscalYear as PrismaFiscalYear } from "@prisma/client";

export class FiscalYearServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.FiscalYearCountArgs, "select">
  ): Promise<number> {
    return this.prisma.fiscalYear.count(args);
  }

  async fiscalYears(
    args: Prisma.FiscalYearFindManyArgs
  ): Promise<PrismaFiscalYear[]> {
    return this.prisma.fiscalYear.findMany(args);
  }
  async fiscalYear(
    args: Prisma.FiscalYearFindUniqueArgs
  ): Promise<PrismaFiscalYear | null> {
    return this.prisma.fiscalYear.findUnique(args);
  }
  async createFiscalYear(
    args: Prisma.FiscalYearCreateArgs
  ): Promise<PrismaFiscalYear> {
    return this.prisma.fiscalYear.create(args);
  }
  async updateFiscalYear(
    args: Prisma.FiscalYearUpdateArgs
  ): Promise<PrismaFiscalYear> {
    return this.prisma.fiscalYear.update(args);
  }
  async deleteFiscalYear(
    args: Prisma.FiscalYearDeleteArgs
  ): Promise<PrismaFiscalYear> {
    return this.prisma.fiscalYear.delete(args);
  }
}
