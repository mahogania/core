/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  AutoEmailReport as PrismaAutoEmailReport,
} from "@prisma/client";

export class AutoEmailReportServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.AutoEmailReportCountArgs, "select">
  ): Promise<number> {
    return this.prisma.autoEmailReport.count(args);
  }

  async autoEmailReports(
    args: Prisma.AutoEmailReportFindManyArgs
  ): Promise<PrismaAutoEmailReport[]> {
    return this.prisma.autoEmailReport.findMany(args);
  }
  async autoEmailReport(
    args: Prisma.AutoEmailReportFindUniqueArgs
  ): Promise<PrismaAutoEmailReport | null> {
    return this.prisma.autoEmailReport.findUnique(args);
  }
  async createAutoEmailReport(
    args: Prisma.AutoEmailReportCreateArgs
  ): Promise<PrismaAutoEmailReport> {
    return this.prisma.autoEmailReport.create(args);
  }
  async updateAutoEmailReport(
    args: Prisma.AutoEmailReportUpdateArgs
  ): Promise<PrismaAutoEmailReport> {
    return this.prisma.autoEmailReport.update(args);
  }
  async deleteAutoEmailReport(
    args: Prisma.AutoEmailReportDeleteArgs
  ): Promise<PrismaAutoEmailReport> {
    return this.prisma.autoEmailReport.delete(args);
  }
}
