/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  PaymentReconciliation as PrismaPaymentReconciliation,
} from "@prisma/client";

export class PaymentReconciliationServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.PaymentReconciliationCountArgs, "select">
  ): Promise<number> {
    return this.prisma.paymentReconciliation.count(args);
  }

  async paymentReconciliations(
    args: Prisma.PaymentReconciliationFindManyArgs
  ): Promise<PrismaPaymentReconciliation[]> {
    return this.prisma.paymentReconciliation.findMany(args);
  }
  async paymentReconciliation(
    args: Prisma.PaymentReconciliationFindUniqueArgs
  ): Promise<PrismaPaymentReconciliation | null> {
    return this.prisma.paymentReconciliation.findUnique(args);
  }
  async createPaymentReconciliation(
    args: Prisma.PaymentReconciliationCreateArgs
  ): Promise<PrismaPaymentReconciliation> {
    return this.prisma.paymentReconciliation.create(args);
  }
  async updatePaymentReconciliation(
    args: Prisma.PaymentReconciliationUpdateArgs
  ): Promise<PrismaPaymentReconciliation> {
    return this.prisma.paymentReconciliation.update(args);
  }
  async deletePaymentReconciliation(
    args: Prisma.PaymentReconciliationDeleteArgs
  ): Promise<PrismaPaymentReconciliation> {
    return this.prisma.paymentReconciliation.delete(args);
  }
}
