import { FloatNullableFilter } from "../../util/FloatNullableFilter";
import { StringNullableFilter } from "../../util/StringNullableFilter";
import { BooleanNullableFilter } from "../../util/BooleanNullableFilter";
import { DateTimeNullableFilter } from "../../util/DateTimeNullableFilter";
import { IntNullableFilter } from "../../util/IntNullableFilter";
import { StringFilter } from "../../util/StringFilter";

export type StockEntryDetailWhereInput = {
  actualQty?: FloatNullableFilter;
  additionalCost?: FloatNullableFilter;
  againstStockEntry?: StringNullableFilter;
  allowAlternativeItem?: BooleanNullableFilter;
  allowZeroValuationRate?: BooleanNullableFilter;
  amount?: FloatNullableFilter;
  barcode?: StringNullableFilter;
  basicAmount?: FloatNullableFilter;
  basicRate?: FloatNullableFilter;
  batchNo?: StringNullableFilter;
  bomNo?: StringNullableFilter;
  conversionFactor?: FloatNullableFilter;
  costCenter?: StringNullableFilter;
  creation?: DateTimeNullableFilter;
  description?: StringNullableFilter;
  docstatus?: IntNullableFilter;
  expenseAccount?: StringNullableFilter;
  hasItemScanned?: BooleanNullableFilter;
  id?: StringFilter;
  idx?: IntNullableFilter;
  image?: StringNullableFilter;
  isFinishedItem?: BooleanNullableFilter;
  isScrapItem?: BooleanNullableFilter;
  itemCode?: StringNullableFilter;
  itemGroup?: StringNullableFilter;
  itemName?: StringNullableFilter;
  jobCardItem?: StringNullableFilter;
  materialRequest?: StringNullableFilter;
  materialRequestItem?: StringNullableFilter;
  modified?: DateTimeNullableFilter;
  modifiedBy?: StringNullableFilter;
  name?: StringNullableFilter;
  originalItem?: StringNullableFilter;
  owner?: StringNullableFilter;
  parent?: StringNullableFilter;
  parentfield?: StringNullableFilter;
  parenttype?: StringNullableFilter;
  poDetail?: StringNullableFilter;
  project?: StringNullableFilter;
  putawayRule?: StringNullableFilter;
  qty?: FloatNullableFilter;
  qualityInspection?: StringNullableFilter;
  referencePurchaseReceipt?: StringNullableFilter;
  retainSample?: BooleanNullableFilter;
  sWarehouse?: StringNullableFilter;
  sampleQuantity?: IntNullableFilter;
  scoRmDetail?: StringNullableFilter;
  serialAndBatchBundle?: StringNullableFilter;
  serialNo?: StringNullableFilter;
  setBasicRateManually?: BooleanNullableFilter;
  steDetail?: StringNullableFilter;
  stockUom?: StringNullableFilter;
  subcontractedItem?: StringNullableFilter;
  tWarehouse?: StringNullableFilter;
  transferQty?: FloatNullableFilter;
  transferredQty?: FloatNullableFilter;
  uom?: StringNullableFilter;
  useSerialBatchFields?: BooleanNullableFilter;
  valuationRate?: FloatNullableFilter;
};
