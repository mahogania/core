import { SortOrder } from "../../util/SortOrder";

export type BomOrderByInput = {
  allowAlternativeItem?: SortOrder;
  amendedFrom?: SortOrder;
  baseOperatingCost?: SortOrder;
  baseRawMaterialCost?: SortOrder;
  baseScrapMaterialCost?: SortOrder;
  baseTotalCost?: SortOrder;
  bomCreator?: SortOrder;
  bomCreatorItem?: SortOrder;
  buyingPriceList?: SortOrder;
  company?: SortOrder;
  conversionRate?: SortOrder;
  createdAt?: SortOrder;
  creation?: SortOrder;
  currency?: SortOrder;
  description?: SortOrder;
  docstatus?: SortOrder;
  fgBasedOperatingCost?: SortOrder;
  hasVariants?: SortOrder;
  id?: SortOrder;
  idx?: SortOrder;
  image?: SortOrder;
  inspectionRequired?: SortOrder;
  isActive?: SortOrder;
  isDefault?: SortOrder;
  item?: SortOrder;
  itemName?: SortOrder;
  modified?: SortOrder;
  modifiedBy?: SortOrder;
  name?: SortOrder;
  operatingCost?: SortOrder;
  operatingCostPerBomQuantity?: SortOrder;
  owner?: SortOrder;
  plcConversionRate?: SortOrder;
  priceListCurrency?: SortOrder;
  processLossPercentage?: SortOrder;
  processLossQty?: SortOrder;
  project?: SortOrder;
  qualityInspectionTemplate?: SortOrder;
  quantity?: SortOrder;
  rawMaterialCost?: SortOrder;
  rmCostAsPer?: SortOrder;
  route?: SortOrder;
  routing?: SortOrder;
  scrapMaterialCost?: SortOrder;
  setRateOfSubAssemblyItemBasedOnBom?: SortOrder;
  showInWebsite?: SortOrder;
  showItems?: SortOrder;
  showOperations?: SortOrder;
  thumbnail?: SortOrder;
  totalCost?: SortOrder;
  transferMaterialAgainst?: SortOrder;
  uom?: SortOrder;
  updatedAt?: SortOrder;
  webLongDescription?: SortOrder;
  websiteImage?: SortOrder;
  withOperations?: SortOrder;
};
