import { FloatNullableFilter } from "../../util/FloatNullableFilter";
import { StringNullableFilter } from "../../util/StringNullableFilter";
import { IntNullableFilter } from "../../util/IntNullableFilter";
import { DateTimeNullableFilter } from "../../util/DateTimeNullableFilter";
import { StringFilter } from "../../util/StringFilter";

export type SalesOrderItemWhereInput = {
  actualQty?: FloatNullableFilter;
  additionalNotes?: StringNullableFilter;
  againstBlanketOrder?: IntNullableFilter;
  amount?: FloatNullableFilter;
  baseAmount?: FloatNullableFilter;
  baseNetAmount?: FloatNullableFilter;
  baseNetRate?: FloatNullableFilter;
  basePriceListRate?: FloatNullableFilter;
  baseRate?: FloatNullableFilter;
  baseRateWithMargin?: FloatNullableFilter;
  billedAmt?: FloatNullableFilter;
  blanketOrder?: StringNullableFilter;
  blanketOrderRate?: FloatNullableFilter;
  bomNo?: StringNullableFilter;
  brand?: StringNullableFilter;
  conversionFactor?: FloatNullableFilter;
  creation?: DateTimeNullableFilter;
  customerItemCode?: StringNullableFilter;
  deliveredBySupplier?: IntNullableFilter;
  deliveredQty?: FloatNullableFilter;
  deliveryDate?: DateTimeNullableFilter;
  description?: StringNullableFilter;
  discountAmount?: FloatNullableFilter;
  discountPercentage?: FloatNullableFilter;
  docstatus?: IntNullableFilter;
  ensureDeliveryBasedOnProducedSerialNo?: IntNullableFilter;
  grantCommission?: IntNullableFilter;
  grossProfit?: FloatNullableFilter;
  id?: StringFilter;
  idx?: IntNullableFilter;
  image?: StringNullableFilter;
  isFreeItem?: IntNullableFilter;
  isStockItem?: IntNullableFilter;
  itemCode?: StringNullableFilter;
  itemGroup?: StringNullableFilter;
  itemName?: StringNullableFilter;
  itemTaxRate?: StringNullableFilter;
  itemTaxTemplate?: StringNullableFilter;
  marginRateOrAmount?: FloatNullableFilter;
  marginType?: StringNullableFilter;
  materialRequest?: StringNullableFilter;
  materialRequestItem?: StringNullableFilter;
  modified?: DateTimeNullableFilter;
  modifiedBy?: StringNullableFilter;
  name?: StringNullableFilter;
  netAmount?: FloatNullableFilter;
  netRate?: FloatNullableFilter;
  orderedQty?: FloatNullableFilter;
  owner?: StringNullableFilter;
  pageBreak?: IntNullableFilter;
  parent?: StringNullableFilter;
  parentField?: StringNullableFilter;
  parentType?: StringNullableFilter;
  pickedQty?: FloatNullableFilter;
  plannedQty?: FloatNullableFilter;
  prevdocDocname?: StringNullableFilter;
  priceListRate?: FloatNullableFilter;
  pricingRules?: StringNullableFilter;
  producedQty?: FloatNullableFilter;
  productionPlanQty?: FloatNullableFilter;
  projectedQty?: FloatNullableFilter;
  purchaseOrder?: StringNullableFilter;
  purchaseOrderItem?: StringNullableFilter;
  qty?: FloatNullableFilter;
  quotationItem?: StringNullableFilter;
  rate?: FloatNullableFilter;
  rateWithMargin?: FloatNullableFilter;
  reserveStock?: IntNullableFilter;
  returnedQty?: FloatNullableFilter;
  stockQty?: FloatNullableFilter;
  stockReservedQty?: FloatNullableFilter;
  stockUom?: StringNullableFilter;
  stockUomRate?: FloatNullableFilter;
  supplier?: StringNullableFilter;
  targetWarehouse?: StringNullableFilter;
  totalWeight?: FloatNullableFilter;
  transactionDate?: DateTimeNullableFilter;
  uom?: StringNullableFilter;
  valuationRate?: FloatNullableFilter;
  warehouse?: StringNullableFilter;
  weightPerUnit?: FloatNullableFilter;
  weightUom?: StringNullableFilter;
  workOrderQty?: FloatNullableFilter;
};
