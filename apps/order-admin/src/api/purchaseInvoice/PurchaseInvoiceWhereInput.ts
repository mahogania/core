import { FloatNullableFilter } from "../../util/FloatNullableFilter";
import { StringNullableFilter } from "../../util/StringNullableFilter";
import { IntNullableFilter } from "../../util/IntNullableFilter";
import { DateTimeNullableFilter } from "../../util/DateTimeNullableFilter";
import { StringFilter } from "../../util/StringFilter";

export type PurchaseInvoiceWhereInput = {
  additionalDiscountPercentage?: FloatNullableFilter;
  addressDisplay?: StringNullableFilter;
  againstExpenseAccount?: StringNullableFilter;
  allocateAdvancesAutomatically?: IntNullableFilter;
  amendedFrom?: StringNullableFilter;
  applyDiscountOn?: StringNullableFilter;
  applyTds?: IntNullableFilter;
  autoRepeat?: StringNullableFilter;
  baseDiscountAmount?: FloatNullableFilter;
  baseGrandTotal?: FloatNullableFilter;
  baseInWords?: StringNullableFilter;
  baseNetTotal?: FloatNullableFilter;
  basePaidAmount?: FloatNullableFilter;
  baseRoundedTotal?: FloatNullableFilter;
  baseRoundingAdjustment?: FloatNullableFilter;
  baseTaxWithholdingNetTotal?: FloatNullableFilter;
  baseTaxesAndChargesAdded?: FloatNullableFilter;
  baseTaxesAndChargesDeducted?: FloatNullableFilter;
  baseTotal?: FloatNullableFilter;
  baseTotalTaxesAndCharges?: FloatNullableFilter;
  baseWriteOffAmount?: FloatNullableFilter;
  billDate?: DateTimeNullableFilter;
  billNo?: StringNullableFilter;
  billingAddress?: StringNullableFilter;
  billingAddressDisplay?: StringNullableFilter;
  buyingPriceList?: StringNullableFilter;
  cashBankAccount?: StringNullableFilter;
  clearanceDate?: DateTimeNullableFilter;
  company?: StringNullableFilter;
  contactDisplay?: StringNullableFilter;
  contactEmail?: StringNullableFilter;
  contactMobile?: StringNullableFilter;
  contactPerson?: StringNullableFilter;
  conversionRate?: FloatNullableFilter;
  costCenter?: StringNullableFilter;
  creation?: DateTimeNullableFilter;
  creditTo?: StringNullableFilter;
  currency?: StringNullableFilter;
  disableRoundedTotal?: IntNullableFilter;
  discountAmount?: FloatNullableFilter;
  docstatus?: IntNullableFilter;
  dueDate?: DateTimeNullableFilter;
  fromDate?: DateTimeNullableFilter;
  grandTotal?: FloatNullableFilter;
  groupSameItems?: IntNullableFilter;
  holdComment?: StringNullableFilter;
  id?: StringFilter;
  idx?: IntNullableFilter;
  ignoreDefaultPaymentTermsTemplate?: IntNullableFilter;
  ignorePricingRule?: IntNullableFilter;
  inWords?: StringNullableFilter;
  incoterm?: StringNullableFilter;
  interCompanyInvoiceReference?: StringNullableFilter;
  isInternalSupplier?: IntNullableFilter;
  isOldSubcontractingFlow?: IntNullableFilter;
  isOpening?: StringNullableFilter;
  isPaid?: IntNullableFilter;
  isReturn?: IntNullableFilter;
  isSubcontracted?: IntNullableFilter;
  language?: StringNullableFilter;
  letterHead?: StringNullableFilter;
  modeOfPayment?: StringNullableFilter;
  modified?: DateTimeNullableFilter;
  modifiedBy?: StringNullableFilter;
  name?: StringNullableFilter;
  namedPlace?: StringNullableFilter;
  namingSeries?: StringNullableFilter;
  netTotal?: FloatNullableFilter;
  onHold?: IntNullableFilter;
  onlyIncludeAllocatedPayments?: IntNullableFilter;
  otherChargesCalculation?: StringNullableFilter;
  outstandingAmount?: FloatNullableFilter;
  owner?: StringNullableFilter;
  paidAmount?: FloatNullableFilter;
  partyAccountCurrency?: StringNullableFilter;
  paymentTermsTemplate?: StringNullableFilter;
  perReceived?: FloatNullableFilter;
  plcConversionRate?: FloatNullableFilter;
  postingDate?: DateTimeNullableFilter;
  postingTime?: StringNullableFilter;
  priceListCurrency?: StringNullableFilter;
  project?: StringNullableFilter;
  rejectedWarehouse?: StringNullableFilter;
  releaseDate?: DateTimeNullableFilter;
  remarks?: StringNullableFilter;
  representsCompany?: StringNullableFilter;
  returnAgainst?: StringNullableFilter;
  roundedTotal?: FloatNullableFilter;
  roundingAdjustment?: FloatNullableFilter;
  scanBarcode?: StringNullableFilter;
  selectPrintHeading?: StringNullableFilter;
  setFromWarehouse?: StringNullableFilter;
  setPostingTime?: IntNullableFilter;
  setWarehouse?: StringNullableFilter;
  shippingAddress?: StringNullableFilter;
  shippingAddressDisplay?: StringNullableFilter;
  shippingRule?: StringNullableFilter;
  status?: StringNullableFilter;
  subscription?: StringNullableFilter;
  supplier?: StringNullableFilter;
  supplierAddress?: StringNullableFilter;
  supplierGroup?: StringNullableFilter;
  supplierName?: StringNullableFilter;
  supplierWarehouse?: StringNullableFilter;
  taxCategory?: StringNullableFilter;
  taxId?: StringNullableFilter;
  taxWithholdingCategory?: StringNullableFilter;
  taxWithholdingNetTotal?: FloatNullableFilter;
  taxesAndCharges?: StringNullableFilter;
  taxesAndChargesAdded?: FloatNullableFilter;
  taxesAndChargesDeducted?: FloatNullableFilter;
  tcName?: StringNullableFilter;
  terms?: StringNullableFilter;
  title?: StringNullableFilter;
  toDate?: DateTimeNullableFilter;
  total?: FloatNullableFilter;
  totalAdvance?: FloatNullableFilter;
  totalNetWeight?: FloatNullableFilter;
  totalQty?: FloatNullableFilter;
  totalTaxesAndCharges?: FloatNullableFilter;
  unrealizedProfitLossAccount?: StringNullableFilter;
  updateBilledAmountInPurchaseOrder?: IntNullableFilter;
  updateBilledAmountInPurchaseReceipt?: IntNullableFilter;
  updateOutstandingForSelf?: IntNullableFilter;
  updateStock?: IntNullableFilter;
  useCompanyRoundoffCostCenter?: IntNullableFilter;
  useTransactionDateExchangeRate?: IntNullableFilter;
  writeOffAccount?: StringNullableFilter;
  writeOffAmount?: FloatNullableFilter;
  writeOffCostCenter?: StringNullableFilter;
};
