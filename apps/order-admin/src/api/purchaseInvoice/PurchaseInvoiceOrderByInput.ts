import { SortOrder } from "../../util/SortOrder";

export type PurchaseInvoiceOrderByInput = {
  additionalDiscountPercentage?: SortOrder;
  addressDisplay?: SortOrder;
  againstExpenseAccount?: SortOrder;
  allocateAdvancesAutomatically?: SortOrder;
  amendedFrom?: SortOrder;
  applyDiscountOn?: SortOrder;
  applyTds?: SortOrder;
  autoRepeat?: SortOrder;
  baseDiscountAmount?: SortOrder;
  baseGrandTotal?: SortOrder;
  baseInWords?: SortOrder;
  baseNetTotal?: SortOrder;
  basePaidAmount?: SortOrder;
  baseRoundedTotal?: SortOrder;
  baseRoundingAdjustment?: SortOrder;
  baseTaxWithholdingNetTotal?: SortOrder;
  baseTaxesAndChargesAdded?: SortOrder;
  baseTaxesAndChargesDeducted?: SortOrder;
  baseTotal?: SortOrder;
  baseTotalTaxesAndCharges?: SortOrder;
  baseWriteOffAmount?: SortOrder;
  billDate?: SortOrder;
  billNo?: SortOrder;
  billingAddress?: SortOrder;
  billingAddressDisplay?: SortOrder;
  buyingPriceList?: SortOrder;
  cashBankAccount?: SortOrder;
  clearanceDate?: SortOrder;
  company?: SortOrder;
  contactDisplay?: SortOrder;
  contactEmail?: SortOrder;
  contactMobile?: SortOrder;
  contactPerson?: SortOrder;
  conversionRate?: SortOrder;
  costCenter?: SortOrder;
  createdAt?: SortOrder;
  creation?: SortOrder;
  creditTo?: SortOrder;
  currency?: SortOrder;
  disableRoundedTotal?: SortOrder;
  discountAmount?: SortOrder;
  docstatus?: SortOrder;
  dueDate?: SortOrder;
  fromDate?: SortOrder;
  grandTotal?: SortOrder;
  groupSameItems?: SortOrder;
  holdComment?: SortOrder;
  id?: SortOrder;
  idx?: SortOrder;
  ignoreDefaultPaymentTermsTemplate?: SortOrder;
  ignorePricingRule?: SortOrder;
  inWords?: SortOrder;
  incoterm?: SortOrder;
  interCompanyInvoiceReference?: SortOrder;
  isInternalSupplier?: SortOrder;
  isOldSubcontractingFlow?: SortOrder;
  isOpening?: SortOrder;
  isPaid?: SortOrder;
  isReturn?: SortOrder;
  isSubcontracted?: SortOrder;
  language?: SortOrder;
  letterHead?: SortOrder;
  modeOfPayment?: SortOrder;
  modified?: SortOrder;
  modifiedBy?: SortOrder;
  name?: SortOrder;
  namedPlace?: SortOrder;
  namingSeries?: SortOrder;
  netTotal?: SortOrder;
  onHold?: SortOrder;
  onlyIncludeAllocatedPayments?: SortOrder;
  otherChargesCalculation?: SortOrder;
  outstandingAmount?: SortOrder;
  owner?: SortOrder;
  paidAmount?: SortOrder;
  partyAccountCurrency?: SortOrder;
  paymentTermsTemplate?: SortOrder;
  perReceived?: SortOrder;
  plcConversionRate?: SortOrder;
  postingDate?: SortOrder;
  postingTime?: SortOrder;
  priceListCurrency?: SortOrder;
  project?: SortOrder;
  rejectedWarehouse?: SortOrder;
  releaseDate?: SortOrder;
  remarks?: SortOrder;
  representsCompany?: SortOrder;
  returnAgainst?: SortOrder;
  roundedTotal?: SortOrder;
  roundingAdjustment?: SortOrder;
  scanBarcode?: SortOrder;
  selectPrintHeading?: SortOrder;
  setFromWarehouse?: SortOrder;
  setPostingTime?: SortOrder;
  setWarehouse?: SortOrder;
  shippingAddress?: SortOrder;
  shippingAddressDisplay?: SortOrder;
  shippingRule?: SortOrder;
  status?: SortOrder;
  subscription?: SortOrder;
  supplier?: SortOrder;
  supplierAddress?: SortOrder;
  supplierGroup?: SortOrder;
  supplierName?: SortOrder;
  supplierWarehouse?: SortOrder;
  taxCategory?: SortOrder;
  taxId?: SortOrder;
  taxWithholdingCategory?: SortOrder;
  taxWithholdingNetTotal?: SortOrder;
  taxesAndCharges?: SortOrder;
  taxesAndChargesAdded?: SortOrder;
  taxesAndChargesDeducted?: SortOrder;
  tcName?: SortOrder;
  terms?: SortOrder;
  title?: SortOrder;
  toDate?: SortOrder;
  total?: SortOrder;
  totalAdvance?: SortOrder;
  totalNetWeight?: SortOrder;
  totalQty?: SortOrder;
  totalTaxesAndCharges?: SortOrder;
  unrealizedProfitLossAccount?: SortOrder;
  updateBilledAmountInPurchaseOrder?: SortOrder;
  updateBilledAmountInPurchaseReceipt?: SortOrder;
  updateOutstandingForSelf?: SortOrder;
  updateStock?: SortOrder;
  updatedAt?: SortOrder;
  useCompanyRoundoffCostCenter?: SortOrder;
  useTransactionDateExchangeRate?: SortOrder;
  writeOffAccount?: SortOrder;
  writeOffAmount?: SortOrder;
  writeOffCostCenter?: SortOrder;
};
