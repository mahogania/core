import { FloatNullableFilter } from "../../util/FloatNullableFilter";
import { StringNullableFilter } from "../../util/StringNullableFilter";
import { DateTimeNullableFilter } from "../../util/DateTimeNullableFilter";
import { IntNullableFilter } from "../../util/IntNullableFilter";
import { StringFilter } from "../../util/StringFilter";

export type QuotationWhereInput = {
  additionalDiscountPercentage?: FloatNullableFilter;
  addressDisplay?: StringNullableFilter;
  amendedFrom?: StringNullableFilter;
  applyDiscountOn?: StringNullableFilter;
  autoRepeat?: StringNullableFilter;
  baseDiscountAmount?: FloatNullableFilter;
  baseGrandTotal?: FloatNullableFilter;
  baseInWords?: StringNullableFilter;
  baseNetTotal?: FloatNullableFilter;
  baseRoundedTotal?: FloatNullableFilter;
  baseRoundingAdjustment?: FloatNullableFilter;
  baseTotal?: FloatNullableFilter;
  baseTotalTaxesAndCharges?: FloatNullableFilter;
  campaign?: StringNullableFilter;
  company?: StringNullableFilter;
  companyAddress?: StringNullableFilter;
  companyAddressDisplay?: StringNullableFilter;
  contactDisplay?: StringNullableFilter;
  contactEmail?: StringNullableFilter;
  contactMobile?: StringNullableFilter;
  contactPerson?: StringNullableFilter;
  conversionRate?: FloatNullableFilter;
  couponCode?: StringNullableFilter;
  creation?: DateTimeNullableFilter;
  currency?: StringNullableFilter;
  customerAddress?: StringNullableFilter;
  customerGroup?: StringNullableFilter;
  customerName?: StringNullableFilter;
  discountAmount?: FloatNullableFilter;
  docstatus?: IntNullableFilter;
  enqDet?: StringNullableFilter;
  grandTotal?: FloatNullableFilter;
  groupSameItems?: IntNullableFilter;
  id?: StringFilter;
  idx?: IntNullableFilter;
  ignorePricingRule?: IntNullableFilter;
  inWords?: StringNullableFilter;
  incoterm?: StringNullableFilter;
  language?: StringNullableFilter;
  letterHead?: StringNullableFilter;
  modified?: DateTimeNullableFilter;
  modifiedBy?: StringNullableFilter;
  name?: StringNullableFilter;
  namedPlace?: StringNullableFilter;
  namingSeries?: StringNullableFilter;
  netTotal?: FloatNullableFilter;
  opportunity?: StringNullableFilter;
  orderLostReason?: StringNullableFilter;
  orderType?: StringNullableFilter;
  otherChargesCalculation?: StringNullableFilter;
  owner?: StringNullableFilter;
  partyName?: StringNullableFilter;
  paymentTermsTemplate?: StringNullableFilter;
  plcConversionRate?: FloatNullableFilter;
  priceListCurrency?: StringNullableFilter;
  quotationTo?: StringNullableFilter;
  referralSalesPartner?: StringNullableFilter;
  roundedTotal?: FloatNullableFilter;
  roundingAdjustment?: FloatNullableFilter;
  scanBarcode?: StringNullableFilter;
  selectPrintHeading?: StringNullableFilter;
  sellingPriceList?: StringNullableFilter;
  shippingAddress?: StringNullableFilter;
  shippingAddressName?: StringNullableFilter;
  shippingRule?: StringNullableFilter;
  source?: StringNullableFilter;
  status?: StringNullableFilter;
  supplierQuotation?: StringNullableFilter;
  taxCategory?: StringNullableFilter;
  taxesAndCharges?: StringNullableFilter;
  tcName?: StringNullableFilter;
  terms?: StringNullableFilter;
  territory?: StringNullableFilter;
  title?: StringNullableFilter;
  total?: FloatNullableFilter;
  totalNetWeight?: FloatNullableFilter;
  totalQty?: FloatNullableFilter;
  totalTaxesAndCharges?: FloatNullableFilter;
  transactionDate?: DateTimeNullableFilter;
  validTill?: DateTimeNullableFilter;
};
