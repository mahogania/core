/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, PosProfileUser as PrismaPosProfileUser } from "@prisma/client";

export class PosProfileUserServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.PosProfileUserCountArgs, "select">
  ): Promise<number> {
    return this.prisma.posProfileUser.count(args);
  }

  async posProfileUsers(
    args: Prisma.PosProfileUserFindManyArgs
  ): Promise<PrismaPosProfileUser[]> {
    return this.prisma.posProfileUser.findMany(args);
  }
  async posProfileUser(
    args: Prisma.PosProfileUserFindUniqueArgs
  ): Promise<PrismaPosProfileUser | null> {
    return this.prisma.posProfileUser.findUnique(args);
  }
  async createPosProfileUser(
    args: Prisma.PosProfileUserCreateArgs
  ): Promise<PrismaPosProfileUser> {
    return this.prisma.posProfileUser.create(args);
  }
  async updatePosProfileUser(
    args: Prisma.PosProfileUserUpdateArgs
  ): Promise<PrismaPosProfileUser> {
    return this.prisma.posProfileUser.update(args);
  }
  async deletePosProfileUser(
    args: Prisma.PosProfileUserDeleteArgs
  ): Promise<PrismaPosProfileUser> {
    return this.prisma.posProfileUser.delete(args);
  }
}
