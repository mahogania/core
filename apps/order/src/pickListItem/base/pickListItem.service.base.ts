/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, PickListItem as PrismaPickListItem } from "@prisma/client";

export class PickListItemServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.PickListItemCountArgs, "select">
  ): Promise<number> {
    return this.prisma.pickListItem.count(args);
  }

  async pickListItems(
    args: Prisma.PickListItemFindManyArgs
  ): Promise<PrismaPickListItem[]> {
    return this.prisma.pickListItem.findMany(args);
  }
  async pickListItem(
    args: Prisma.PickListItemFindUniqueArgs
  ): Promise<PrismaPickListItem | null> {
    return this.prisma.pickListItem.findUnique(args);
  }
  async createPickListItem(
    args: Prisma.PickListItemCreateArgs
  ): Promise<PrismaPickListItem> {
    return this.prisma.pickListItem.create(args);
  }
  async updatePickListItem(
    args: Prisma.PickListItemUpdateArgs
  ): Promise<PrismaPickListItem> {
    return this.prisma.pickListItem.update(args);
  }
  async deletePickListItem(
    args: Prisma.PickListItemDeleteArgs
  ): Promise<PrismaPickListItem> {
    return this.prisma.pickListItem.delete(args);
  }
}
