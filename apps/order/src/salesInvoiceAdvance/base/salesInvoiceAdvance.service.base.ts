/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  SalesInvoiceAdvance as PrismaSalesInvoiceAdvance,
} from "@prisma/client";

export class SalesInvoiceAdvanceServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.SalesInvoiceAdvanceCountArgs, "select">
  ): Promise<number> {
    return this.prisma.salesInvoiceAdvance.count(args);
  }

  async salesInvoiceAdvances(
    args: Prisma.SalesInvoiceAdvanceFindManyArgs
  ): Promise<PrismaSalesInvoiceAdvance[]> {
    return this.prisma.salesInvoiceAdvance.findMany(args);
  }
  async salesInvoiceAdvance(
    args: Prisma.SalesInvoiceAdvanceFindUniqueArgs
  ): Promise<PrismaSalesInvoiceAdvance | null> {
    return this.prisma.salesInvoiceAdvance.findUnique(args);
  }
  async createSalesInvoiceAdvance(
    args: Prisma.SalesInvoiceAdvanceCreateArgs
  ): Promise<PrismaSalesInvoiceAdvance> {
    return this.prisma.salesInvoiceAdvance.create(args);
  }
  async updateSalesInvoiceAdvance(
    args: Prisma.SalesInvoiceAdvanceUpdateArgs
  ): Promise<PrismaSalesInvoiceAdvance> {
    return this.prisma.salesInvoiceAdvance.update(args);
  }
  async deleteSalesInvoiceAdvance(
    args: Prisma.SalesInvoiceAdvanceDeleteArgs
  ): Promise<PrismaSalesInvoiceAdvance> {
    return this.prisma.salesInvoiceAdvance.delete(args);
  }
}
