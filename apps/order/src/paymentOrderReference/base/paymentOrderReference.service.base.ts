/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  PaymentOrderReference as PrismaPaymentOrderReference,
} from "@prisma/client";

export class PaymentOrderReferenceServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.PaymentOrderReferenceCountArgs, "select">
  ): Promise<number> {
    return this.prisma.paymentOrderReference.count(args);
  }

  async paymentOrderReferences(
    args: Prisma.PaymentOrderReferenceFindManyArgs
  ): Promise<PrismaPaymentOrderReference[]> {
    return this.prisma.paymentOrderReference.findMany(args);
  }
  async paymentOrderReference(
    args: Prisma.PaymentOrderReferenceFindUniqueArgs
  ): Promise<PrismaPaymentOrderReference | null> {
    return this.prisma.paymentOrderReference.findUnique(args);
  }
  async createPaymentOrderReference(
    args: Prisma.PaymentOrderReferenceCreateArgs
  ): Promise<PrismaPaymentOrderReference> {
    return this.prisma.paymentOrderReference.create(args);
  }
  async updatePaymentOrderReference(
    args: Prisma.PaymentOrderReferenceUpdateArgs
  ): Promise<PrismaPaymentOrderReference> {
    return this.prisma.paymentOrderReference.update(args);
  }
  async deletePaymentOrderReference(
    args: Prisma.PaymentOrderReferenceDeleteArgs
  ): Promise<PrismaPaymentOrderReference> {
    return this.prisma.paymentOrderReference.delete(args);
  }
}
