/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  PosCustomerGroup as PrismaPosCustomerGroup,
} from "@prisma/client";

export class PosCustomerGroupServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.PosCustomerGroupCountArgs, "select">
  ): Promise<number> {
    return this.prisma.posCustomerGroup.count(args);
  }

  async posCustomerGroups(
    args: Prisma.PosCustomerGroupFindManyArgs
  ): Promise<PrismaPosCustomerGroup[]> {
    return this.prisma.posCustomerGroup.findMany(args);
  }
  async posCustomerGroup(
    args: Prisma.PosCustomerGroupFindUniqueArgs
  ): Promise<PrismaPosCustomerGroup | null> {
    return this.prisma.posCustomerGroup.findUnique(args);
  }
  async createPosCustomerGroup(
    args: Prisma.PosCustomerGroupCreateArgs
  ): Promise<PrismaPosCustomerGroup> {
    return this.prisma.posCustomerGroup.create(args);
  }
  async updatePosCustomerGroup(
    args: Prisma.PosCustomerGroupUpdateArgs
  ): Promise<PrismaPosCustomerGroup> {
    return this.prisma.posCustomerGroup.update(args);
  }
  async deletePosCustomerGroup(
    args: Prisma.PosCustomerGroupDeleteArgs
  ): Promise<PrismaPosCustomerGroup> {
    return this.prisma.posCustomerGroup.delete(args);
  }
}
