/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  BlanketOrderItem as PrismaBlanketOrderItem,
} from "@prisma/client";

export class BlanketOrderItemServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.BlanketOrderItemCountArgs, "select">
  ): Promise<number> {
    return this.prisma.blanketOrderItem.count(args);
  }

  async blanketOrderItems(
    args: Prisma.BlanketOrderItemFindManyArgs
  ): Promise<PrismaBlanketOrderItem[]> {
    return this.prisma.blanketOrderItem.findMany(args);
  }
  async blanketOrderItem(
    args: Prisma.BlanketOrderItemFindUniqueArgs
  ): Promise<PrismaBlanketOrderItem | null> {
    return this.prisma.blanketOrderItem.findUnique(args);
  }
  async createBlanketOrderItem(
    args: Prisma.BlanketOrderItemCreateArgs
  ): Promise<PrismaBlanketOrderItem> {
    return this.prisma.blanketOrderItem.create(args);
  }
  async updateBlanketOrderItem(
    args: Prisma.BlanketOrderItemUpdateArgs
  ): Promise<PrismaBlanketOrderItem> {
    return this.prisma.blanketOrderItem.update(args);
  }
  async deleteBlanketOrderItem(
    args: Prisma.BlanketOrderItemDeleteArgs
  ): Promise<PrismaBlanketOrderItem> {
    return this.prisma.blanketOrderItem.delete(args);
  }
}
