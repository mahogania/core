/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  PaymentEntryReference as PrismaPaymentEntryReference,
} from "@prisma/client";

export class PaymentEntryReferenceServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.PaymentEntryReferenceCountArgs, "select">
  ): Promise<number> {
    return this.prisma.paymentEntryReference.count(args);
  }

  async paymentEntryReferences(
    args: Prisma.PaymentEntryReferenceFindManyArgs
  ): Promise<PrismaPaymentEntryReference[]> {
    return this.prisma.paymentEntryReference.findMany(args);
  }
  async paymentEntryReference(
    args: Prisma.PaymentEntryReferenceFindUniqueArgs
  ): Promise<PrismaPaymentEntryReference | null> {
    return this.prisma.paymentEntryReference.findUnique(args);
  }
  async createPaymentEntryReference(
    args: Prisma.PaymentEntryReferenceCreateArgs
  ): Promise<PrismaPaymentEntryReference> {
    return this.prisma.paymentEntryReference.create(args);
  }
  async updatePaymentEntryReference(
    args: Prisma.PaymentEntryReferenceUpdateArgs
  ): Promise<PrismaPaymentEntryReference> {
    return this.prisma.paymentEntryReference.update(args);
  }
  async deletePaymentEntryReference(
    args: Prisma.PaymentEntryReferenceDeleteArgs
  ): Promise<PrismaPaymentEntryReference> {
    return this.prisma.paymentEntryReference.delete(args);
  }
}
