/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  PosInvoiceReference as PrismaPosInvoiceReference,
} from "@prisma/client";

export class PosInvoiceReferenceServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.PosInvoiceReferenceCountArgs, "select">
  ): Promise<number> {
    return this.prisma.posInvoiceReference.count(args);
  }

  async posInvoiceReferences(
    args: Prisma.PosInvoiceReferenceFindManyArgs
  ): Promise<PrismaPosInvoiceReference[]> {
    return this.prisma.posInvoiceReference.findMany(args);
  }
  async posInvoiceReference(
    args: Prisma.PosInvoiceReferenceFindUniqueArgs
  ): Promise<PrismaPosInvoiceReference | null> {
    return this.prisma.posInvoiceReference.findUnique(args);
  }
  async createPosInvoiceReference(
    args: Prisma.PosInvoiceReferenceCreateArgs
  ): Promise<PrismaPosInvoiceReference> {
    return this.prisma.posInvoiceReference.create(args);
  }
  async updatePosInvoiceReference(
    args: Prisma.PosInvoiceReferenceUpdateArgs
  ): Promise<PrismaPosInvoiceReference> {
    return this.prisma.posInvoiceReference.update(args);
  }
  async deletePosInvoiceReference(
    args: Prisma.PosInvoiceReferenceDeleteArgs
  ): Promise<PrismaPosInvoiceReference> {
    return this.prisma.posInvoiceReference.delete(args);
  }
}
