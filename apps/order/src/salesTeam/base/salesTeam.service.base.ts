/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, SalesTeam as PrismaSalesTeam } from "@prisma/client";

export class SalesTeamServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.SalesTeamCountArgs, "select">
  ): Promise<number> {
    return this.prisma.salesTeam.count(args);
  }

  async salesTeams(
    args: Prisma.SalesTeamFindManyArgs
  ): Promise<PrismaSalesTeam[]> {
    return this.prisma.salesTeam.findMany(args);
  }
  async salesTeam(
    args: Prisma.SalesTeamFindUniqueArgs
  ): Promise<PrismaSalesTeam | null> {
    return this.prisma.salesTeam.findUnique(args);
  }
  async createSalesTeam(
    args: Prisma.SalesTeamCreateArgs
  ): Promise<PrismaSalesTeam> {
    return this.prisma.salesTeam.create(args);
  }
  async updateSalesTeam(
    args: Prisma.SalesTeamUpdateArgs
  ): Promise<PrismaSalesTeam> {
    return this.prisma.salesTeam.update(args);
  }
  async deleteSalesTeam(
    args: Prisma.SalesTeamDeleteArgs
  ): Promise<PrismaSalesTeam> {
    return this.prisma.salesTeam.delete(args);
  }
}
