/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  SubcontractingReceiptItem as PrismaSubcontractingReceiptItem,
} from "@prisma/client";

export class SubcontractingReceiptItemServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.SubcontractingReceiptItemCountArgs, "select">
  ): Promise<number> {
    return this.prisma.subcontractingReceiptItem.count(args);
  }

  async subcontractingReceiptItems(
    args: Prisma.SubcontractingReceiptItemFindManyArgs
  ): Promise<PrismaSubcontractingReceiptItem[]> {
    return this.prisma.subcontractingReceiptItem.findMany(args);
  }
  async subcontractingReceiptItem(
    args: Prisma.SubcontractingReceiptItemFindUniqueArgs
  ): Promise<PrismaSubcontractingReceiptItem | null> {
    return this.prisma.subcontractingReceiptItem.findUnique(args);
  }
  async createSubcontractingReceiptItem(
    args: Prisma.SubcontractingReceiptItemCreateArgs
  ): Promise<PrismaSubcontractingReceiptItem> {
    return this.prisma.subcontractingReceiptItem.create(args);
  }
  async updateSubcontractingReceiptItem(
    args: Prisma.SubcontractingReceiptItemUpdateArgs
  ): Promise<PrismaSubcontractingReceiptItem> {
    return this.prisma.subcontractingReceiptItem.update(args);
  }
  async deleteSubcontractingReceiptItem(
    args: Prisma.SubcontractingReceiptItemDeleteArgs
  ): Promise<PrismaSubcontractingReceiptItem> {
    return this.prisma.subcontractingReceiptItem.delete(args);
  }
}
