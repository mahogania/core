/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, SalesOrderItem as PrismaSalesOrderItem } from "@prisma/client";

export class SalesOrderItemServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.SalesOrderItemCountArgs, "select">
  ): Promise<number> {
    return this.prisma.salesOrderItem.count(args);
  }

  async salesOrderItems(
    args: Prisma.SalesOrderItemFindManyArgs
  ): Promise<PrismaSalesOrderItem[]> {
    return this.prisma.salesOrderItem.findMany(args);
  }
  async salesOrderItem(
    args: Prisma.SalesOrderItemFindUniqueArgs
  ): Promise<PrismaSalesOrderItem | null> {
    return this.prisma.salesOrderItem.findUnique(args);
  }
  async createSalesOrderItem(
    args: Prisma.SalesOrderItemCreateArgs
  ): Promise<PrismaSalesOrderItem> {
    return this.prisma.salesOrderItem.create(args);
  }
  async updateSalesOrderItem(
    args: Prisma.SalesOrderItemUpdateArgs
  ): Promise<PrismaSalesOrderItem> {
    return this.prisma.salesOrderItem.update(args);
  }
  async deleteSalesOrderItem(
    args: Prisma.SalesOrderItemDeleteArgs
  ): Promise<PrismaSalesOrderItem> {
    return this.prisma.salesOrderItem.delete(args);
  }
}
