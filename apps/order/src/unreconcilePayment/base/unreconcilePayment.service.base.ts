/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  UnreconcilePayment as PrismaUnreconcilePayment,
} from "@prisma/client";

export class UnreconcilePaymentServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.UnreconcilePaymentCountArgs, "select">
  ): Promise<number> {
    return this.prisma.unreconcilePayment.count(args);
  }

  async unreconcilePayments(
    args: Prisma.UnreconcilePaymentFindManyArgs
  ): Promise<PrismaUnreconcilePayment[]> {
    return this.prisma.unreconcilePayment.findMany(args);
  }
  async unreconcilePayment(
    args: Prisma.UnreconcilePaymentFindUniqueArgs
  ): Promise<PrismaUnreconcilePayment | null> {
    return this.prisma.unreconcilePayment.findUnique(args);
  }
  async createUnreconcilePayment(
    args: Prisma.UnreconcilePaymentCreateArgs
  ): Promise<PrismaUnreconcilePayment> {
    return this.prisma.unreconcilePayment.create(args);
  }
  async updateUnreconcilePayment(
    args: Prisma.UnreconcilePaymentUpdateArgs
  ): Promise<PrismaUnreconcilePayment> {
    return this.prisma.unreconcilePayment.update(args);
  }
  async deleteUnreconcilePayment(
    args: Prisma.UnreconcilePaymentDeleteArgs
  ): Promise<PrismaUnreconcilePayment> {
    return this.prisma.unreconcilePayment.delete(args);
  }
}
