/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, PosProfile as PrismaPosProfile } from "@prisma/client";

export class PosProfileServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.PosProfileCountArgs, "select">
  ): Promise<number> {
    return this.prisma.posProfile.count(args);
  }

  async posProfiles(
    args: Prisma.PosProfileFindManyArgs
  ): Promise<PrismaPosProfile[]> {
    return this.prisma.posProfile.findMany(args);
  }
  async posProfile(
    args: Prisma.PosProfileFindUniqueArgs
  ): Promise<PrismaPosProfile | null> {
    return this.prisma.posProfile.findUnique(args);
  }
  async createPosProfile(
    args: Prisma.PosProfileCreateArgs
  ): Promise<PrismaPosProfile> {
    return this.prisma.posProfile.create(args);
  }
  async updatePosProfile(
    args: Prisma.PosProfileUpdateArgs
  ): Promise<PrismaPosProfile> {
    return this.prisma.posProfile.update(args);
  }
  async deletePosProfile(
    args: Prisma.PosProfileDeleteArgs
  ): Promise<PrismaPosProfile> {
    return this.prisma.posProfile.delete(args);
  }
}
