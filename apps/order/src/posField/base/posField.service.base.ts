/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, PosField as PrismaPosField } from "@prisma/client";

export class PosFieldServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.PosFieldCountArgs, "select">): Promise<number> {
    return this.prisma.posField.count(args);
  }

  async posFields(
    args: Prisma.PosFieldFindManyArgs
  ): Promise<PrismaPosField[]> {
    return this.prisma.posField.findMany(args);
  }
  async posField(
    args: Prisma.PosFieldFindUniqueArgs
  ): Promise<PrismaPosField | null> {
    return this.prisma.posField.findUnique(args);
  }
  async createPosField(
    args: Prisma.PosFieldCreateArgs
  ): Promise<PrismaPosField> {
    return this.prisma.posField.create(args);
  }
  async updatePosField(
    args: Prisma.PosFieldUpdateArgs
  ): Promise<PrismaPosField> {
    return this.prisma.posField.update(args);
  }
  async deletePosField(
    args: Prisma.PosFieldDeleteArgs
  ): Promise<PrismaPosField> {
    return this.prisma.posField.delete(args);
  }
}
