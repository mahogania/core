/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  ModeOfPaymentAccount as PrismaModeOfPaymentAccount,
} from "@prisma/client";

export class ModeOfPaymentAccountServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.ModeOfPaymentAccountCountArgs, "select">
  ): Promise<number> {
    return this.prisma.modeOfPaymentAccount.count(args);
  }

  async modeOfPaymentAccounts(
    args: Prisma.ModeOfPaymentAccountFindManyArgs
  ): Promise<PrismaModeOfPaymentAccount[]> {
    return this.prisma.modeOfPaymentAccount.findMany(args);
  }
  async modeOfPaymentAccount(
    args: Prisma.ModeOfPaymentAccountFindUniqueArgs
  ): Promise<PrismaModeOfPaymentAccount | null> {
    return this.prisma.modeOfPaymentAccount.findUnique(args);
  }
  async createModeOfPaymentAccount(
    args: Prisma.ModeOfPaymentAccountCreateArgs
  ): Promise<PrismaModeOfPaymentAccount> {
    return this.prisma.modeOfPaymentAccount.create(args);
  }
  async updateModeOfPaymentAccount(
    args: Prisma.ModeOfPaymentAccountUpdateArgs
  ): Promise<PrismaModeOfPaymentAccount> {
    return this.prisma.modeOfPaymentAccount.update(args);
  }
  async deleteModeOfPaymentAccount(
    args: Prisma.ModeOfPaymentAccountDeleteArgs
  ): Promise<PrismaModeOfPaymentAccount> {
    return this.prisma.modeOfPaymentAccount.delete(args);
  }
}
