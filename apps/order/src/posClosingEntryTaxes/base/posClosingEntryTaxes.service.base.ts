/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  PosClosingEntryTaxes as PrismaPosClosingEntryTaxes,
} from "@prisma/client";

export class PosClosingEntryTaxesServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.PosClosingEntryTaxesCountArgs, "select">
  ): Promise<number> {
    return this.prisma.posClosingEntryTaxes.count(args);
  }

  async posClosingEntryTaxesItems(
    args: Prisma.PosClosingEntryTaxesFindManyArgs
  ): Promise<PrismaPosClosingEntryTaxes[]> {
    return this.prisma.posClosingEntryTaxes.findMany(args);
  }
  async posClosingEntryTaxes(
    args: Prisma.PosClosingEntryTaxesFindUniqueArgs
  ): Promise<PrismaPosClosingEntryTaxes | null> {
    return this.prisma.posClosingEntryTaxes.findUnique(args);
  }
  async createPosClosingEntryTaxes(
    args: Prisma.PosClosingEntryTaxesCreateArgs
  ): Promise<PrismaPosClosingEntryTaxes> {
    return this.prisma.posClosingEntryTaxes.create(args);
  }
  async updatePosClosingEntryTaxes(
    args: Prisma.PosClosingEntryTaxesUpdateArgs
  ): Promise<PrismaPosClosingEntryTaxes> {
    return this.prisma.posClosingEntryTaxes.update(args);
  }
  async deletePosClosingEntryTaxes(
    args: Prisma.PosClosingEntryTaxesDeleteArgs
  ): Promise<PrismaPosClosingEntryTaxes> {
    return this.prisma.posClosingEntryTaxes.delete(args);
  }
}
