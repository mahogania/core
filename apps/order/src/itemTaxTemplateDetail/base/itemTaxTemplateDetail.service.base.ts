/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  ItemTaxTemplateDetail as PrismaItemTaxTemplateDetail,
} from "@prisma/client";

export class ItemTaxTemplateDetailServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.ItemTaxTemplateDetailCountArgs, "select">
  ): Promise<number> {
    return this.prisma.itemTaxTemplateDetail.count(args);
  }

  async itemTaxTemplateDetails(
    args: Prisma.ItemTaxTemplateDetailFindManyArgs
  ): Promise<PrismaItemTaxTemplateDetail[]> {
    return this.prisma.itemTaxTemplateDetail.findMany(args);
  }
  async itemTaxTemplateDetail(
    args: Prisma.ItemTaxTemplateDetailFindUniqueArgs
  ): Promise<PrismaItemTaxTemplateDetail | null> {
    return this.prisma.itemTaxTemplateDetail.findUnique(args);
  }
  async createItemTaxTemplateDetail(
    args: Prisma.ItemTaxTemplateDetailCreateArgs
  ): Promise<PrismaItemTaxTemplateDetail> {
    return this.prisma.itemTaxTemplateDetail.create(args);
  }
  async updateItemTaxTemplateDetail(
    args: Prisma.ItemTaxTemplateDetailUpdateArgs
  ): Promise<PrismaItemTaxTemplateDetail> {
    return this.prisma.itemTaxTemplateDetail.update(args);
  }
  async deleteItemTaxTemplateDetail(
    args: Prisma.ItemTaxTemplateDetailDeleteArgs
  ): Promise<PrismaItemTaxTemplateDetail> {
    return this.prisma.itemTaxTemplateDetail.delete(args);
  }
}
