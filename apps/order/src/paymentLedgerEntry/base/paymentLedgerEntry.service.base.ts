/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  PaymentLedgerEntry as PrismaPaymentLedgerEntry,
} from "@prisma/client";

export class PaymentLedgerEntryServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.PaymentLedgerEntryCountArgs, "select">
  ): Promise<number> {
    return this.prisma.paymentLedgerEntry.count(args);
  }

  async paymentLedgerEntries(
    args: Prisma.PaymentLedgerEntryFindManyArgs
  ): Promise<PrismaPaymentLedgerEntry[]> {
    return this.prisma.paymentLedgerEntry.findMany(args);
  }
  async paymentLedgerEntry(
    args: Prisma.PaymentLedgerEntryFindUniqueArgs
  ): Promise<PrismaPaymentLedgerEntry | null> {
    return this.prisma.paymentLedgerEntry.findUnique(args);
  }
  async createPaymentLedgerEntry(
    args: Prisma.PaymentLedgerEntryCreateArgs
  ): Promise<PrismaPaymentLedgerEntry> {
    return this.prisma.paymentLedgerEntry.create(args);
  }
  async updatePaymentLedgerEntry(
    args: Prisma.PaymentLedgerEntryUpdateArgs
  ): Promise<PrismaPaymentLedgerEntry> {
    return this.prisma.paymentLedgerEntry.update(args);
  }
  async deletePaymentLedgerEntry(
    args: Prisma.PaymentLedgerEntryDeleteArgs
  ): Promise<PrismaPaymentLedgerEntry> {
    return this.prisma.paymentLedgerEntry.delete(args);
  }
}
