/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  TbClreDedMdlStsz as PrismaTbClreDedMdlStsz,
} from "@prisma/client";

export class TbClreDedMdlStszServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.TbClreDedMdlStszCountArgs, "select">
  ): Promise<number> {
    return this.prisma.tbClreDedMdlStsz.count(args);
  }

  async tbClreDedMdlStszs(
    args: Prisma.TbClreDedMdlStszFindManyArgs
  ): Promise<PrismaTbClreDedMdlStsz[]> {
    return this.prisma.tbClreDedMdlStsz.findMany(args);
  }
  async tbClreDedMdlStsz(
    args: Prisma.TbClreDedMdlStszFindUniqueArgs
  ): Promise<PrismaTbClreDedMdlStsz | null> {
    return this.prisma.tbClreDedMdlStsz.findUnique(args);
  }
  async createTbClreDedMdlStsz(
    args: Prisma.TbClreDedMdlStszCreateArgs
  ): Promise<PrismaTbClreDedMdlStsz> {
    return this.prisma.tbClreDedMdlStsz.create(args);
  }
  async updateTbClreDedMdlStsz(
    args: Prisma.TbClreDedMdlStszUpdateArgs
  ): Promise<PrismaTbClreDedMdlStsz> {
    return this.prisma.tbClreDedMdlStsz.update(args);
  }
  async deleteTbClreDedMdlStsz(
    args: Prisma.TbClreDedMdlStszDeleteArgs
  ): Promise<PrismaTbClreDedMdlStsz> {
    return this.prisma.tbClreDedMdlStsz.delete(args);
  }
}
