/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, ClreDedMg as PrismaClreDedMg } from "@prisma/client";

export class ClreDedMgServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.ClreDedMgCountArgs, "select">
  ): Promise<number> {
    return this.prisma.clreDedMg.count(args);
  }

  async clreDedMgs(
    args: Prisma.ClreDedMgFindManyArgs
  ): Promise<PrismaClreDedMg[]> {
    return this.prisma.clreDedMg.findMany(args);
  }
  async clreDedMg(
    args: Prisma.ClreDedMgFindUniqueArgs
  ): Promise<PrismaClreDedMg | null> {
    return this.prisma.clreDedMg.findUnique(args);
  }
  async createClreDedMg(
    args: Prisma.ClreDedMgCreateArgs
  ): Promise<PrismaClreDedMg> {
    return this.prisma.clreDedMg.create(args);
  }
  async updateClreDedMg(
    args: Prisma.ClreDedMgUpdateArgs
  ): Promise<PrismaClreDedMg> {
    return this.prisma.clreDedMg.update(args);
  }
  async deleteClreDedMg(
    args: Prisma.ClreDedMgDeleteArgs
  ): Promise<PrismaClreDedMg> {
    return this.prisma.clreDedMg.delete(args);
  }
}
