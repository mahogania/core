/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, TbClreDedTax as PrismaTbClreDedTax } from "@prisma/client";

export class TbClreDedTaxServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.TbClreDedTaxCountArgs, "select">
  ): Promise<number> {
    return this.prisma.tbClreDedTax.count(args);
  }

  async tbClreDedTaxes(
    args: Prisma.TbClreDedTaxFindManyArgs
  ): Promise<PrismaTbClreDedTax[]> {
    return this.prisma.tbClreDedTax.findMany(args);
  }
  async tbClreDedTax(
    args: Prisma.TbClreDedTaxFindUniqueArgs
  ): Promise<PrismaTbClreDedTax | null> {
    return this.prisma.tbClreDedTax.findUnique(args);
  }
  async createTbClreDedTax(
    args: Prisma.TbClreDedTaxCreateArgs
  ): Promise<PrismaTbClreDedTax> {
    return this.prisma.tbClreDedTax.create(args);
  }
  async updateTbClreDedTax(
    args: Prisma.TbClreDedTaxUpdateArgs
  ): Promise<PrismaTbClreDedTax> {
    return this.prisma.tbClreDedTax.update(args);
  }
  async deleteTbClreDedTax(
    args: Prisma.TbClreDedTaxDeleteArgs
  ): Promise<PrismaTbClreDedTax> {
    return this.prisma.tbClreDedTax.delete(args);
  }
}
