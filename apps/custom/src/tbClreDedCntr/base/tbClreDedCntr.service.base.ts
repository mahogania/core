/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, TbClreDedCntr as PrismaTbClreDedCntr } from "@prisma/client";

export class TbClreDedCntrServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.TbClreDedCntrCountArgs, "select">
  ): Promise<number> {
    return this.prisma.tbClreDedCntr.count(args);
  }

  async tbClreDedCntrs(
    args: Prisma.TbClreDedCntrFindManyArgs
  ): Promise<PrismaTbClreDedCntr[]> {
    return this.prisma.tbClreDedCntr.findMany(args);
  }
  async tbClreDedCntr(
    args: Prisma.TbClreDedCntrFindUniqueArgs
  ): Promise<PrismaTbClreDedCntr | null> {
    return this.prisma.tbClreDedCntr.findUnique(args);
  }
  async createTbClreDedCntr(
    args: Prisma.TbClreDedCntrCreateArgs
  ): Promise<PrismaTbClreDedCntr> {
    return this.prisma.tbClreDedCntr.create(args);
  }
  async updateTbClreDedCntr(
    args: Prisma.TbClreDedCntrUpdateArgs
  ): Promise<PrismaTbClreDedCntr> {
    return this.prisma.tbClreDedCntr.update(args);
  }
  async deleteTbClreDedCntr(
    args: Prisma.TbClreDedCntrDeleteArgs
  ): Promise<PrismaTbClreDedCntr> {
    return this.prisma.tbClreDedCntr.delete(args);
  }
}
