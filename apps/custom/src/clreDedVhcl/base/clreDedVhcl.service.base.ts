/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, ClreDedVhcl as PrismaClreDedVhcl } from "@prisma/client";

export class ClreDedVhclServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.ClreDedVhclCountArgs, "select">
  ): Promise<number> {
    return this.prisma.clreDedVhcl.count(args);
  }

  async clreDedVhcls(
    args: Prisma.ClreDedVhclFindManyArgs
  ): Promise<PrismaClreDedVhcl[]> {
    return this.prisma.clreDedVhcl.findMany(args);
  }
  async clreDedVhcl(
    args: Prisma.ClreDedVhclFindUniqueArgs
  ): Promise<PrismaClreDedVhcl | null> {
    return this.prisma.clreDedVhcl.findUnique(args);
  }
  async createClreDedVhcl(
    args: Prisma.ClreDedVhclCreateArgs
  ): Promise<PrismaClreDedVhcl> {
    return this.prisma.clreDedVhcl.create(args);
  }
  async updateClreDedVhcl(
    args: Prisma.ClreDedVhclUpdateArgs
  ): Promise<PrismaClreDedVhcl> {
    return this.prisma.clreDedVhcl.update(args);
  }
  async deleteClreDedVhcl(
    args: Prisma.ClreDedVhclDeleteArgs
  ): Promise<PrismaClreDedVhcl> {
    return this.prisma.clreDedVhcl.delete(args);
  }
}
