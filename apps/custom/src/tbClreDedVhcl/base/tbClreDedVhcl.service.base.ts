/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, TbClreDedVhcl as PrismaTbClreDedVhcl } from "@prisma/client";

export class TbClreDedVhclServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.TbClreDedVhclCountArgs, "select">
  ): Promise<number> {
    return this.prisma.tbClreDedVhcl.count(args);
  }

  async tbClreDedVhcls(
    args: Prisma.TbClreDedVhclFindManyArgs
  ): Promise<PrismaTbClreDedVhcl[]> {
    return this.prisma.tbClreDedVhcl.findMany(args);
  }
  async tbClreDedVhcl(
    args: Prisma.TbClreDedVhclFindUniqueArgs
  ): Promise<PrismaTbClreDedVhcl | null> {
    return this.prisma.tbClreDedVhcl.findUnique(args);
  }
  async createTbClreDedVhcl(
    args: Prisma.TbClreDedVhclCreateArgs
  ): Promise<PrismaTbClreDedVhcl> {
    return this.prisma.tbClreDedVhcl.create(args);
  }
  async updateTbClreDedVhcl(
    args: Prisma.TbClreDedVhclUpdateArgs
  ): Promise<PrismaTbClreDedVhcl> {
    return this.prisma.tbClreDedVhcl.update(args);
  }
  async deleteTbClreDedVhcl(
    args: Prisma.TbClreDedVhclDeleteArgs
  ): Promise<PrismaTbClreDedVhcl> {
    return this.prisma.tbClreDedVhcl.delete(args);
  }
}
