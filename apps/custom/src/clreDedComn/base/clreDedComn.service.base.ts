/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, ClreDedComn as PrismaClreDedComn } from "@prisma/client";

export class ClreDedComnServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.ClreDedComnCountArgs, "select">
  ): Promise<number> {
    return this.prisma.clreDedComn.count(args);
  }

  async clreDedComns(
    args: Prisma.ClreDedComnFindManyArgs
  ): Promise<PrismaClreDedComn[]> {
    return this.prisma.clreDedComn.findMany(args);
  }
  async clreDedComn(
    args: Prisma.ClreDedComnFindUniqueArgs
  ): Promise<PrismaClreDedComn | null> {
    return this.prisma.clreDedComn.findUnique(args);
  }
  async createClreDedComn(
    args: Prisma.ClreDedComnCreateArgs
  ): Promise<PrismaClreDedComn> {
    return this.prisma.clreDedComn.create(args);
  }
  async updateClreDedComn(
    args: Prisma.ClreDedComnUpdateArgs
  ): Promise<PrismaClreDedComn> {
    return this.prisma.clreDedComn.update(args);
  }
  async deleteClreDedComn(
    args: Prisma.ClreDedComnDeleteArgs
  ): Promise<PrismaClreDedComn> {
    return this.prisma.clreDedComn.delete(args);
  }
}
