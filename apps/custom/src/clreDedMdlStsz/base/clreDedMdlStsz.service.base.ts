/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, ClreDedMdlStsz as PrismaClreDedMdlStsz } from "@prisma/client";

export class ClreDedMdlStszServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.ClreDedMdlStszCountArgs, "select">
  ): Promise<number> {
    return this.prisma.clreDedMdlStsz.count(args);
  }

  async clreDedMdlStszs(
    args: Prisma.ClreDedMdlStszFindManyArgs
  ): Promise<PrismaClreDedMdlStsz[]> {
    return this.prisma.clreDedMdlStsz.findMany(args);
  }
  async clreDedMdlStsz(
    args: Prisma.ClreDedMdlStszFindUniqueArgs
  ): Promise<PrismaClreDedMdlStsz | null> {
    return this.prisma.clreDedMdlStsz.findUnique(args);
  }
  async createClreDedMdlStsz(
    args: Prisma.ClreDedMdlStszCreateArgs
  ): Promise<PrismaClreDedMdlStsz> {
    return this.prisma.clreDedMdlStsz.create(args);
  }
  async updateClreDedMdlStsz(
    args: Prisma.ClreDedMdlStszUpdateArgs
  ): Promise<PrismaClreDedMdlStsz> {
    return this.prisma.clreDedMdlStsz.update(args);
  }
  async deleteClreDedMdlStsz(
    args: Prisma.ClreDedMdlStszDeleteArgs
  ): Promise<PrismaClreDedMdlStsz> {
    return this.prisma.clreDedMdlStsz.delete(args);
  }
}
