/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, TbClreDedPdls as PrismaTbClreDedPdls } from "@prisma/client";

export class TbClreDedPdlsServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.TbClreDedPdlsCountArgs, "select">
  ): Promise<number> {
    return this.prisma.tbClreDedPdls.count(args);
  }

  async tbClreDedPdlsItems(
    args: Prisma.TbClreDedPdlsFindManyArgs
  ): Promise<PrismaTbClreDedPdls[]> {
    return this.prisma.tbClreDedPdls.findMany(args);
  }
  async tbClreDedPdls(
    args: Prisma.TbClreDedPdlsFindUniqueArgs
  ): Promise<PrismaTbClreDedPdls | null> {
    return this.prisma.tbClreDedPdls.findUnique(args);
  }
  async createTbClreDedPdls(
    args: Prisma.TbClreDedPdlsCreateArgs
  ): Promise<PrismaTbClreDedPdls> {
    return this.prisma.tbClreDedPdls.create(args);
  }
  async updateTbClreDedPdls(
    args: Prisma.TbClreDedPdlsUpdateArgs
  ): Promise<PrismaTbClreDedPdls> {
    return this.prisma.tbClreDedPdls.update(args);
  }
  async deleteTbClreDedPdls(
    args: Prisma.TbClreDedPdlsDeleteArgs
  ): Promise<PrismaTbClreDedPdls> {
    return this.prisma.tbClreDedPdls.delete(args);
  }
}
