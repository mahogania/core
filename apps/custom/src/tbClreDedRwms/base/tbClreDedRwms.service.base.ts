/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, TbClreDedRwms as PrismaTbClreDedRwms } from "@prisma/client";

export class TbClreDedRwmsServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.TbClreDedRwmsCountArgs, "select">
  ): Promise<number> {
    return this.prisma.tbClreDedRwms.count(args);
  }

  async tbClreDedRwmsItems(
    args: Prisma.TbClreDedRwmsFindManyArgs
  ): Promise<PrismaTbClreDedRwms[]> {
    return this.prisma.tbClreDedRwms.findMany(args);
  }
  async tbClreDedRwms(
    args: Prisma.TbClreDedRwmsFindUniqueArgs
  ): Promise<PrismaTbClreDedRwms | null> {
    return this.prisma.tbClreDedRwms.findUnique(args);
  }
  async createTbClreDedRwms(
    args: Prisma.TbClreDedRwmsCreateArgs
  ): Promise<PrismaTbClreDedRwms> {
    return this.prisma.tbClreDedRwms.create(args);
  }
  async updateTbClreDedRwms(
    args: Prisma.TbClreDedRwmsUpdateArgs
  ): Promise<PrismaTbClreDedRwms> {
    return this.prisma.tbClreDedRwms.update(args);
  }
  async deleteTbClreDedRwms(
    args: Prisma.TbClreDedRwmsDeleteArgs
  ): Promise<PrismaTbClreDedRwms> {
    return this.prisma.tbClreDedRwms.delete(args);
  }
}
