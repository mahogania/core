/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, ClreDedPrcDclr as PrismaClreDedPrcDclr } from "@prisma/client";

export class ClreDedPrcDclrServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.ClreDedPrcDclrCountArgs, "select">
  ): Promise<number> {
    return this.prisma.clreDedPrcDclr.count(args);
  }

  async clreDedPrcDclrs(
    args: Prisma.ClreDedPrcDclrFindManyArgs
  ): Promise<PrismaClreDedPrcDclr[]> {
    return this.prisma.clreDedPrcDclr.findMany(args);
  }
  async clreDedPrcDclr(
    args: Prisma.ClreDedPrcDclrFindUniqueArgs
  ): Promise<PrismaClreDedPrcDclr | null> {
    return this.prisma.clreDedPrcDclr.findUnique(args);
  }
  async createClreDedPrcDclr(
    args: Prisma.ClreDedPrcDclrCreateArgs
  ): Promise<PrismaClreDedPrcDclr> {
    return this.prisma.clreDedPrcDclr.create(args);
  }
  async updateClreDedPrcDclr(
    args: Prisma.ClreDedPrcDclrUpdateArgs
  ): Promise<PrismaClreDedPrcDclr> {
    return this.prisma.clreDedPrcDclr.update(args);
  }
  async deleteClreDedPrcDclr(
    args: Prisma.ClreDedPrcDclrDeleteArgs
  ): Promise<PrismaClreDedPrcDclr> {
    return this.prisma.clreDedPrcDclr.delete(args);
  }
}
