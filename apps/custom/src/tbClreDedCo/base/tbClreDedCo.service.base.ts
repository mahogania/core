/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, TbClreDedCo as PrismaTbClreDedCo } from "@prisma/client";

export class TbClreDedCoServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.TbClreDedCoCountArgs, "select">
  ): Promise<number> {
    return this.prisma.tbClreDedCo.count(args);
  }

  async tbClreDedCos(
    args: Prisma.TbClreDedCoFindManyArgs
  ): Promise<PrismaTbClreDedCo[]> {
    return this.prisma.tbClreDedCo.findMany(args);
  }
  async tbClreDedCo(
    args: Prisma.TbClreDedCoFindUniqueArgs
  ): Promise<PrismaTbClreDedCo | null> {
    return this.prisma.tbClreDedCo.findUnique(args);
  }
  async createTbClreDedCo(
    args: Prisma.TbClreDedCoCreateArgs
  ): Promise<PrismaTbClreDedCo> {
    return this.prisma.tbClreDedCo.create(args);
  }
  async updateTbClreDedCo(
    args: Prisma.TbClreDedCoUpdateArgs
  ): Promise<PrismaTbClreDedCo> {
    return this.prisma.tbClreDedCo.update(args);
  }
  async deleteTbClreDedCo(
    args: Prisma.TbClreDedCoDeleteArgs
  ): Promise<PrismaTbClreDedCo> {
    return this.prisma.tbClreDedCo.delete(args);
  }
}
