/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, ClreDedPdls as PrismaClreDedPdls } from "@prisma/client";

export class ClreDedPdlsServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.ClreDedPdlsCountArgs, "select">
  ): Promise<number> {
    return this.prisma.clreDedPdls.count(args);
  }

  async clreDedPdlsItems(
    args: Prisma.ClreDedPdlsFindManyArgs
  ): Promise<PrismaClreDedPdls[]> {
    return this.prisma.clreDedPdls.findMany(args);
  }
  async clreDedPdls(
    args: Prisma.ClreDedPdlsFindUniqueArgs
  ): Promise<PrismaClreDedPdls | null> {
    return this.prisma.clreDedPdls.findUnique(args);
  }
  async createClreDedPdls(
    args: Prisma.ClreDedPdlsCreateArgs
  ): Promise<PrismaClreDedPdls> {
    return this.prisma.clreDedPdls.create(args);
  }
  async updateClreDedPdls(
    args: Prisma.ClreDedPdlsUpdateArgs
  ): Promise<PrismaClreDedPdls> {
    return this.prisma.clreDedPdls.update(args);
  }
  async deleteClreDedPdls(
    args: Prisma.ClreDedPdlsDeleteArgs
  ): Promise<PrismaClreDedPdls> {
    return this.prisma.clreDedPdls.delete(args);
  }
}
