import { StringNullableFilter } from "../../util/StringNullableFilter";
import { DateTimeNullableFilter } from "../../util/DateTimeNullableFilter";
import { IntNullableFilter } from "../../util/IntNullableFilter";
import { StringFilter } from "../../util/StringFilter";

export type DashboardChartWhereInput = {
  aggregateFunctionBasedOn?: StringNullableFilter;
  basedOn?: StringNullableFilter;
  chartName?: StringNullableFilter;
  chartType?: StringNullableFilter;
  color?: StringNullableFilter;
  creation?: DateTimeNullableFilter;
  customOptions?: StringNullableFilter;
  docstatus?: IntNullableFilter;
  documentType?: StringNullableFilter;
  dynamicFiltersJson?: StringNullableFilter;
  filtersJson?: StringNullableFilter;
  fromDate?: DateTimeNullableFilter;
  groupByBasedOn?: StringNullableFilter;
  groupByType?: StringNullableFilter;
  heatmapYear?: StringNullableFilter;
  id?: StringFilter;
  idx?: IntNullableFilter;
  isPublic?: IntNullableFilter;
  isStandard?: IntNullableFilter;
  lastSyncedOn?: DateTimeNullableFilter;
  modified?: DateTimeNullableFilter;
  modifiedBy?: StringNullableFilter;
  moduleField?: StringNullableFilter;
  numberOfGroups?: IntNullableFilter;
  owner?: StringNullableFilter;
  parentDocumentType?: StringNullableFilter;
  reportName?: StringNullableFilter;
  source?: StringNullableFilter;
  timeInterval?: StringNullableFilter;
  timeseries?: IntNullableFilter;
  timespan?: StringNullableFilter;
  toDate?: DateTimeNullableFilter;
  typeField?: StringNullableFilter;
  useReportChart?: IntNullableFilter;
  valueBasedOn?: StringNullableFilter;
  xField?: StringNullableFilter;
};
