/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";

import {
  Prisma,
  Relation as PrismaRelation,
  Business as PrismaBusiness,
  Industry as PrismaIndustry,
} from "@prisma/client";

export class RelationServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.RelationCountArgs, "select">): Promise<number> {
    return this.prisma.relation.count(args);
  }

  async relations(
    args: Prisma.RelationFindManyArgs
  ): Promise<PrismaRelation[]> {
    return this.prisma.relation.findMany(args);
  }
  async relation(
    args: Prisma.RelationFindUniqueArgs
  ): Promise<PrismaRelation | null> {
    return this.prisma.relation.findUnique(args);
  }
  async createRelation(
    args: Prisma.RelationCreateArgs
  ): Promise<PrismaRelation> {
    return this.prisma.relation.create(args);
  }
  async updateRelation(
    args: Prisma.RelationUpdateArgs
  ): Promise<PrismaRelation> {
    return this.prisma.relation.update(args);
  }
  async deleteRelation(
    args: Prisma.RelationDeleteArgs
  ): Promise<PrismaRelation> {
    return this.prisma.relation.delete(args);
  }

  async getAscendantBusiness(parentId: string): Promise<PrismaBusiness | null> {
    return this.prisma.relation
      .findUnique({
        where: { id: parentId },
      })
      .ascendantBusiness();
  }

  async getDescendantBusiness(
    parentId: string
  ): Promise<PrismaBusiness | null> {
    return this.prisma.relation
      .findUnique({
        where: { id: parentId },
      })
      .descendantBusiness();
  }

  async getIndustry(parentId: string): Promise<PrismaIndustry | null> {
    return this.prisma.relation
      .findUnique({
        where: { id: parentId },
      })
      .industry();
  }
}
