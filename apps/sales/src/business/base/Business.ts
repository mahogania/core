/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { ObjectType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { Unit } from "../../unit/base/Unit";
import {
  ValidateNested,
  IsOptional,
  IsDate,
  IsString,
  MaxLength,
} from "class-validator";
import { Type } from "class-transformer";
import { Industry } from "../../industry/base/Industry";
import { Relation } from "../../relation/base/Relation";
import { Strength } from "../../strength/base/Strength";
import { Weakness } from "../../weakness/base/Weakness";

@ObjectType()
class Business {
  @ApiProperty({
    required: false,
    type: () => [Unit],
  })
  @ValidateNested()
  @Type(() => Unit)
  @IsOptional()
  businessUnits?: Array<Unit>;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  createdAt!: Date;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  id!: string;

  @ApiProperty({
    required: false,
    type: () => Industry,
  })
  @ValidateNested()
  @Type(() => Industry)
  @IsOptional()
  industry?: Industry | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  name!: string | null;

  @ApiProperty({
    required: false,
    type: () => [Relation],
  })
  @ValidateNested()
  @Type(() => Relation)
  @IsOptional()
  predecessorRelations?: Array<Relation>;

  @ApiProperty({
    required: false,
    type: () => [Strength],
  })
  @ValidateNested()
  @Type(() => Strength)
  @IsOptional()
  strengths?: Array<Strength>;

  @ApiProperty({
    required: false,
    type: () => Relation,
  })
  @ValidateNested()
  @Type(() => Relation)
  @IsOptional()
  succesorRelations?: Relation | null;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  updatedAt!: Date;

  @ApiProperty({
    required: false,
    type: () => [Weakness],
  })
  @ValidateNested()
  @Type(() => Weakness)
  @IsOptional()
  weaknesses?: Array<Weakness>;
}

export { Business as Business };
