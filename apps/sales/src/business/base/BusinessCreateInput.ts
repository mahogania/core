/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { UnitCreateNestedManyWithoutBusinessesInput } from "./UnitCreateNestedManyWithoutBusinessesInput";
import {
  ValidateNested,
  IsOptional,
  IsString,
  MaxLength,
} from "class-validator";
import { Type } from "class-transformer";
import { IndustryWhereUniqueInput } from "../../industry/base/IndustryWhereUniqueInput";
import { RelationCreateNestedManyWithoutBusinessesInput } from "./RelationCreateNestedManyWithoutBusinessesInput";
import { StrengthCreateNestedManyWithoutBusinessesInput } from "./StrengthCreateNestedManyWithoutBusinessesInput";
import { RelationWhereUniqueInput } from "../../relation/base/RelationWhereUniqueInput";
import { WeaknessCreateNestedManyWithoutBusinessesInput } from "./WeaknessCreateNestedManyWithoutBusinessesInput";

@InputType()
class BusinessCreateInput {
  @ApiProperty({
    required: false,
    type: () => UnitCreateNestedManyWithoutBusinessesInput,
  })
  @ValidateNested()
  @Type(() => UnitCreateNestedManyWithoutBusinessesInput)
  @IsOptional()
  @Field(() => UnitCreateNestedManyWithoutBusinessesInput, {
    nullable: true,
  })
  businessUnits?: UnitCreateNestedManyWithoutBusinessesInput;

  @ApiProperty({
    required: false,
    type: () => IndustryWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => IndustryWhereUniqueInput)
  @IsOptional()
  @Field(() => IndustryWhereUniqueInput, {
    nullable: true,
  })
  industry?: IndustryWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  name?: string | null;

  @ApiProperty({
    required: false,
    type: () => RelationCreateNestedManyWithoutBusinessesInput,
  })
  @ValidateNested()
  @Type(() => RelationCreateNestedManyWithoutBusinessesInput)
  @IsOptional()
  @Field(() => RelationCreateNestedManyWithoutBusinessesInput, {
    nullable: true,
  })
  predecessorRelations?: RelationCreateNestedManyWithoutBusinessesInput;

  @ApiProperty({
    required: false,
    type: () => StrengthCreateNestedManyWithoutBusinessesInput,
  })
  @ValidateNested()
  @Type(() => StrengthCreateNestedManyWithoutBusinessesInput)
  @IsOptional()
  @Field(() => StrengthCreateNestedManyWithoutBusinessesInput, {
    nullable: true,
  })
  strengths?: StrengthCreateNestedManyWithoutBusinessesInput;

  @ApiProperty({
    required: false,
    type: () => RelationWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => RelationWhereUniqueInput)
  @IsOptional()
  @Field(() => RelationWhereUniqueInput, {
    nullable: true,
  })
  succesorRelations?: RelationWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: () => WeaknessCreateNestedManyWithoutBusinessesInput,
  })
  @ValidateNested()
  @Type(() => WeaknessCreateNestedManyWithoutBusinessesInput)
  @IsOptional()
  @Field(() => WeaknessCreateNestedManyWithoutBusinessesInput, {
    nullable: true,
  })
  weaknesses?: WeaknessCreateNestedManyWithoutBusinessesInput;
}

export { BusinessCreateInput as BusinessCreateInput };
