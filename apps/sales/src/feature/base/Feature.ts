/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { ObjectType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { Bundle } from "../../bundle/base/Bundle";
import {
  ValidateNested,
  IsOptional,
  IsDate,
  IsString,
  MaxLength,
} from "class-validator";
import { Type } from "class-transformer";
import { Option } from "../../option/base/Option";
import { Strength } from "../../strength/base/Strength";
import { Weakness } from "../../weakness/base/Weakness";

@ObjectType()
class Feature {
  @ApiProperty({
    required: false,
    type: () => Bundle,
  })
  @ValidateNested()
  @Type(() => Bundle)
  @IsOptional()
  bundle?: Bundle | null;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  createdAt!: Date;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  displayName!: string | null;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  id!: string;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  name!: string | null;

  @ApiProperty({
    required: false,
    type: () => [Option],
  })
  @ValidateNested()
  @Type(() => Option)
  @IsOptional()
  options?: Array<Option>;

  @ApiProperty({
    required: false,
    type: () => [Strength],
  })
  @ValidateNested()
  @Type(() => Strength)
  @IsOptional()
  strength?: Array<Strength>;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  updatedAt!: Date;

  @ApiProperty({
    required: false,
    type: () => [Weakness],
  })
  @ValidateNested()
  @Type(() => Weakness)
  @IsOptional()
  weaknesses?: Array<Weakness>;
}

export { Feature as Feature };
