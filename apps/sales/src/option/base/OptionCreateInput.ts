/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { ConstraintCreateNestedManyWithoutOptionsInput } from "./ConstraintCreateNestedManyWithoutOptionsInput";
import { ValidateNested, IsOptional } from "class-validator";
import { Type } from "class-transformer";
import { DiscountWhereUniqueInput } from "../../discount/base/DiscountWhereUniqueInput";
import { FeatureWhereUniqueInput } from "../../feature/base/FeatureWhereUniqueInput";
import { PriceWhereUniqueInput } from "../../price/base/PriceWhereUniqueInput";
import { ProductWhereUniqueInput } from "../../product/base/ProductWhereUniqueInput";

@InputType()
class OptionCreateInput {
  @ApiProperty({
    required: false,
    type: () => ConstraintCreateNestedManyWithoutOptionsInput,
  })
  @ValidateNested()
  @Type(() => ConstraintCreateNestedManyWithoutOptionsInput)
  @IsOptional()
  @Field(() => ConstraintCreateNestedManyWithoutOptionsInput, {
    nullable: true,
  })
  constraintPaths?: ConstraintCreateNestedManyWithoutOptionsInput;

  @ApiProperty({
    required: false,
    type: () => DiscountWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => DiscountWhereUniqueInput)
  @IsOptional()
  @Field(() => DiscountWhereUniqueInput, {
    nullable: true,
  })
  discount?: DiscountWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: () => FeatureWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => FeatureWhereUniqueInput)
  @IsOptional()
  @Field(() => FeatureWhereUniqueInput, {
    nullable: true,
  })
  feature?: FeatureWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: () => PriceWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => PriceWhereUniqueInput)
  @IsOptional()
  @Field(() => PriceWhereUniqueInput, {
    nullable: true,
  })
  price?: PriceWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: () => ProductWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => ProductWhereUniqueInput)
  @IsOptional()
  @Field(() => ProductWhereUniqueInput, {
    nullable: true,
  })
  product?: ProductWhereUniqueInput | null;
}

export { OptionCreateInput as OptionCreateInput };
