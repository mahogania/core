/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { AssociationListRelationFilter } from "../../association/base/AssociationListRelationFilter";
import { ValidateNested, IsOptional } from "class-validator";
import { Type } from "class-transformer";
import { AgentWhereUniqueInput } from "../../agent/base/AgentWhereUniqueInput";
import { StringNullableFilter } from "../../util/StringNullableFilter";
import { StringFilter } from "../../util/StringFilter";
import { UserWhereUniqueInput } from "../../user/base/UserWhereUniqueInput";
import { RepresentationWhereUniqueInput } from "../../representation/base/RepresentationWhereUniqueInput";
import { TemplateWhereUniqueInput } from "../../template/base/TemplateWhereUniqueInput";

@InputType()
class EntityWhereInput {
  @ApiProperty({
    required: false,
    type: () => AssociationListRelationFilter,
  })
  @ValidateNested()
  @Type(() => AssociationListRelationFilter)
  @IsOptional()
  @Field(() => AssociationListRelationFilter, {
    nullable: true,
  })
  PredecessorAssociations?: AssociationListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => AgentWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => AgentWhereUniqueInput)
  @IsOptional()
  @Field(() => AgentWhereUniqueInput, {
    nullable: true,
  })
  agent?: AgentWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  description?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  displayName?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  id?: StringFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  name?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: () => UserWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => UserWhereUniqueInput)
  @IsOptional()
  @Field(() => UserWhereUniqueInput, {
    nullable: true,
  })
  owner?: UserWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: () => RepresentationWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => RepresentationWhereUniqueInput)
  @IsOptional()
  @Field(() => RepresentationWhereUniqueInput, {
    nullable: true,
  })
  representation?: RepresentationWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: () => AssociationListRelationFilter,
  })
  @ValidateNested()
  @Type(() => AssociationListRelationFilter)
  @IsOptional()
  @Field(() => AssociationListRelationFilter, {
    nullable: true,
  })
  successorAssociations?: AssociationListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => TemplateWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => TemplateWhereUniqueInput)
  @IsOptional()
  @Field(() => TemplateWhereUniqueInput, {
    nullable: true,
  })
  template?: TemplateWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  version?: StringNullableFilter;
}

export { EntityWhereInput as EntityWhereInput };
