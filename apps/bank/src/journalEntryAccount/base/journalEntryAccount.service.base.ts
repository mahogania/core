/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  JournalEntryAccount as PrismaJournalEntryAccount,
} from "@prisma/client";

export class JournalEntryAccountServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.JournalEntryAccountCountArgs, "select">
  ): Promise<number> {
    return this.prisma.journalEntryAccount.count(args);
  }

  async journalEntryAccounts(
    args: Prisma.JournalEntryAccountFindManyArgs
  ): Promise<PrismaJournalEntryAccount[]> {
    return this.prisma.journalEntryAccount.findMany(args);
  }
  async journalEntryAccount(
    args: Prisma.JournalEntryAccountFindUniqueArgs
  ): Promise<PrismaJournalEntryAccount | null> {
    return this.prisma.journalEntryAccount.findUnique(args);
  }
  async createJournalEntryAccount(
    args: Prisma.JournalEntryAccountCreateArgs
  ): Promise<PrismaJournalEntryAccount> {
    return this.prisma.journalEntryAccount.create(args);
  }
  async updateJournalEntryAccount(
    args: Prisma.JournalEntryAccountUpdateArgs
  ): Promise<PrismaJournalEntryAccount> {
    return this.prisma.journalEntryAccount.update(args);
  }
  async deleteJournalEntryAccount(
    args: Prisma.JournalEntryAccountDeleteArgs
  ): Promise<PrismaJournalEntryAccount> {
    return this.prisma.journalEntryAccount.delete(args);
  }
}
