/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, BankGuarantee as PrismaBankGuarantee } from "@prisma/client";

export class BankGuaranteeServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.BankGuaranteeCountArgs, "select">
  ): Promise<number> {
    return this.prisma.bankGuarantee.count(args);
  }

  async bankGuarantees(
    args: Prisma.BankGuaranteeFindManyArgs
  ): Promise<PrismaBankGuarantee[]> {
    return this.prisma.bankGuarantee.findMany(args);
  }
  async bankGuarantee(
    args: Prisma.BankGuaranteeFindUniqueArgs
  ): Promise<PrismaBankGuarantee | null> {
    return this.prisma.bankGuarantee.findUnique(args);
  }
  async createBankGuarantee(
    args: Prisma.BankGuaranteeCreateArgs
  ): Promise<PrismaBankGuarantee> {
    return this.prisma.bankGuarantee.create(args);
  }
  async updateBankGuarantee(
    args: Prisma.BankGuaranteeUpdateArgs
  ): Promise<PrismaBankGuarantee> {
    return this.prisma.bankGuarantee.update(args);
  }
  async deleteBankGuarantee(
    args: Prisma.BankGuaranteeDeleteArgs
  ): Promise<PrismaBankGuarantee> {
    return this.prisma.bankGuarantee.delete(args);
  }
}
