/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  JournalEntryTemplate as PrismaJournalEntryTemplate,
} from "@prisma/client";

export class JournalEntryTemplateServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.JournalEntryTemplateCountArgs, "select">
  ): Promise<number> {
    return this.prisma.journalEntryTemplate.count(args);
  }

  async journalEntryTemplates(
    args: Prisma.JournalEntryTemplateFindManyArgs
  ): Promise<PrismaJournalEntryTemplate[]> {
    return this.prisma.journalEntryTemplate.findMany(args);
  }
  async journalEntryTemplate(
    args: Prisma.JournalEntryTemplateFindUniqueArgs
  ): Promise<PrismaJournalEntryTemplate | null> {
    return this.prisma.journalEntryTemplate.findUnique(args);
  }
  async createJournalEntryTemplate(
    args: Prisma.JournalEntryTemplateCreateArgs
  ): Promise<PrismaJournalEntryTemplate> {
    return this.prisma.journalEntryTemplate.create(args);
  }
  async updateJournalEntryTemplate(
    args: Prisma.JournalEntryTemplateUpdateArgs
  ): Promise<PrismaJournalEntryTemplate> {
    return this.prisma.journalEntryTemplate.update(args);
  }
  async deleteJournalEntryTemplate(
    args: Prisma.JournalEntryTemplateDeleteArgs
  ): Promise<PrismaJournalEntryTemplate> {
    return this.prisma.journalEntryTemplate.delete(args);
  }
}
