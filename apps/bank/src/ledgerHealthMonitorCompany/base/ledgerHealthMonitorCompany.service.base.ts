/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  LedgerHealthMonitorCompany as PrismaLedgerHealthMonitorCompany,
} from "@prisma/client";

export class LedgerHealthMonitorCompanyServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.LedgerHealthMonitorCompanyCountArgs, "select">
  ): Promise<number> {
    return this.prisma.ledgerHealthMonitorCompany.count(args);
  }

  async ledgerHealthMonitorCompanies(
    args: Prisma.LedgerHealthMonitorCompanyFindManyArgs
  ): Promise<PrismaLedgerHealthMonitorCompany[]> {
    return this.prisma.ledgerHealthMonitorCompany.findMany(args);
  }
  async ledgerHealthMonitorCompany(
    args: Prisma.LedgerHealthMonitorCompanyFindUniqueArgs
  ): Promise<PrismaLedgerHealthMonitorCompany | null> {
    return this.prisma.ledgerHealthMonitorCompany.findUnique(args);
  }
  async createLedgerHealthMonitorCompany(
    args: Prisma.LedgerHealthMonitorCompanyCreateArgs
  ): Promise<PrismaLedgerHealthMonitorCompany> {
    return this.prisma.ledgerHealthMonitorCompany.create(args);
  }
  async updateLedgerHealthMonitorCompany(
    args: Prisma.LedgerHealthMonitorCompanyUpdateArgs
  ): Promise<PrismaLedgerHealthMonitorCompany> {
    return this.prisma.ledgerHealthMonitorCompany.update(args);
  }
  async deleteLedgerHealthMonitorCompany(
    args: Prisma.LedgerHealthMonitorCompanyDeleteArgs
  ): Promise<PrismaLedgerHealthMonitorCompany> {
    return this.prisma.ledgerHealthMonitorCompany.delete(args);
  }
}
