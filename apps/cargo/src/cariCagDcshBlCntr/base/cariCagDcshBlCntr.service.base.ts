/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  CariCagDcshBlCntr as PrismaCariCagDcshBlCntr,
} from "@prisma/client";

export class CariCagDcshBlCntrServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.CariCagDcshBlCntrCountArgs, "select">
  ): Promise<number> {
    return this.prisma.cariCagDcshBlCntr.count(args);
  }

  async cariCagDcshBlCntrs(
    args: Prisma.CariCagDcshBlCntrFindManyArgs
  ): Promise<PrismaCariCagDcshBlCntr[]> {
    return this.prisma.cariCagDcshBlCntr.findMany(args);
  }
  async cariCagDcshBlCntr(
    args: Prisma.CariCagDcshBlCntrFindUniqueArgs
  ): Promise<PrismaCariCagDcshBlCntr | null> {
    return this.prisma.cariCagDcshBlCntr.findUnique(args);
  }
  async createCariCagDcshBlCntr(
    args: Prisma.CariCagDcshBlCntrCreateArgs
  ): Promise<PrismaCariCagDcshBlCntr> {
    return this.prisma.cariCagDcshBlCntr.create(args);
  }
  async updateCariCagDcshBlCntr(
    args: Prisma.CariCagDcshBlCntrUpdateArgs
  ): Promise<PrismaCariCagDcshBlCntr> {
    return this.prisma.cariCagDcshBlCntr.update(args);
  }
  async deleteCariCagDcshBlCntr(
    args: Prisma.CariCagDcshBlCntrDeleteArgs
  ): Promise<PrismaCariCagDcshBlCntr> {
    return this.prisma.cariCagDcshBlCntr.delete(args);
  }
}
