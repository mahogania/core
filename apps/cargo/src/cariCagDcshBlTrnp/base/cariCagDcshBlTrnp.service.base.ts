/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  CariCagDcshBlTrnp as PrismaCariCagDcshBlTrnp,
} from "@prisma/client";

export class CariCagDcshBlTrnpServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.CariCagDcshBlTrnpCountArgs, "select">
  ): Promise<number> {
    return this.prisma.cariCagDcshBlTrnp.count(args);
  }

  async cariCagDcshBlTrnps(
    args: Prisma.CariCagDcshBlTrnpFindManyArgs
  ): Promise<PrismaCariCagDcshBlTrnp[]> {
    return this.prisma.cariCagDcshBlTrnp.findMany(args);
  }
  async cariCagDcshBlTrnp(
    args: Prisma.CariCagDcshBlTrnpFindUniqueArgs
  ): Promise<PrismaCariCagDcshBlTrnp | null> {
    return this.prisma.cariCagDcshBlTrnp.findUnique(args);
  }
  async createCariCagDcshBlTrnp(
    args: Prisma.CariCagDcshBlTrnpCreateArgs
  ): Promise<PrismaCariCagDcshBlTrnp> {
    return this.prisma.cariCagDcshBlTrnp.create(args);
  }
  async updateCariCagDcshBlTrnp(
    args: Prisma.CariCagDcshBlTrnpUpdateArgs
  ): Promise<PrismaCariCagDcshBlTrnp> {
    return this.prisma.cariCagDcshBlTrnp.update(args);
  }
  async deleteCariCagDcshBlTrnp(
    args: Prisma.CariCagDcshBlTrnpDeleteArgs
  ): Promise<PrismaCariCagDcshBlTrnp> {
    return this.prisma.cariCagDcshBlTrnp.delete(args);
  }
}
