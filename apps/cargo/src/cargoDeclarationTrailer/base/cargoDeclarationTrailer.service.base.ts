/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  CargoDeclarationTrailer as PrismaCargoDeclarationTrailer,
} from "@prisma/client";

export class CargoDeclarationTrailerServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.CargoDeclarationTrailerCountArgs, "select">
  ): Promise<number> {
    return this.prisma.cargoDeclarationTrailer.count(args);
  }

  async cargoDeclarationTrailers(
    args: Prisma.CargoDeclarationTrailerFindManyArgs
  ): Promise<PrismaCargoDeclarationTrailer[]> {
    return this.prisma.cargoDeclarationTrailer.findMany(args);
  }
  async cargoDeclarationTrailer(
    args: Prisma.CargoDeclarationTrailerFindUniqueArgs
  ): Promise<PrismaCargoDeclarationTrailer | null> {
    return this.prisma.cargoDeclarationTrailer.findUnique(args);
  }
  async createCargoDeclarationTrailer(
    args: Prisma.CargoDeclarationTrailerCreateArgs
  ): Promise<PrismaCargoDeclarationTrailer> {
    return this.prisma.cargoDeclarationTrailer.create(args);
  }
  async updateCargoDeclarationTrailer(
    args: Prisma.CargoDeclarationTrailerUpdateArgs
  ): Promise<PrismaCargoDeclarationTrailer> {
    return this.prisma.cargoDeclarationTrailer.update(args);
  }
  async deleteCargoDeclarationTrailer(
    args: Prisma.CargoDeclarationTrailerDeleteArgs
  ): Promise<PrismaCargoDeclarationTrailer> {
    return this.prisma.cargoDeclarationTrailer.delete(args);
  }
}
