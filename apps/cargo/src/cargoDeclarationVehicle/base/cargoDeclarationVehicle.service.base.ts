/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  CargoDeclarationVehicle as PrismaCargoDeclarationVehicle,
} from "@prisma/client";

export class CargoDeclarationVehicleServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.CargoDeclarationVehicleCountArgs, "select">
  ): Promise<number> {
    return this.prisma.cargoDeclarationVehicle.count(args);
  }

  async cargoDeclarationVehicles(
    args: Prisma.CargoDeclarationVehicleFindManyArgs
  ): Promise<PrismaCargoDeclarationVehicle[]> {
    return this.prisma.cargoDeclarationVehicle.findMany(args);
  }
  async cargoDeclarationVehicle(
    args: Prisma.CargoDeclarationVehicleFindUniqueArgs
  ): Promise<PrismaCargoDeclarationVehicle | null> {
    return this.prisma.cargoDeclarationVehicle.findUnique(args);
  }
  async createCargoDeclarationVehicle(
    args: Prisma.CargoDeclarationVehicleCreateArgs
  ): Promise<PrismaCargoDeclarationVehicle> {
    return this.prisma.cargoDeclarationVehicle.create(args);
  }
  async updateCargoDeclarationVehicle(
    args: Prisma.CargoDeclarationVehicleUpdateArgs
  ): Promise<PrismaCargoDeclarationVehicle> {
    return this.prisma.cargoDeclarationVehicle.update(args);
  }
  async deleteCargoDeclarationVehicle(
    args: Prisma.CargoDeclarationVehicleDeleteArgs
  ): Promise<PrismaCargoDeclarationVehicle> {
    return this.prisma.cargoDeclarationVehicle.delete(args);
  }
}
