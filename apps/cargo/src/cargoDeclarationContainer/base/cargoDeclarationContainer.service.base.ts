/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  CargoDeclarationContainer as PrismaCargoDeclarationContainer,
} from "@prisma/client";

export class CargoDeclarationContainerServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.CargoDeclarationContainerCountArgs, "select">
  ): Promise<number> {
    return this.prisma.cargoDeclarationContainer.count(args);
  }

  async cargoDeclarationContainers(
    args: Prisma.CargoDeclarationContainerFindManyArgs
  ): Promise<PrismaCargoDeclarationContainer[]> {
    return this.prisma.cargoDeclarationContainer.findMany(args);
  }
  async cargoDeclarationContainer(
    args: Prisma.CargoDeclarationContainerFindUniqueArgs
  ): Promise<PrismaCargoDeclarationContainer | null> {
    return this.prisma.cargoDeclarationContainer.findUnique(args);
  }
  async createCargoDeclarationContainer(
    args: Prisma.CargoDeclarationContainerCreateArgs
  ): Promise<PrismaCargoDeclarationContainer> {
    return this.prisma.cargoDeclarationContainer.create(args);
  }
  async updateCargoDeclarationContainer(
    args: Prisma.CargoDeclarationContainerUpdateArgs
  ): Promise<PrismaCargoDeclarationContainer> {
    return this.prisma.cargoDeclarationContainer.update(args);
  }
  async deleteCargoDeclarationContainer(
    args: Prisma.CargoDeclarationContainerDeleteArgs
  ): Promise<PrismaCargoDeclarationContainer> {
    return this.prisma.cargoDeclarationContainer.delete(args);
  }
}
