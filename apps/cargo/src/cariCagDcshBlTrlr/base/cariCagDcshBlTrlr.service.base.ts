/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  CariCagDcshBlTrlr as PrismaCariCagDcshBlTrlr,
} from "@prisma/client";

export class CariCagDcshBlTrlrServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.CariCagDcshBlTrlrCountArgs, "select">
  ): Promise<number> {
    return this.prisma.cariCagDcshBlTrlr.count(args);
  }

  async cariCagDcshBlTrlrs(
    args: Prisma.CariCagDcshBlTrlrFindManyArgs
  ): Promise<PrismaCariCagDcshBlTrlr[]> {
    return this.prisma.cariCagDcshBlTrlr.findMany(args);
  }
  async cariCagDcshBlTrlr(
    args: Prisma.CariCagDcshBlTrlrFindUniqueArgs
  ): Promise<PrismaCariCagDcshBlTrlr | null> {
    return this.prisma.cariCagDcshBlTrlr.findUnique(args);
  }
  async createCariCagDcshBlTrlr(
    args: Prisma.CariCagDcshBlTrlrCreateArgs
  ): Promise<PrismaCariCagDcshBlTrlr> {
    return this.prisma.cariCagDcshBlTrlr.create(args);
  }
  async updateCariCagDcshBlTrlr(
    args: Prisma.CariCagDcshBlTrlrUpdateArgs
  ): Promise<PrismaCariCagDcshBlTrlr> {
    return this.prisma.cariCagDcshBlTrlr.update(args);
  }
  async deleteCariCagDcshBlTrlr(
    args: Prisma.CariCagDcshBlTrlrDeleteArgs
  ): Promise<PrismaCariCagDcshBlTrlr> {
    return this.prisma.cariCagDcshBlTrlr.delete(args);
  }
}
