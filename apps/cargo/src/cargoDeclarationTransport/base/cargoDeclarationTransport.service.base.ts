/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  CargoDeclarationTransport as PrismaCargoDeclarationTransport,
} from "@prisma/client";

export class CargoDeclarationTransportServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.CargoDeclarationTransportCountArgs, "select">
  ): Promise<number> {
    return this.prisma.cargoDeclarationTransport.count(args);
  }

  async cargoDeclarationTransports(
    args: Prisma.CargoDeclarationTransportFindManyArgs
  ): Promise<PrismaCargoDeclarationTransport[]> {
    return this.prisma.cargoDeclarationTransport.findMany(args);
  }
  async cargoDeclarationTransport(
    args: Prisma.CargoDeclarationTransportFindUniqueArgs
  ): Promise<PrismaCargoDeclarationTransport | null> {
    return this.prisma.cargoDeclarationTransport.findUnique(args);
  }
  async createCargoDeclarationTransport(
    args: Prisma.CargoDeclarationTransportCreateArgs
  ): Promise<PrismaCargoDeclarationTransport> {
    return this.prisma.cargoDeclarationTransport.create(args);
  }
  async updateCargoDeclarationTransport(
    args: Prisma.CargoDeclarationTransportUpdateArgs
  ): Promise<PrismaCargoDeclarationTransport> {
    return this.prisma.cargoDeclarationTransport.update(args);
  }
  async deleteCargoDeclarationTransport(
    args: Prisma.CargoDeclarationTransportDeleteArgs
  ): Promise<PrismaCargoDeclarationTransport> {
    return this.prisma.cargoDeclarationTransport.delete(args);
  }
}
