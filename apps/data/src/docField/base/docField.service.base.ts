/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, DocField as PrismaDocField } from "@prisma/client";

export class DocFieldServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.DocFieldCountArgs, "select">): Promise<number> {
    return this.prisma.docField.count(args);
  }

  async docFields(
    args: Prisma.DocFieldFindManyArgs
  ): Promise<PrismaDocField[]> {
    return this.prisma.docField.findMany(args);
  }
  async docField(
    args: Prisma.DocFieldFindUniqueArgs
  ): Promise<PrismaDocField | null> {
    return this.prisma.docField.findUnique(args);
  }
  async createDocField(
    args: Prisma.DocFieldCreateArgs
  ): Promise<PrismaDocField> {
    return this.prisma.docField.create(args);
  }
  async updateDocField(
    args: Prisma.DocFieldUpdateArgs
  ): Promise<PrismaDocField> {
    return this.prisma.docField.update(args);
  }
  async deleteDocField(
    args: Prisma.DocFieldDeleteArgs
  ): Promise<PrismaDocField> {
    return this.prisma.docField.delete(args);
  }
}
