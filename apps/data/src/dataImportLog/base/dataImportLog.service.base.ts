/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";

import {
  Prisma,
  DataImportLog as PrismaDataImportLog,
  DataImport as PrismaDataImport,
} from "@prisma/client";

export class DataImportLogServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.DataImportLogCountArgs, "select">
  ): Promise<number> {
    return this.prisma.dataImportLog.count(args);
  }

  async dataImportLogs(
    args: Prisma.DataImportLogFindManyArgs
  ): Promise<PrismaDataImportLog[]> {
    return this.prisma.dataImportLog.findMany(args);
  }
  async dataImportLog(
    args: Prisma.DataImportLogFindUniqueArgs
  ): Promise<PrismaDataImportLog | null> {
    return this.prisma.dataImportLog.findUnique(args);
  }
  async createDataImportLog(
    args: Prisma.DataImportLogCreateArgs
  ): Promise<PrismaDataImportLog> {
    return this.prisma.dataImportLog.create(args);
  }
  async updateDataImportLog(
    args: Prisma.DataImportLogUpdateArgs
  ): Promise<PrismaDataImportLog> {
    return this.prisma.dataImportLog.update(args);
  }
  async deleteDataImportLog(
    args: Prisma.DataImportLogDeleteArgs
  ): Promise<PrismaDataImportLog> {
    return this.prisma.dataImportLog.delete(args);
  }

  async getDataImport(parentId: string): Promise<PrismaDataImport | null> {
    return this.prisma.dataImportLog
      .findUnique({
        where: { id: parentId },
      })
      .dataImport();
  }
}
