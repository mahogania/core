/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  DocTypeLayoutField as PrismaDocTypeLayoutField,
} from "@prisma/client";

export class DocTypeLayoutFieldServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.DocTypeLayoutFieldCountArgs, "select">
  ): Promise<number> {
    return this.prisma.docTypeLayoutField.count(args);
  }

  async docTypeLayoutFields(
    args: Prisma.DocTypeLayoutFieldFindManyArgs
  ): Promise<PrismaDocTypeLayoutField[]> {
    return this.prisma.docTypeLayoutField.findMany(args);
  }
  async docTypeLayoutField(
    args: Prisma.DocTypeLayoutFieldFindUniqueArgs
  ): Promise<PrismaDocTypeLayoutField | null> {
    return this.prisma.docTypeLayoutField.findUnique(args);
  }
  async createDocTypeLayoutField(
    args: Prisma.DocTypeLayoutFieldCreateArgs
  ): Promise<PrismaDocTypeLayoutField> {
    return this.prisma.docTypeLayoutField.create(args);
  }
  async updateDocTypeLayoutField(
    args: Prisma.DocTypeLayoutFieldUpdateArgs
  ): Promise<PrismaDocTypeLayoutField> {
    return this.prisma.docTypeLayoutField.update(args);
  }
  async deleteDocTypeLayoutField(
    args: Prisma.DocTypeLayoutFieldDeleteArgs
  ): Promise<PrismaDocTypeLayoutField> {
    return this.prisma.docTypeLayoutField.delete(args);
  }
}
