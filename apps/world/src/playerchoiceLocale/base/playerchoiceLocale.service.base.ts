/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  PlayerchoiceLocale as PrismaPlayerchoiceLocale,
} from "@prisma/client";

export class PlayerchoiceLocaleServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.PlayerchoiceLocaleCountArgs, "select">
  ): Promise<number> {
    return this.prisma.playerchoiceLocale.count(args);
  }

  async playerchoiceLocales(
    args: Prisma.PlayerchoiceLocaleFindManyArgs
  ): Promise<PrismaPlayerchoiceLocale[]> {
    return this.prisma.playerchoiceLocale.findMany(args);
  }
  async playerchoiceLocale(
    args: Prisma.PlayerchoiceLocaleFindUniqueArgs
  ): Promise<PrismaPlayerchoiceLocale | null> {
    return this.prisma.playerchoiceLocale.findUnique(args);
  }
  async createPlayerchoiceLocale(
    args: Prisma.PlayerchoiceLocaleCreateArgs
  ): Promise<PrismaPlayerchoiceLocale> {
    return this.prisma.playerchoiceLocale.create(args);
  }
  async updatePlayerchoiceLocale(
    args: Prisma.PlayerchoiceLocaleUpdateArgs
  ): Promise<PrismaPlayerchoiceLocale> {
    return this.prisma.playerchoiceLocale.update(args);
  }
  async deletePlayerchoiceLocale(
    args: Prisma.PlayerchoiceLocaleDeleteArgs
  ): Promise<PrismaPlayerchoiceLocale> {
    return this.prisma.playerchoiceLocale.delete(args);
  }
}
