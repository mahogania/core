/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";

import {
  Prisma,
  PlayerFactionchangeAchievement as PrismaPlayerFactionchangeAchievement,
} from "@prisma/client";

export class PlayerFactionchangeAchievementServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.PlayerFactionchangeAchievementCountArgs, "select">
  ): Promise<number> {
    return this.prisma.playerFactionchangeAchievement.count(args);
  }

  async playerFactionchangeAchievements(
    args: Prisma.PlayerFactionchangeAchievementFindManyArgs
  ): Promise<PrismaPlayerFactionchangeAchievement[]> {
    return this.prisma.playerFactionchangeAchievement.findMany(args);
  }
  async playerFactionchangeAchievement(
    args: Prisma.PlayerFactionchangeAchievementFindUniqueArgs
  ): Promise<PrismaPlayerFactionchangeAchievement | null> {
    return this.prisma.playerFactionchangeAchievement.findUnique(args);
  }
  async createPlayerFactionchangeAchievement(
    args: Prisma.PlayerFactionchangeAchievementCreateArgs
  ): Promise<PrismaPlayerFactionchangeAchievement> {
    return this.prisma.playerFactionchangeAchievement.create(args);
  }
  async updatePlayerFactionchangeAchievement(
    args: Prisma.PlayerFactionchangeAchievementUpdateArgs
  ): Promise<PrismaPlayerFactionchangeAchievement> {
    return this.prisma.playerFactionchangeAchievement.update(args);
  }
  async deletePlayerFactionchangeAchievement(
    args: Prisma.PlayerFactionchangeAchievementDeleteArgs
  ): Promise<PrismaPlayerFactionchangeAchievement> {
    return this.prisma.playerFactionchangeAchievement.delete(args);
  }
}
