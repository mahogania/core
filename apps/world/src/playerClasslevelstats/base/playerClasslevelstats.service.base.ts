/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  PlayerClasslevelstats as PrismaPlayerClasslevelstats,
} from "@prisma/client";

export class PlayerClasslevelstatsServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.PlayerClasslevelstatsCountArgs, "select">
  ): Promise<number> {
    return this.prisma.playerClasslevelstats.count(args);
  }

  async playerClasslevelstatsItems(
    args: Prisma.PlayerClasslevelstatsFindManyArgs
  ): Promise<PrismaPlayerClasslevelstats[]> {
    return this.prisma.playerClasslevelstats.findMany(args);
  }
  async playerClasslevelstats(
    args: Prisma.PlayerClasslevelstatsFindUniqueArgs
  ): Promise<PrismaPlayerClasslevelstats | null> {
    return this.prisma.playerClasslevelstats.findUnique(args);
  }
  async createPlayerClasslevelstats(
    args: Prisma.PlayerClasslevelstatsCreateArgs
  ): Promise<PrismaPlayerClasslevelstats> {
    return this.prisma.playerClasslevelstats.create(args);
  }
  async updatePlayerClasslevelstats(
    args: Prisma.PlayerClasslevelstatsUpdateArgs
  ): Promise<PrismaPlayerClasslevelstats> {
    return this.prisma.playerClasslevelstats.update(args);
  }
  async deletePlayerClasslevelstats(
    args: Prisma.PlayerClasslevelstatsDeleteArgs
  ): Promise<PrismaPlayerClasslevelstats> {
    return this.prisma.playerClasslevelstats.delete(args);
  }
}
