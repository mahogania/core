/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { PlayerFactionAchievementWhereUniqueInput } from "../../playerFactionAchievement/base/PlayerFactionAchievementWhereUniqueInput";
import { ValidateNested, IsOptional } from "class-validator";
import { Type } from "class-transformer";
import { PlayerFactionQuestUpdateManyWithoutFactionsInput } from "./PlayerFactionQuestUpdateManyWithoutFactionsInput";
import { PlayerFactionReputationUpdateManyWithoutFactionsInput } from "./PlayerFactionReputationUpdateManyWithoutFactionsInput";
import { PlayerFactionSpellUpdateManyWithoutFactionsInput } from "./PlayerFactionSpellUpdateManyWithoutFactionsInput";
import { PlayerFactionTitleUpdateManyWithoutFactionsInput } from "./PlayerFactionTitleUpdateManyWithoutFactionsInput";

@InputType()
class FactionUpdateInput {
  @ApiProperty({
    required: false,
    type: () => PlayerFactionAchievementWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => PlayerFactionAchievementWhereUniqueInput)
  @IsOptional()
  @Field(() => PlayerFactionAchievementWhereUniqueInput, {
    nullable: true,
  })
  playerFactionAchievements?: PlayerFactionAchievementWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: () => PlayerFactionQuestUpdateManyWithoutFactionsInput,
  })
  @ValidateNested()
  @Type(() => PlayerFactionQuestUpdateManyWithoutFactionsInput)
  @IsOptional()
  @Field(() => PlayerFactionQuestUpdateManyWithoutFactionsInput, {
    nullable: true,
  })
  playerFactionQuests?: PlayerFactionQuestUpdateManyWithoutFactionsInput;

  @ApiProperty({
    required: false,
    type: () => PlayerFactionReputationUpdateManyWithoutFactionsInput,
  })
  @ValidateNested()
  @Type(() => PlayerFactionReputationUpdateManyWithoutFactionsInput)
  @IsOptional()
  @Field(() => PlayerFactionReputationUpdateManyWithoutFactionsInput, {
    nullable: true,
  })
  playerFactionReputations?: PlayerFactionReputationUpdateManyWithoutFactionsInput;

  @ApiProperty({
    required: false,
    type: () => PlayerFactionSpellUpdateManyWithoutFactionsInput,
  })
  @ValidateNested()
  @Type(() => PlayerFactionSpellUpdateManyWithoutFactionsInput)
  @IsOptional()
  @Field(() => PlayerFactionSpellUpdateManyWithoutFactionsInput, {
    nullable: true,
  })
  playerFactionSpells?: PlayerFactionSpellUpdateManyWithoutFactionsInput;

  @ApiProperty({
    required: false,
    type: () => PlayerFactionTitleUpdateManyWithoutFactionsInput,
  })
  @ValidateNested()
  @Type(() => PlayerFactionTitleUpdateManyWithoutFactionsInput)
  @IsOptional()
  @Field(() => PlayerFactionTitleUpdateManyWithoutFactionsInput, {
    nullable: true,
  })
  playerFactionTitles?: PlayerFactionTitleUpdateManyWithoutFactionsInput;
}

export { FactionUpdateInput as FactionUpdateInput };
