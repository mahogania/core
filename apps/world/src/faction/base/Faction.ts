/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { ObjectType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { IsDate, IsString, ValidateNested, IsOptional } from "class-validator";
import { Type } from "class-transformer";
import { PlayerFactionAchievement } from "../../playerFactionAchievement/base/PlayerFactionAchievement";
import { PlayerFactionQuest } from "../../playerFactionQuest/base/PlayerFactionQuest";
import { PlayerFactionReputation } from "../../playerFactionReputation/base/PlayerFactionReputation";
import { PlayerFactionSpell } from "../../playerFactionSpell/base/PlayerFactionSpell";
import { PlayerFactionTitle } from "../../playerFactionTitle/base/PlayerFactionTitle";

@ObjectType()
class Faction {
  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  createdAt!: Date;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  id!: string;

  @ApiProperty({
    required: false,
    type: () => PlayerFactionAchievement,
  })
  @ValidateNested()
  @Type(() => PlayerFactionAchievement)
  @IsOptional()
  playerFactionAchievements?: PlayerFactionAchievement | null;

  @ApiProperty({
    required: false,
    type: () => [PlayerFactionQuest],
  })
  @ValidateNested()
  @Type(() => PlayerFactionQuest)
  @IsOptional()
  playerFactionQuests?: Array<PlayerFactionQuest>;

  @ApiProperty({
    required: false,
    type: () => [PlayerFactionReputation],
  })
  @ValidateNested()
  @Type(() => PlayerFactionReputation)
  @IsOptional()
  playerFactionReputations?: Array<PlayerFactionReputation>;

  @ApiProperty({
    required: false,
    type: () => [PlayerFactionSpell],
  })
  @ValidateNested()
  @Type(() => PlayerFactionSpell)
  @IsOptional()
  playerFactionSpells?: Array<PlayerFactionSpell>;

  @ApiProperty({
    required: false,
    type: () => [PlayerFactionTitle],
  })
  @ValidateNested()
  @Type(() => PlayerFactionTitle)
  @IsOptional()
  playerFactionTitles?: Array<PlayerFactionTitle>;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  updatedAt!: Date;
}

export { Faction as Faction };
