/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  LfgDungeonRewards as PrismaLfgDungeonRewards,
} from "@prisma/client";

export class LfgDungeonRewardsServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.LfgDungeonRewardsCountArgs, "select">
  ): Promise<number> {
    return this.prisma.lfgDungeonRewards.count(args);
  }

  async lfgDungeonRewardsItems(
    args: Prisma.LfgDungeonRewardsFindManyArgs
  ): Promise<PrismaLfgDungeonRewards[]> {
    return this.prisma.lfgDungeonRewards.findMany(args);
  }
  async lfgDungeonRewards(
    args: Prisma.LfgDungeonRewardsFindUniqueArgs
  ): Promise<PrismaLfgDungeonRewards | null> {
    return this.prisma.lfgDungeonRewards.findUnique(args);
  }
  async createLfgDungeonRewards(
    args: Prisma.LfgDungeonRewardsCreateArgs
  ): Promise<PrismaLfgDungeonRewards> {
    return this.prisma.lfgDungeonRewards.create(args);
  }
  async updateLfgDungeonRewards(
    args: Prisma.LfgDungeonRewardsUpdateArgs
  ): Promise<PrismaLfgDungeonRewards> {
    return this.prisma.lfgDungeonRewards.update(args);
  }
  async deleteLfgDungeonRewards(
    args: Prisma.LfgDungeonRewardsDeleteArgs
  ): Promise<PrismaLfgDungeonRewards> {
    return this.prisma.lfgDungeonRewards.delete(args);
  }
}
