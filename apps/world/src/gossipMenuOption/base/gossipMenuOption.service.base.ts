/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  GossipMenuOption as PrismaGossipMenuOption,
} from "@prisma/client";

export class GossipMenuOptionServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.GossipMenuOptionCountArgs, "select">
  ): Promise<number> {
    return this.prisma.gossipMenuOption.count(args);
  }

  async gossipMenuOptions(
    args: Prisma.GossipMenuOptionFindManyArgs
  ): Promise<PrismaGossipMenuOption[]> {
    return this.prisma.gossipMenuOption.findMany(args);
  }
  async gossipMenuOption(
    args: Prisma.GossipMenuOptionFindUniqueArgs
  ): Promise<PrismaGossipMenuOption | null> {
    return this.prisma.gossipMenuOption.findUnique(args);
  }
  async createGossipMenuOption(
    args: Prisma.GossipMenuOptionCreateArgs
  ): Promise<PrismaGossipMenuOption> {
    return this.prisma.gossipMenuOption.create(args);
  }
  async updateGossipMenuOption(
    args: Prisma.GossipMenuOptionUpdateArgs
  ): Promise<PrismaGossipMenuOption> {
    return this.prisma.gossipMenuOption.update(args);
  }
  async deleteGossipMenuOption(
    args: Prisma.GossipMenuOptionDeleteArgs
  ): Promise<PrismaGossipMenuOption> {
    return this.prisma.gossipMenuOption.delete(args);
  }
}
