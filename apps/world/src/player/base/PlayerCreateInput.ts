/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { PlayerFactionAchievementCreateNestedManyWithoutPlayersInput } from "./PlayerFactionAchievementCreateNestedManyWithoutPlayersInput";
import { ValidateNested, IsOptional } from "class-validator";
import { Type } from "class-transformer";
import { AchievementCreateNestedManyWithoutPlayersInput } from "./AchievementCreateNestedManyWithoutPlayersInput";
import { GeneStatWhereUniqueInput } from "../../geneStat/base/GeneStatWhereUniqueInput";
import { PlayerCraftCreateNestedManyWithoutPlayersInput } from "./PlayerCraftCreateNestedManyWithoutPlayersInput";
import { PlayerFactionQuestCreateNestedManyWithoutPlayersInput } from "./PlayerFactionQuestCreateNestedManyWithoutPlayersInput";
import { PlayerFactionReputationCreateNestedManyWithoutPlayersInput } from "./PlayerFactionReputationCreateNestedManyWithoutPlayersInput";
import { PlayerFactionSpellCreateNestedManyWithoutPlayersInput } from "./PlayerFactionSpellCreateNestedManyWithoutPlayersInput";
import { PlayerFactionTitleCreateNestedManyWithoutPlayersInput } from "./PlayerFactionTitleCreateNestedManyWithoutPlayersInput";
import { PlayerXpForLevelCreateNestedManyWithoutPlayersInput } from "./PlayerXpForLevelCreateNestedManyWithoutPlayersInput";
import { ResponseCreateNestedManyWithoutPlayersInput } from "./ResponseCreateNestedManyWithoutPlayersInput";

@InputType()
class PlayerCreateInput {
  @ApiProperty({
    required: false,
    type: () => PlayerFactionAchievementCreateNestedManyWithoutPlayersInput,
  })
  @ValidateNested()
  @Type(() => PlayerFactionAchievementCreateNestedManyWithoutPlayersInput)
  @IsOptional()
  @Field(() => PlayerFactionAchievementCreateNestedManyWithoutPlayersInput, {
    nullable: true,
  })
  PlayerFactionAchievements?: PlayerFactionAchievementCreateNestedManyWithoutPlayersInput;

  @ApiProperty({
    required: false,
    type: () => AchievementCreateNestedManyWithoutPlayersInput,
  })
  @ValidateNested()
  @Type(() => AchievementCreateNestedManyWithoutPlayersInput)
  @IsOptional()
  @Field(() => AchievementCreateNestedManyWithoutPlayersInput, {
    nullable: true,
  })
  achievements?: AchievementCreateNestedManyWithoutPlayersInput;

  @ApiProperty({
    required: false,
    type: () => GeneStatWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => GeneStatWhereUniqueInput)
  @IsOptional()
  @Field(() => GeneStatWhereUniqueInput, {
    nullable: true,
  })
  geneStats?: GeneStatWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: () => PlayerCraftCreateNestedManyWithoutPlayersInput,
  })
  @ValidateNested()
  @Type(() => PlayerCraftCreateNestedManyWithoutPlayersInput)
  @IsOptional()
  @Field(() => PlayerCraftCreateNestedManyWithoutPlayersInput, {
    nullable: true,
  })
  playerCrafts?: PlayerCraftCreateNestedManyWithoutPlayersInput;

  @ApiProperty({
    required: false,
    type: () => PlayerFactionQuestCreateNestedManyWithoutPlayersInput,
  })
  @ValidateNested()
  @Type(() => PlayerFactionQuestCreateNestedManyWithoutPlayersInput)
  @IsOptional()
  @Field(() => PlayerFactionQuestCreateNestedManyWithoutPlayersInput, {
    nullable: true,
  })
  playerFactionQuests?: PlayerFactionQuestCreateNestedManyWithoutPlayersInput;

  @ApiProperty({
    required: false,
    type: () => PlayerFactionReputationCreateNestedManyWithoutPlayersInput,
  })
  @ValidateNested()
  @Type(() => PlayerFactionReputationCreateNestedManyWithoutPlayersInput)
  @IsOptional()
  @Field(() => PlayerFactionReputationCreateNestedManyWithoutPlayersInput, {
    nullable: true,
  })
  playerFactionReputations?: PlayerFactionReputationCreateNestedManyWithoutPlayersInput;

  @ApiProperty({
    required: false,
    type: () => PlayerFactionSpellCreateNestedManyWithoutPlayersInput,
  })
  @ValidateNested()
  @Type(() => PlayerFactionSpellCreateNestedManyWithoutPlayersInput)
  @IsOptional()
  @Field(() => PlayerFactionSpellCreateNestedManyWithoutPlayersInput, {
    nullable: true,
  })
  playerFactionSpells?: PlayerFactionSpellCreateNestedManyWithoutPlayersInput;

  @ApiProperty({
    required: false,
    type: () => PlayerFactionTitleCreateNestedManyWithoutPlayersInput,
  })
  @ValidateNested()
  @Type(() => PlayerFactionTitleCreateNestedManyWithoutPlayersInput)
  @IsOptional()
  @Field(() => PlayerFactionTitleCreateNestedManyWithoutPlayersInput, {
    nullable: true,
  })
  playerFactionTitles?: PlayerFactionTitleCreateNestedManyWithoutPlayersInput;

  @ApiProperty({
    required: false,
    type: () => PlayerXpForLevelCreateNestedManyWithoutPlayersInput,
  })
  @ValidateNested()
  @Type(() => PlayerXpForLevelCreateNestedManyWithoutPlayersInput)
  @IsOptional()
  @Field(() => PlayerXpForLevelCreateNestedManyWithoutPlayersInput, {
    nullable: true,
  })
  playerXpForLevels?: PlayerXpForLevelCreateNestedManyWithoutPlayersInput;

  @ApiProperty({
    required: false,
    type: () => ResponseCreateNestedManyWithoutPlayersInput,
  })
  @ValidateNested()
  @Type(() => ResponseCreateNestedManyWithoutPlayersInput)
  @IsOptional()
  @Field(() => ResponseCreateNestedManyWithoutPlayersInput, {
    nullable: true,
  })
  responses?: ResponseCreateNestedManyWithoutPlayersInput;
}

export { PlayerCreateInput as PlayerCreateInput };
