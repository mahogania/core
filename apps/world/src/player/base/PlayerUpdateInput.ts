/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { PlayerFactionAchievementUpdateManyWithoutPlayersInput } from "./PlayerFactionAchievementUpdateManyWithoutPlayersInput";
import { ValidateNested, IsOptional } from "class-validator";
import { Type } from "class-transformer";
import { AchievementUpdateManyWithoutPlayersInput } from "./AchievementUpdateManyWithoutPlayersInput";
import { GeneStatWhereUniqueInput } from "../../geneStat/base/GeneStatWhereUniqueInput";
import { PlayerCraftUpdateManyWithoutPlayersInput } from "./PlayerCraftUpdateManyWithoutPlayersInput";
import { PlayerFactionQuestUpdateManyWithoutPlayersInput } from "./PlayerFactionQuestUpdateManyWithoutPlayersInput";
import { PlayerFactionReputationUpdateManyWithoutPlayersInput } from "./PlayerFactionReputationUpdateManyWithoutPlayersInput";
import { PlayerFactionSpellUpdateManyWithoutPlayersInput } from "./PlayerFactionSpellUpdateManyWithoutPlayersInput";
import { PlayerFactionTitleUpdateManyWithoutPlayersInput } from "./PlayerFactionTitleUpdateManyWithoutPlayersInput";
import { PlayerXpForLevelUpdateManyWithoutPlayersInput } from "./PlayerXpForLevelUpdateManyWithoutPlayersInput";
import { ResponseUpdateManyWithoutPlayersInput } from "./ResponseUpdateManyWithoutPlayersInput";

@InputType()
class PlayerUpdateInput {
  @ApiProperty({
    required: false,
    type: () => PlayerFactionAchievementUpdateManyWithoutPlayersInput,
  })
  @ValidateNested()
  @Type(() => PlayerFactionAchievementUpdateManyWithoutPlayersInput)
  @IsOptional()
  @Field(() => PlayerFactionAchievementUpdateManyWithoutPlayersInput, {
    nullable: true,
  })
  PlayerFactionAchievements?: PlayerFactionAchievementUpdateManyWithoutPlayersInput;

  @ApiProperty({
    required: false,
    type: () => AchievementUpdateManyWithoutPlayersInput,
  })
  @ValidateNested()
  @Type(() => AchievementUpdateManyWithoutPlayersInput)
  @IsOptional()
  @Field(() => AchievementUpdateManyWithoutPlayersInput, {
    nullable: true,
  })
  achievements?: AchievementUpdateManyWithoutPlayersInput;

  @ApiProperty({
    required: false,
    type: () => GeneStatWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => GeneStatWhereUniqueInput)
  @IsOptional()
  @Field(() => GeneStatWhereUniqueInput, {
    nullable: true,
  })
  geneStats?: GeneStatWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: () => PlayerCraftUpdateManyWithoutPlayersInput,
  })
  @ValidateNested()
  @Type(() => PlayerCraftUpdateManyWithoutPlayersInput)
  @IsOptional()
  @Field(() => PlayerCraftUpdateManyWithoutPlayersInput, {
    nullable: true,
  })
  playerCrafts?: PlayerCraftUpdateManyWithoutPlayersInput;

  @ApiProperty({
    required: false,
    type: () => PlayerFactionQuestUpdateManyWithoutPlayersInput,
  })
  @ValidateNested()
  @Type(() => PlayerFactionQuestUpdateManyWithoutPlayersInput)
  @IsOptional()
  @Field(() => PlayerFactionQuestUpdateManyWithoutPlayersInput, {
    nullable: true,
  })
  playerFactionQuests?: PlayerFactionQuestUpdateManyWithoutPlayersInput;

  @ApiProperty({
    required: false,
    type: () => PlayerFactionReputationUpdateManyWithoutPlayersInput,
  })
  @ValidateNested()
  @Type(() => PlayerFactionReputationUpdateManyWithoutPlayersInput)
  @IsOptional()
  @Field(() => PlayerFactionReputationUpdateManyWithoutPlayersInput, {
    nullable: true,
  })
  playerFactionReputations?: PlayerFactionReputationUpdateManyWithoutPlayersInput;

  @ApiProperty({
    required: false,
    type: () => PlayerFactionSpellUpdateManyWithoutPlayersInput,
  })
  @ValidateNested()
  @Type(() => PlayerFactionSpellUpdateManyWithoutPlayersInput)
  @IsOptional()
  @Field(() => PlayerFactionSpellUpdateManyWithoutPlayersInput, {
    nullable: true,
  })
  playerFactionSpells?: PlayerFactionSpellUpdateManyWithoutPlayersInput;

  @ApiProperty({
    required: false,
    type: () => PlayerFactionTitleUpdateManyWithoutPlayersInput,
  })
  @ValidateNested()
  @Type(() => PlayerFactionTitleUpdateManyWithoutPlayersInput)
  @IsOptional()
  @Field(() => PlayerFactionTitleUpdateManyWithoutPlayersInput, {
    nullable: true,
  })
  playerFactionTitles?: PlayerFactionTitleUpdateManyWithoutPlayersInput;

  @ApiProperty({
    required: false,
    type: () => PlayerXpForLevelUpdateManyWithoutPlayersInput,
  })
  @ValidateNested()
  @Type(() => PlayerXpForLevelUpdateManyWithoutPlayersInput)
  @IsOptional()
  @Field(() => PlayerXpForLevelUpdateManyWithoutPlayersInput, {
    nullable: true,
  })
  playerXpForLevels?: PlayerXpForLevelUpdateManyWithoutPlayersInput;

  @ApiProperty({
    required: false,
    type: () => ResponseUpdateManyWithoutPlayersInput,
  })
  @ValidateNested()
  @Type(() => ResponseUpdateManyWithoutPlayersInput)
  @IsOptional()
  @Field(() => ResponseUpdateManyWithoutPlayersInput, {
    nullable: true,
  })
  responses?: ResponseUpdateManyWithoutPlayersInput;
}

export { PlayerUpdateInput as PlayerUpdateInput };
