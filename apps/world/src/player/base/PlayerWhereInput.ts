/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { PlayerFactionAchievementListRelationFilter } from "../../playerFactionAchievement/base/PlayerFactionAchievementListRelationFilter";
import { ValidateNested, IsOptional } from "class-validator";
import { Type } from "class-transformer";
import { AchievementListRelationFilter } from "../../achievement/base/AchievementListRelationFilter";
import { GeneStatWhereUniqueInput } from "../../geneStat/base/GeneStatWhereUniqueInput";
import { StringFilter } from "../../util/StringFilter";
import { PlayerCraftListRelationFilter } from "../../playerCraft/base/PlayerCraftListRelationFilter";
import { PlayerFactionQuestListRelationFilter } from "../../playerFactionQuest/base/PlayerFactionQuestListRelationFilter";
import { PlayerFactionReputationListRelationFilter } from "../../playerFactionReputation/base/PlayerFactionReputationListRelationFilter";
import { PlayerFactionSpellListRelationFilter } from "../../playerFactionSpell/base/PlayerFactionSpellListRelationFilter";
import { PlayerFactionTitleListRelationFilter } from "../../playerFactionTitle/base/PlayerFactionTitleListRelationFilter";
import { PlayerXpForLevelListRelationFilter } from "../../playerXpForLevel/base/PlayerXpForLevelListRelationFilter";
import { ResponseListRelationFilter } from "../../response/base/ResponseListRelationFilter";

@InputType()
class PlayerWhereInput {
  @ApiProperty({
    required: false,
    type: () => PlayerFactionAchievementListRelationFilter,
  })
  @ValidateNested()
  @Type(() => PlayerFactionAchievementListRelationFilter)
  @IsOptional()
  @Field(() => PlayerFactionAchievementListRelationFilter, {
    nullable: true,
  })
  PlayerFactionAchievements?: PlayerFactionAchievementListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => AchievementListRelationFilter,
  })
  @ValidateNested()
  @Type(() => AchievementListRelationFilter)
  @IsOptional()
  @Field(() => AchievementListRelationFilter, {
    nullable: true,
  })
  achievements?: AchievementListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => GeneStatWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => GeneStatWhereUniqueInput)
  @IsOptional()
  @Field(() => GeneStatWhereUniqueInput, {
    nullable: true,
  })
  geneStats?: GeneStatWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  id?: StringFilter;

  @ApiProperty({
    required: false,
    type: () => PlayerCraftListRelationFilter,
  })
  @ValidateNested()
  @Type(() => PlayerCraftListRelationFilter)
  @IsOptional()
  @Field(() => PlayerCraftListRelationFilter, {
    nullable: true,
  })
  playerCrafts?: PlayerCraftListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => PlayerFactionQuestListRelationFilter,
  })
  @ValidateNested()
  @Type(() => PlayerFactionQuestListRelationFilter)
  @IsOptional()
  @Field(() => PlayerFactionQuestListRelationFilter, {
    nullable: true,
  })
  playerFactionQuests?: PlayerFactionQuestListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => PlayerFactionReputationListRelationFilter,
  })
  @ValidateNested()
  @Type(() => PlayerFactionReputationListRelationFilter)
  @IsOptional()
  @Field(() => PlayerFactionReputationListRelationFilter, {
    nullable: true,
  })
  playerFactionReputations?: PlayerFactionReputationListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => PlayerFactionSpellListRelationFilter,
  })
  @ValidateNested()
  @Type(() => PlayerFactionSpellListRelationFilter)
  @IsOptional()
  @Field(() => PlayerFactionSpellListRelationFilter, {
    nullable: true,
  })
  playerFactionSpells?: PlayerFactionSpellListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => PlayerFactionTitleListRelationFilter,
  })
  @ValidateNested()
  @Type(() => PlayerFactionTitleListRelationFilter)
  @IsOptional()
  @Field(() => PlayerFactionTitleListRelationFilter, {
    nullable: true,
  })
  playerFactionTitles?: PlayerFactionTitleListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => PlayerXpForLevelListRelationFilter,
  })
  @ValidateNested()
  @Type(() => PlayerXpForLevelListRelationFilter)
  @IsOptional()
  @Field(() => PlayerXpForLevelListRelationFilter, {
    nullable: true,
  })
  playerXpForLevels?: PlayerXpForLevelListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => ResponseListRelationFilter,
  })
  @ValidateNested()
  @Type(() => ResponseListRelationFilter)
  @IsOptional()
  @Field(() => ResponseListRelationFilter, {
    nullable: true,
  })
  responses?: ResponseListRelationFilter;
}

export { PlayerWhereInput as PlayerWhereInput };
