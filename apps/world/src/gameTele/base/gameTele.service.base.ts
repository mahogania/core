/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, GameTele as PrismaGameTele } from "@prisma/client";

export class GameTeleServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.GameTeleCountArgs, "select">): Promise<number> {
    return this.prisma.gameTele.count(args);
  }

  async gameTeles(
    args: Prisma.GameTeleFindManyArgs
  ): Promise<PrismaGameTele[]> {
    return this.prisma.gameTele.findMany(args);
  }
  async gameTele(
    args: Prisma.GameTeleFindUniqueArgs
  ): Promise<PrismaGameTele | null> {
    return this.prisma.gameTele.findUnique(args);
  }
  async createGameTele(
    args: Prisma.GameTeleCreateArgs
  ): Promise<PrismaGameTele> {
    return this.prisma.gameTele.create(args);
  }
  async updateGameTele(
    args: Prisma.GameTeleUpdateArgs
  ): Promise<PrismaGameTele> {
    return this.prisma.gameTele.update(args);
  }
  async deleteGameTele(
    args: Prisma.GameTeleDeleteArgs
  ): Promise<PrismaGameTele> {
    return this.prisma.gameTele.delete(args);
  }
}
