/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  PlayercreateinfoItem as PrismaPlayercreateinfoItem,
} from "@prisma/client";

export class PlayercreateinfoItemServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.PlayercreateinfoItemCountArgs, "select">
  ): Promise<number> {
    return this.prisma.playercreateinfoItem.count(args);
  }

  async playercreateinfoItems(
    args: Prisma.PlayercreateinfoItemFindManyArgs
  ): Promise<PrismaPlayercreateinfoItem[]> {
    return this.prisma.playercreateinfoItem.findMany(args);
  }
  async playercreateinfoItem(
    args: Prisma.PlayercreateinfoItemFindUniqueArgs
  ): Promise<PrismaPlayercreateinfoItem | null> {
    return this.prisma.playercreateinfoItem.findUnique(args);
  }
  async createPlayercreateinfoItem(
    args: Prisma.PlayercreateinfoItemCreateArgs
  ): Promise<PrismaPlayercreateinfoItem> {
    return this.prisma.playercreateinfoItem.create(args);
  }
  async updatePlayercreateinfoItem(
    args: Prisma.PlayercreateinfoItemUpdateArgs
  ): Promise<PrismaPlayercreateinfoItem> {
    return this.prisma.playercreateinfoItem.update(args);
  }
  async deletePlayercreateinfoItem(
    args: Prisma.PlayercreateinfoItemDeleteArgs
  ): Promise<PrismaPlayercreateinfoItem> {
    return this.prisma.playercreateinfoItem.delete(args);
  }
}
