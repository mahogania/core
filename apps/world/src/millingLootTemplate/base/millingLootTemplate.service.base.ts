/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";

import {
  Prisma,
  MillingLootTemplate as PrismaMillingLootTemplate,
  LootTemplate as PrismaLootTemplate,
} from "@prisma/client";

export class MillingLootTemplateServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.MillingLootTemplateCountArgs, "select">
  ): Promise<number> {
    return this.prisma.millingLootTemplate.count(args);
  }

  async millingLootTemplates(
    args: Prisma.MillingLootTemplateFindManyArgs
  ): Promise<PrismaMillingLootTemplate[]> {
    return this.prisma.millingLootTemplate.findMany(args);
  }
  async millingLootTemplate(
    args: Prisma.MillingLootTemplateFindUniqueArgs
  ): Promise<PrismaMillingLootTemplate | null> {
    return this.prisma.millingLootTemplate.findUnique(args);
  }
  async createMillingLootTemplate(
    args: Prisma.MillingLootTemplateCreateArgs
  ): Promise<PrismaMillingLootTemplate> {
    return this.prisma.millingLootTemplate.create(args);
  }
  async updateMillingLootTemplate(
    args: Prisma.MillingLootTemplateUpdateArgs
  ): Promise<PrismaMillingLootTemplate> {
    return this.prisma.millingLootTemplate.update(args);
  }
  async deleteMillingLootTemplate(
    args: Prisma.MillingLootTemplateDeleteArgs
  ): Promise<PrismaMillingLootTemplate> {
    return this.prisma.millingLootTemplate.delete(args);
  }

  async getLootTemplate(parentId: string): Promise<PrismaLootTemplate | null> {
    return this.prisma.millingLootTemplate
      .findUnique({
        where: { id: parentId },
      })
      .lootTemplate();
  }
}
