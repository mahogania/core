/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  GameEventModelEquip as PrismaGameEventModelEquip,
} from "@prisma/client";

export class GameEventModelEquipServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.GameEventModelEquipCountArgs, "select">
  ): Promise<number> {
    return this.prisma.gameEventModelEquip.count(args);
  }

  async gameEventModelEquips(
    args: Prisma.GameEventModelEquipFindManyArgs
  ): Promise<PrismaGameEventModelEquip[]> {
    return this.prisma.gameEventModelEquip.findMany(args);
  }
  async gameEventModelEquip(
    args: Prisma.GameEventModelEquipFindUniqueArgs
  ): Promise<PrismaGameEventModelEquip | null> {
    return this.prisma.gameEventModelEquip.findUnique(args);
  }
  async createGameEventModelEquip(
    args: Prisma.GameEventModelEquipCreateArgs
  ): Promise<PrismaGameEventModelEquip> {
    return this.prisma.gameEventModelEquip.create(args);
  }
  async updateGameEventModelEquip(
    args: Prisma.GameEventModelEquipUpdateArgs
  ): Promise<PrismaGameEventModelEquip> {
    return this.prisma.gameEventModelEquip.update(args);
  }
  async deleteGameEventModelEquip(
    args: Prisma.GameEventModelEquipDeleteArgs
  ): Promise<PrismaGameEventModelEquip> {
    return this.prisma.gameEventModelEquip.delete(args);
  }
}
