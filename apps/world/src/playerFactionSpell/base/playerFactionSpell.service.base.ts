/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";

import {
  Prisma,
  PlayerFactionSpell as PrismaPlayerFactionSpell,
  Faction as PrismaFaction,
  Player as PrismaPlayer,
} from "@prisma/client";

export class PlayerFactionSpellServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.PlayerFactionSpellCountArgs, "select">
  ): Promise<number> {
    return this.prisma.playerFactionSpell.count(args);
  }

  async playerFactionSpells(
    args: Prisma.PlayerFactionSpellFindManyArgs
  ): Promise<PrismaPlayerFactionSpell[]> {
    return this.prisma.playerFactionSpell.findMany(args);
  }
  async playerFactionSpell(
    args: Prisma.PlayerFactionSpellFindUniqueArgs
  ): Promise<PrismaPlayerFactionSpell | null> {
    return this.prisma.playerFactionSpell.findUnique(args);
  }
  async createPlayerFactionSpell(
    args: Prisma.PlayerFactionSpellCreateArgs
  ): Promise<PrismaPlayerFactionSpell> {
    return this.prisma.playerFactionSpell.create(args);
  }
  async updatePlayerFactionSpell(
    args: Prisma.PlayerFactionSpellUpdateArgs
  ): Promise<PrismaPlayerFactionSpell> {
    return this.prisma.playerFactionSpell.update(args);
  }
  async deletePlayerFactionSpell(
    args: Prisma.PlayerFactionSpellDeleteArgs
  ): Promise<PrismaPlayerFactionSpell> {
    return this.prisma.playerFactionSpell.delete(args);
  }

  async getFaction(parentId: string): Promise<PrismaFaction | null> {
    return this.prisma.playerFactionSpell
      .findUnique({
        where: { id: parentId },
      })
      .faction();
  }

  async getPlayer(parentId: string): Promise<PrismaPlayer | null> {
    return this.prisma.playerFactionSpell
      .findUnique({
        where: { id: parentId },
      })
      .player();
  }
}
