/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  NpcSpellclickSpells as PrismaNpcSpellclickSpells,
} from "@prisma/client";

export class NpcSpellclickSpellsServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.NpcSpellclickSpellsCountArgs, "select">
  ): Promise<number> {
    return this.prisma.npcSpellclickSpells.count(args);
  }

  async npcSpellclickSpellsItems(
    args: Prisma.NpcSpellclickSpellsFindManyArgs
  ): Promise<PrismaNpcSpellclickSpells[]> {
    return this.prisma.npcSpellclickSpells.findMany(args);
  }
  async npcSpellclickSpells(
    args: Prisma.NpcSpellclickSpellsFindUniqueArgs
  ): Promise<PrismaNpcSpellclickSpells | null> {
    return this.prisma.npcSpellclickSpells.findUnique(args);
  }
  async createNpcSpellclickSpells(
    args: Prisma.NpcSpellclickSpellsCreateArgs
  ): Promise<PrismaNpcSpellclickSpells> {
    return this.prisma.npcSpellclickSpells.create(args);
  }
  async updateNpcSpellclickSpells(
    args: Prisma.NpcSpellclickSpellsUpdateArgs
  ): Promise<PrismaNpcSpellclickSpells> {
    return this.prisma.npcSpellclickSpells.update(args);
  }
  async deleteNpcSpellclickSpells(
    args: Prisma.NpcSpellclickSpellsDeleteArgs
  ): Promise<PrismaNpcSpellclickSpells> {
    return this.prisma.npcSpellclickSpells.delete(args);
  }
}
