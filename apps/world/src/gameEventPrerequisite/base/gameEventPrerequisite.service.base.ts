/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  GameEventPrerequisite as PrismaGameEventPrerequisite,
} from "@prisma/client";

export class GameEventPrerequisiteServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.GameEventPrerequisiteCountArgs, "select">
  ): Promise<number> {
    return this.prisma.gameEventPrerequisite.count(args);
  }

  async gameEventPrerequisites(
    args: Prisma.GameEventPrerequisiteFindManyArgs
  ): Promise<PrismaGameEventPrerequisite[]> {
    return this.prisma.gameEventPrerequisite.findMany(args);
  }
  async gameEventPrerequisite(
    args: Prisma.GameEventPrerequisiteFindUniqueArgs
  ): Promise<PrismaGameEventPrerequisite | null> {
    return this.prisma.gameEventPrerequisite.findUnique(args);
  }
  async createGameEventPrerequisite(
    args: Prisma.GameEventPrerequisiteCreateArgs
  ): Promise<PrismaGameEventPrerequisite> {
    return this.prisma.gameEventPrerequisite.create(args);
  }
  async updateGameEventPrerequisite(
    args: Prisma.GameEventPrerequisiteUpdateArgs
  ): Promise<PrismaGameEventPrerequisite> {
    return this.prisma.gameEventPrerequisite.update(args);
  }
  async deleteGameEventPrerequisite(
    args: Prisma.GameEventPrerequisiteDeleteArgs
  ): Promise<PrismaGameEventPrerequisite> {
    return this.prisma.gameEventPrerequisite.delete(args);
  }
}
