syntax = "proto3";

                 package accessRequirement;
service AccessRequirementService {
 rpc createAccessRequirement (AccessRequirementCreateInput) returns (AccessRequirement) {}
rpc accessRequirements (findManyParams) returns (stream AccessRequirement) {}
rpc accessRequirement (AccessRequirementWhereUniqueInput) returns (AccessRequirement) {}
rpc updateAccessRequirement (AccessRequirementUpdateInput) returns (AccessRequirement) {}
rpc deleteAccessRequirement (AccessRequirementWhereUniqueInput) returns (AccessRequirement) {} 
 }
message AccessRequirementCreateInput {
string comment = 1;
int32 completedAchievement = 2;
string createdAt = 3;
int32 difficulty = 4;
string failureText = 5;
string id = 6;
int32 item = 7;
int32 levelMax = 8;
int32 levelMin = 9;
int32 mapId = 10;
int32 questDone = 11;
string updatedAt = 12;
};
message AccessRequirement {
string comment = 1;
int32 completedAchievement = 2;
string createdAt = 3;
int32 difficulty = 4;
string failureText = 5;
string id = 6;
int32 item = 7;
int32 levelMax = 8;
int32 levelMin = 9;
int32 mapId = 10;
int32 questDone = 11;
string updatedAt = 12;
};
message AccessRequirementWhereUniqueInput {
string comment = 1;
int32 completedAchievement = 2;
string createdAt = 3;
int32 difficulty = 4;
string failureText = 5;
string id = 6;
int32 item = 7;
int32 levelMax = 8;
int32 levelMin = 9;
int32 mapId = 10;
int32 questDone = 11;
string updatedAt = 12;
};
message AccessRequirementUpdateInput {
string comment = 1;
int32 completedAchievement = 2;
string createdAt = 3;
int32 difficulty = 4;
string failureText = 5;
string id = 6;
int32 item = 7;
int32 levelMax = 8;
int32 levelMin = 9;
int32 mapId = 10;
int32 questDone = 11;
string updatedAt = 12;
};
message findManyParams {

};