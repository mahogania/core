/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  GameEventCreatureQuest as PrismaGameEventCreatureQuest,
} from "@prisma/client";

export class GameEventCreatureQuestServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.GameEventCreatureQuestCountArgs, "select">
  ): Promise<number> {
    return this.prisma.gameEventCreatureQuest.count(args);
  }

  async gameEventCreatureQuests(
    args: Prisma.GameEventCreatureQuestFindManyArgs
  ): Promise<PrismaGameEventCreatureQuest[]> {
    return this.prisma.gameEventCreatureQuest.findMany(args);
  }
  async gameEventCreatureQuest(
    args: Prisma.GameEventCreatureQuestFindUniqueArgs
  ): Promise<PrismaGameEventCreatureQuest | null> {
    return this.prisma.gameEventCreatureQuest.findUnique(args);
  }
  async createGameEventCreatureQuest(
    args: Prisma.GameEventCreatureQuestCreateArgs
  ): Promise<PrismaGameEventCreatureQuest> {
    return this.prisma.gameEventCreatureQuest.create(args);
  }
  async updateGameEventCreatureQuest(
    args: Prisma.GameEventCreatureQuestUpdateArgs
  ): Promise<PrismaGameEventCreatureQuest> {
    return this.prisma.gameEventCreatureQuest.update(args);
  }
  async deleteGameEventCreatureQuest(
    args: Prisma.GameEventCreatureQuestDeleteArgs
  ): Promise<PrismaGameEventCreatureQuest> {
    return this.prisma.gameEventCreatureQuest.delete(args);
  }
}
