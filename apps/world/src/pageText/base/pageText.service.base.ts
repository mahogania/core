/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, PageText as PrismaPageText } from "@prisma/client";

export class PageTextServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.PageTextCountArgs, "select">): Promise<number> {
    return this.prisma.pageText.count(args);
  }

  async pageTexts(
    args: Prisma.PageTextFindManyArgs
  ): Promise<PrismaPageText[]> {
    return this.prisma.pageText.findMany(args);
  }
  async pageText(
    args: Prisma.PageTextFindUniqueArgs
  ): Promise<PrismaPageText | null> {
    return this.prisma.pageText.findUnique(args);
  }
  async createPageText(
    args: Prisma.PageTextCreateArgs
  ): Promise<PrismaPageText> {
    return this.prisma.pageText.create(args);
  }
  async updatePageText(
    args: Prisma.PageTextUpdateArgs
  ): Promise<PrismaPageText> {
    return this.prisma.pageText.update(args);
  }
  async deletePageText(
    args: Prisma.PageTextDeleteArgs
  ): Promise<PrismaPageText> {
    return this.prisma.pageText.delete(args);
  }
}
