/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  GameObjectAddon as PrismaGameObjectAddon,
} from "@prisma/client";

export class GameObjectAddonServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.GameObjectAddonCountArgs, "select">
  ): Promise<number> {
    return this.prisma.gameObjectAddon.count(args);
  }

  async gameObjectAddons(
    args: Prisma.GameObjectAddonFindManyArgs
  ): Promise<PrismaGameObjectAddon[]> {
    return this.prisma.gameObjectAddon.findMany(args);
  }
  async gameObjectAddon(
    args: Prisma.GameObjectAddonFindUniqueArgs
  ): Promise<PrismaGameObjectAddon | null> {
    return this.prisma.gameObjectAddon.findUnique(args);
  }
  async createGameObjectAddon(
    args: Prisma.GameObjectAddonCreateArgs
  ): Promise<PrismaGameObjectAddon> {
    return this.prisma.gameObjectAddon.create(args);
  }
  async updateGameObjectAddon(
    args: Prisma.GameObjectAddonUpdateArgs
  ): Promise<PrismaGameObjectAddon> {
    return this.prisma.gameObjectAddon.update(args);
  }
  async deleteGameObjectAddon(
    args: Prisma.GameObjectAddonDeleteArgs
  ): Promise<PrismaGameObjectAddon> {
    return this.prisma.gameObjectAddon.delete(args);
  }
}
