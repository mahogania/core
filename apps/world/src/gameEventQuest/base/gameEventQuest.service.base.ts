/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";

import {
  Prisma,
  GameEventQuest as PrismaGameEventQuest,
  GameEvent as PrismaGameEvent,
} from "@prisma/client";

export class GameEventQuestServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.GameEventQuestCountArgs, "select">
  ): Promise<number> {
    return this.prisma.gameEventQuest.count(args);
  }

  async gameEventQuests(
    args: Prisma.GameEventQuestFindManyArgs
  ): Promise<PrismaGameEventQuest[]> {
    return this.prisma.gameEventQuest.findMany(args);
  }
  async gameEventQuest(
    args: Prisma.GameEventQuestFindUniqueArgs
  ): Promise<PrismaGameEventQuest | null> {
    return this.prisma.gameEventQuest.findUnique(args);
  }
  async createGameEventQuest(
    args: Prisma.GameEventQuestCreateArgs
  ): Promise<PrismaGameEventQuest> {
    return this.prisma.gameEventQuest.create(args);
  }
  async updateGameEventQuest(
    args: Prisma.GameEventQuestUpdateArgs
  ): Promise<PrismaGameEventQuest> {
    return this.prisma.gameEventQuest.update(args);
  }
  async deleteGameEventQuest(
    args: Prisma.GameEventQuestDeleteArgs
  ): Promise<PrismaGameEventQuest> {
    return this.prisma.gameEventQuest.delete(args);
  }

  async findGameEvents(
    parentId: string,
    args: Prisma.GameEventFindManyArgs
  ): Promise<PrismaGameEvent[]> {
    return this.prisma.gameEventQuest
      .findUniqueOrThrow({
        where: { id: parentId },
      })
      .gameEvents(args);
  }
}
