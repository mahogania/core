/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  PlayerchoiceResponseReward as PrismaPlayerchoiceResponseReward,
} from "@prisma/client";

export class PlayerchoiceResponseRewardServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.PlayerchoiceResponseRewardCountArgs, "select">
  ): Promise<number> {
    return this.prisma.playerchoiceResponseReward.count(args);
  }

  async playerchoiceResponseRewards(
    args: Prisma.PlayerchoiceResponseRewardFindManyArgs
  ): Promise<PrismaPlayerchoiceResponseReward[]> {
    return this.prisma.playerchoiceResponseReward.findMany(args);
  }
  async playerchoiceResponseReward(
    args: Prisma.PlayerchoiceResponseRewardFindUniqueArgs
  ): Promise<PrismaPlayerchoiceResponseReward | null> {
    return this.prisma.playerchoiceResponseReward.findUnique(args);
  }
  async createPlayerchoiceResponseReward(
    args: Prisma.PlayerchoiceResponseRewardCreateArgs
  ): Promise<PrismaPlayerchoiceResponseReward> {
    return this.prisma.playerchoiceResponseReward.create(args);
  }
  async updatePlayerchoiceResponseReward(
    args: Prisma.PlayerchoiceResponseRewardUpdateArgs
  ): Promise<PrismaPlayerchoiceResponseReward> {
    return this.prisma.playerchoiceResponseReward.update(args);
  }
  async deletePlayerchoiceResponseReward(
    args: Prisma.PlayerchoiceResponseRewardDeleteArgs
  ): Promise<PrismaPlayerchoiceResponseReward> {
    return this.prisma.playerchoiceResponseReward.delete(args);
  }
}
