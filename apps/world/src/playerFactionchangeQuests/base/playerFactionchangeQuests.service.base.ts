/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  PlayerFactionchangeQuests as PrismaPlayerFactionchangeQuests,
} from "@prisma/client";

export class PlayerFactionchangeQuestsServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.PlayerFactionchangeQuestsCountArgs, "select">
  ): Promise<number> {
    return this.prisma.playerFactionchangeQuests.count(args);
  }

  async playerFactionchangeQuestsItems(
    args: Prisma.PlayerFactionchangeQuestsFindManyArgs
  ): Promise<PrismaPlayerFactionchangeQuests[]> {
    return this.prisma.playerFactionchangeQuests.findMany(args);
  }
  async playerFactionchangeQuests(
    args: Prisma.PlayerFactionchangeQuestsFindUniqueArgs
  ): Promise<PrismaPlayerFactionchangeQuests | null> {
    return this.prisma.playerFactionchangeQuests.findUnique(args);
  }
  async createPlayerFactionchangeQuests(
    args: Prisma.PlayerFactionchangeQuestsCreateArgs
  ): Promise<PrismaPlayerFactionchangeQuests> {
    return this.prisma.playerFactionchangeQuests.create(args);
  }
  async updatePlayerFactionchangeQuests(
    args: Prisma.PlayerFactionchangeQuestsUpdateArgs
  ): Promise<PrismaPlayerFactionchangeQuests> {
    return this.prisma.playerFactionchangeQuests.update(args);
  }
  async deletePlayerFactionchangeQuests(
    args: Prisma.PlayerFactionchangeQuestsDeleteArgs
  ): Promise<PrismaPlayerFactionchangeQuests> {
    return this.prisma.playerFactionchangeQuests.delete(args);
  }
}
