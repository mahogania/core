/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  GameEventNpcFlag as PrismaGameEventNpcFlag,
} from "@prisma/client";

export class GameEventNpcFlagServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.GameEventNpcFlagCountArgs, "select">
  ): Promise<number> {
    return this.prisma.gameEventNpcFlag.count(args);
  }

  async gameEventNpcFlags(
    args: Prisma.GameEventNpcFlagFindManyArgs
  ): Promise<PrismaGameEventNpcFlag[]> {
    return this.prisma.gameEventNpcFlag.findMany(args);
  }
  async gameEventNpcFlag(
    args: Prisma.GameEventNpcFlagFindUniqueArgs
  ): Promise<PrismaGameEventNpcFlag | null> {
    return this.prisma.gameEventNpcFlag.findUnique(args);
  }
  async createGameEventNpcFlag(
    args: Prisma.GameEventNpcFlagCreateArgs
  ): Promise<PrismaGameEventNpcFlag> {
    return this.prisma.gameEventNpcFlag.create(args);
  }
  async updateGameEventNpcFlag(
    args: Prisma.GameEventNpcFlagUpdateArgs
  ): Promise<PrismaGameEventNpcFlag> {
    return this.prisma.gameEventNpcFlag.update(args);
  }
  async deleteGameEventNpcFlag(
    args: Prisma.GameEventNpcFlagDeleteArgs
  ): Promise<PrismaGameEventNpcFlag> {
    return this.prisma.gameEventNpcFlag.delete(args);
  }
}
