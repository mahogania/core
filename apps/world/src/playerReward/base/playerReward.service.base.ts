/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, PlayerReward as PrismaPlayerReward } from "@prisma/client";

export class PlayerRewardServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.PlayerRewardCountArgs, "select">
  ): Promise<number> {
    return this.prisma.playerReward.count(args);
  }

  async playerRewards(
    args: Prisma.PlayerRewardFindManyArgs
  ): Promise<PrismaPlayerReward[]> {
    return this.prisma.playerReward.findMany(args);
  }
  async playerReward(
    args: Prisma.PlayerRewardFindUniqueArgs
  ): Promise<PrismaPlayerReward | null> {
    return this.prisma.playerReward.findUnique(args);
  }
  async createPlayerReward(
    args: Prisma.PlayerRewardCreateArgs
  ): Promise<PrismaPlayerReward> {
    return this.prisma.playerReward.create(args);
  }
  async updatePlayerReward(
    args: Prisma.PlayerRewardUpdateArgs
  ): Promise<PrismaPlayerReward> {
    return this.prisma.playerReward.update(args);
  }
  async deletePlayerReward(
    args: Prisma.PlayerRewardDeleteArgs
  ): Promise<PrismaPlayerReward> {
    return this.prisma.playerReward.delete(args);
  }
}
