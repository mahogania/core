/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  PlayerchoiceResponseLocale as PrismaPlayerchoiceResponseLocale,
} from "@prisma/client";

export class PlayerchoiceResponseLocaleServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.PlayerchoiceResponseLocaleCountArgs, "select">
  ): Promise<number> {
    return this.prisma.playerchoiceResponseLocale.count(args);
  }

  async playerchoiceResponseLocales(
    args: Prisma.PlayerchoiceResponseLocaleFindManyArgs
  ): Promise<PrismaPlayerchoiceResponseLocale[]> {
    return this.prisma.playerchoiceResponseLocale.findMany(args);
  }
  async playerchoiceResponseLocale(
    args: Prisma.PlayerchoiceResponseLocaleFindUniqueArgs
  ): Promise<PrismaPlayerchoiceResponseLocale | null> {
    return this.prisma.playerchoiceResponseLocale.findUnique(args);
  }
  async createPlayerchoiceResponseLocale(
    args: Prisma.PlayerchoiceResponseLocaleCreateArgs
  ): Promise<PrismaPlayerchoiceResponseLocale> {
    return this.prisma.playerchoiceResponseLocale.create(args);
  }
  async updatePlayerchoiceResponseLocale(
    args: Prisma.PlayerchoiceResponseLocaleUpdateArgs
  ): Promise<PrismaPlayerchoiceResponseLocale> {
    return this.prisma.playerchoiceResponseLocale.update(args);
  }
  async deletePlayerchoiceResponseLocale(
    args: Prisma.PlayerchoiceResponseLocaleDeleteArgs
  ): Promise<PrismaPlayerchoiceResponseLocale> {
    return this.prisma.playerchoiceResponseLocale.delete(args);
  }
}
