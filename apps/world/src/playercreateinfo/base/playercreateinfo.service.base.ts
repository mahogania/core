/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  Playercreateinfo as PrismaPlayercreateinfo,
} from "@prisma/client";

export class PlayercreateinfoServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.PlayercreateinfoCountArgs, "select">
  ): Promise<number> {
    return this.prisma.playercreateinfo.count(args);
  }

  async playercreateinfos(
    args: Prisma.PlayercreateinfoFindManyArgs
  ): Promise<PrismaPlayercreateinfo[]> {
    return this.prisma.playercreateinfo.findMany(args);
  }
  async playercreateinfo(
    args: Prisma.PlayercreateinfoFindUniqueArgs
  ): Promise<PrismaPlayercreateinfo | null> {
    return this.prisma.playercreateinfo.findUnique(args);
  }
  async createPlayercreateinfo(
    args: Prisma.PlayercreateinfoCreateArgs
  ): Promise<PrismaPlayercreateinfo> {
    return this.prisma.playercreateinfo.create(args);
  }
  async updatePlayercreateinfo(
    args: Prisma.PlayercreateinfoUpdateArgs
  ): Promise<PrismaPlayercreateinfo> {
    return this.prisma.playercreateinfo.update(args);
  }
  async deletePlayercreateinfo(
    args: Prisma.PlayercreateinfoDeleteArgs
  ): Promise<PrismaPlayercreateinfo> {
    return this.prisma.playercreateinfo.delete(args);
  }
}
