/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import * as common from "@nestjs/common";
import * as swagger from "@nestjs/swagger";
import { isRecordNotFoundError } from "../../prisma.util";
import * as errors from "../../errors";
import { Request } from "express";
import { plainToClass } from "class-transformer";
import { ApiNestedQuery } from "../../decorators/api-nested-query.decorator";
import { GrpcMethod } from "@nestjs/microservices";
import { GameObjectQuestStarterService } from "../gameObjectQuestStarter.service";
import { GameObjectQuestStarterCreateInput } from "./GameObjectQuestStarterCreateInput";
import { GameObjectQuestStarterWhereInput } from "./GameObjectQuestStarterWhereInput";
import { GameObjectQuestStarterWhereUniqueInput } from "./GameObjectQuestStarterWhereUniqueInput";
import { GameObjectQuestStarterFindManyArgs } from "./GameObjectQuestStarterFindManyArgs";
import { GameObjectQuestStarterUpdateInput } from "./GameObjectQuestStarterUpdateInput";
import { GameObjectQuestStarter } from "./GameObjectQuestStarter";

export class GameObjectQuestStarterGrpcControllerBase {
  constructor(protected readonly service: GameObjectQuestStarterService) {}
  @common.Post()
  @swagger.ApiCreatedResponse({ type: GameObjectQuestStarter })
  @GrpcMethod("GameObjectQuestStarterService", "createGameObjectQuestStarter")
  async createGameObjectQuestStarter(
    @common.Body() data: GameObjectQuestStarterCreateInput
  ): Promise<GameObjectQuestStarter> {
    return await this.service.createGameObjectQuestStarter({
      data: data,
      select: {
        createdAt: true,
        id: true,
        updatedAt: true,
      },
    });
  }

  @common.Get()
  @swagger.ApiOkResponse({ type: [GameObjectQuestStarter] })
  @ApiNestedQuery(GameObjectQuestStarterFindManyArgs)
  @GrpcMethod("GameObjectQuestStarterService", "gameObjectQuestStarters")
  async gameObjectQuestStarters(
    @common.Req() request: Request
  ): Promise<GameObjectQuestStarter[]> {
    const args = plainToClass(
      GameObjectQuestStarterFindManyArgs,
      request.query
    );
    return this.service.gameObjectQuestStarters({
      ...args,
      select: {
        createdAt: true,
        id: true,
        updatedAt: true,
      },
    });
  }

  @common.Get("/:id")
  @swagger.ApiOkResponse({ type: GameObjectQuestStarter })
  @swagger.ApiNotFoundResponse({ type: errors.NotFoundException })
  @GrpcMethod("GameObjectQuestStarterService", "gameObjectQuestStarter")
  async gameObjectQuestStarter(
    @common.Param() params: GameObjectQuestStarterWhereUniqueInput
  ): Promise<GameObjectQuestStarter | null> {
    const result = await this.service.gameObjectQuestStarter({
      where: params,
      select: {
        createdAt: true,
        id: true,
        updatedAt: true,
      },
    });
    if (result === null) {
      throw new errors.NotFoundException(
        `No resource was found for ${JSON.stringify(params)}`
      );
    }
    return result;
  }

  @common.Patch("/:id")
  @swagger.ApiOkResponse({ type: GameObjectQuestStarter })
  @swagger.ApiNotFoundResponse({ type: errors.NotFoundException })
  @GrpcMethod("GameObjectQuestStarterService", "updateGameObjectQuestStarter")
  async updateGameObjectQuestStarter(
    @common.Param() params: GameObjectQuestStarterWhereUniqueInput,
    @common.Body() data: GameObjectQuestStarterUpdateInput
  ): Promise<GameObjectQuestStarter | null> {
    try {
      return await this.service.updateGameObjectQuestStarter({
        where: params,
        data: data,
        select: {
          createdAt: true,
          id: true,
          updatedAt: true,
        },
      });
    } catch (error) {
      if (isRecordNotFoundError(error)) {
        throw new errors.NotFoundException(
          `No resource was found for ${JSON.stringify(params)}`
        );
      }
      throw error;
    }
  }

  @common.Delete("/:id")
  @swagger.ApiOkResponse({ type: GameObjectQuestStarter })
  @swagger.ApiNotFoundResponse({ type: errors.NotFoundException })
  @GrpcMethod("GameObjectQuestStarterService", "deleteGameObjectQuestStarter")
  async deleteGameObjectQuestStarter(
    @common.Param() params: GameObjectQuestStarterWhereUniqueInput
  ): Promise<GameObjectQuestStarter | null> {
    try {
      return await this.service.deleteGameObjectQuestStarter({
        where: params,
        select: {
          createdAt: true,
          id: true,
          updatedAt: true,
        },
      });
    } catch (error) {
      if (isRecordNotFoundError(error)) {
        throw new errors.NotFoundException(
          `No resource was found for ${JSON.stringify(params)}`
        );
      }
      throw error;
    }
  }
}
