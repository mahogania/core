/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  GameEventQuestCondition as PrismaGameEventQuestCondition,
} from "@prisma/client";

export class GameEventQuestConditionServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.GameEventQuestConditionCountArgs, "select">
  ): Promise<number> {
    return this.prisma.gameEventQuestCondition.count(args);
  }

  async gameEventQuestConditions(
    args: Prisma.GameEventQuestConditionFindManyArgs
  ): Promise<PrismaGameEventQuestCondition[]> {
    return this.prisma.gameEventQuestCondition.findMany(args);
  }
  async gameEventQuestCondition(
    args: Prisma.GameEventQuestConditionFindUniqueArgs
  ): Promise<PrismaGameEventQuestCondition | null> {
    return this.prisma.gameEventQuestCondition.findUnique(args);
  }
  async createGameEventQuestCondition(
    args: Prisma.GameEventQuestConditionCreateArgs
  ): Promise<PrismaGameEventQuestCondition> {
    return this.prisma.gameEventQuestCondition.create(args);
  }
  async updateGameEventQuestCondition(
    args: Prisma.GameEventQuestConditionUpdateArgs
  ): Promise<PrismaGameEventQuestCondition> {
    return this.prisma.gameEventQuestCondition.update(args);
  }
  async deleteGameEventQuestCondition(
    args: Prisma.GameEventQuestConditionDeleteArgs
  ): Promise<PrismaGameEventQuestCondition> {
    return this.prisma.gameEventQuestCondition.delete(args);
  }
}
