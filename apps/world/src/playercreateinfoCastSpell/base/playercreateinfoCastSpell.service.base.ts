/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  PlayercreateinfoCastSpell as PrismaPlayercreateinfoCastSpell,
} from "@prisma/client";

export class PlayercreateinfoCastSpellServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.PlayercreateinfoCastSpellCountArgs, "select">
  ): Promise<number> {
    return this.prisma.playercreateinfoCastSpell.count(args);
  }

  async playercreateinfoCastSpells(
    args: Prisma.PlayercreateinfoCastSpellFindManyArgs
  ): Promise<PrismaPlayercreateinfoCastSpell[]> {
    return this.prisma.playercreateinfoCastSpell.findMany(args);
  }
  async playercreateinfoCastSpell(
    args: Prisma.PlayercreateinfoCastSpellFindUniqueArgs
  ): Promise<PrismaPlayercreateinfoCastSpell | null> {
    return this.prisma.playercreateinfoCastSpell.findUnique(args);
  }
  async createPlayercreateinfoCastSpell(
    args: Prisma.PlayercreateinfoCastSpellCreateArgs
  ): Promise<PrismaPlayercreateinfoCastSpell> {
    return this.prisma.playercreateinfoCastSpell.create(args);
  }
  async updatePlayercreateinfoCastSpell(
    args: Prisma.PlayercreateinfoCastSpellUpdateArgs
  ): Promise<PrismaPlayercreateinfoCastSpell> {
    return this.prisma.playercreateinfoCastSpell.update(args);
  }
  async deletePlayercreateinfoCastSpell(
    args: Prisma.PlayercreateinfoCastSpellDeleteArgs
  ): Promise<PrismaPlayercreateinfoCastSpell> {
    return this.prisma.playercreateinfoCastSpell.delete(args);
  }
}
