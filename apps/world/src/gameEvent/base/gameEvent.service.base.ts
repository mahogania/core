/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";

import {
  Prisma,
  GameEvent as PrismaGameEvent,
  GameEventCondition as PrismaGameEventCondition,
  GameEventCreature as PrismaGameEventCreature,
  GameEventGameObject as PrismaGameEventGameObject,
  GameEventModelEquip as PrismaGameEventModelEquip,
  GameEventQuest as PrismaGameEventQuest,
} from "@prisma/client";

export class GameEventServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.GameEventCountArgs, "select">
  ): Promise<number> {
    return this.prisma.gameEvent.count(args);
  }

  async gameEvents(
    args: Prisma.GameEventFindManyArgs
  ): Promise<PrismaGameEvent[]> {
    return this.prisma.gameEvent.findMany(args);
  }
  async gameEvent(
    args: Prisma.GameEventFindUniqueArgs
  ): Promise<PrismaGameEvent | null> {
    return this.prisma.gameEvent.findUnique(args);
  }
  async createGameEvent(
    args: Prisma.GameEventCreateArgs
  ): Promise<PrismaGameEvent> {
    return this.prisma.gameEvent.create(args);
  }
  async updateGameEvent(
    args: Prisma.GameEventUpdateArgs
  ): Promise<PrismaGameEvent> {
    return this.prisma.gameEvent.update(args);
  }
  async deleteGameEvent(
    args: Prisma.GameEventDeleteArgs
  ): Promise<PrismaGameEvent> {
    return this.prisma.gameEvent.delete(args);
  }

  async getGameEventConditions(
    parentId: string
  ): Promise<PrismaGameEventCondition | null> {
    return this.prisma.gameEvent
      .findUnique({
        where: { id: parentId },
      })
      .gameEventConditions();
  }

  async getGameEventCreatures(
    parentId: string
  ): Promise<PrismaGameEventCreature | null> {
    return this.prisma.gameEvent
      .findUnique({
        where: { id: parentId },
      })
      .gameEventCreatures();
  }

  async getGameEventGameObjects(
    parentId: string
  ): Promise<PrismaGameEventGameObject | null> {
    return this.prisma.gameEvent
      .findUnique({
        where: { id: parentId },
      })
      .gameEventGameObjects();
  }

  async getGameEventModelEquips(
    parentId: string
  ): Promise<PrismaGameEventModelEquip | null> {
    return this.prisma.gameEvent
      .findUnique({
        where: { id: parentId },
      })
      .gameEventModelEquips();
  }

  async getGameEventQuests(
    parentId: string
  ): Promise<PrismaGameEventQuest | null> {
    return this.prisma.gameEvent
      .findUnique({
        where: { id: parentId },
      })
      .gameEventQuests();
  }
}
