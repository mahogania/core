/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { ObjectType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsString,
  MaxLength,
  IsOptional,
  IsDate,
  ValidateNested,
} from "class-validator";
import { Type } from "class-transformer";
import { GameEventCondition } from "../../gameEventCondition/base/GameEventCondition";
import { GameEventCreature } from "../../gameEventCreature/base/GameEventCreature";
import { GameEventGameObject } from "../../gameEventGameObject/base/GameEventGameObject";
import { GameEventModelEquip } from "../../gameEventModelEquip/base/GameEventModelEquip";
import { GameEventQuest } from "../../gameEventQuest/base/GameEventQuest";

@ObjectType()
class GameEvent {
  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(256)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  announce!: string | null;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  createdAt!: Date;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  description!: string | null;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  endTime!: Date | null;

  @ApiProperty({
    required: false,
    type: () => GameEventCondition,
  })
  @ValidateNested()
  @Type(() => GameEventCondition)
  @IsOptional()
  gameEventConditions?: GameEventCondition | null;

  @ApiProperty({
    required: false,
    type: () => GameEventCreature,
  })
  @ValidateNested()
  @Type(() => GameEventCreature)
  @IsOptional()
  gameEventCreatures?: GameEventCreature | null;

  @ApiProperty({
    required: false,
    type: () => GameEventGameObject,
  })
  @ValidateNested()
  @Type(() => GameEventGameObject)
  @IsOptional()
  gameEventGameObjects?: GameEventGameObject | null;

  @ApiProperty({
    required: false,
    type: () => GameEventModelEquip,
  })
  @ValidateNested()
  @Type(() => GameEventModelEquip)
  @IsOptional()
  gameEventModelEquips?: GameEventModelEquip | null;

  @ApiProperty({
    required: false,
    type: () => GameEventQuest,
  })
  @ValidateNested()
  @Type(() => GameEventQuest)
  @IsOptional()
  gameEventQuests?: GameEventQuest | null;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  id!: string;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  startTime!: Date | null;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  updatedAt!: Date;
}

export { GameEvent as GameEvent };
