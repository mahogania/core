/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  PlayerFactionchangeSpells as PrismaPlayerFactionchangeSpells,
} from "@prisma/client";

export class PlayerFactionchangeSpellsServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.PlayerFactionchangeSpellsCountArgs, "select">
  ): Promise<number> {
    return this.prisma.playerFactionchangeSpells.count(args);
  }

  async playerFactionchangeSpellsItems(
    args: Prisma.PlayerFactionchangeSpellsFindManyArgs
  ): Promise<PrismaPlayerFactionchangeSpells[]> {
    return this.prisma.playerFactionchangeSpells.findMany(args);
  }
  async playerFactionchangeSpells(
    args: Prisma.PlayerFactionchangeSpellsFindUniqueArgs
  ): Promise<PrismaPlayerFactionchangeSpells | null> {
    return this.prisma.playerFactionchangeSpells.findUnique(args);
  }
  async createPlayerFactionchangeSpells(
    args: Prisma.PlayerFactionchangeSpellsCreateArgs
  ): Promise<PrismaPlayerFactionchangeSpells> {
    return this.prisma.playerFactionchangeSpells.create(args);
  }
  async updatePlayerFactionchangeSpells(
    args: Prisma.PlayerFactionchangeSpellsUpdateArgs
  ): Promise<PrismaPlayerFactionchangeSpells> {
    return this.prisma.playerFactionchangeSpells.update(args);
  }
  async deletePlayerFactionchangeSpells(
    args: Prisma.PlayerFactionchangeSpellsDeleteArgs
  ): Promise<PrismaPlayerFactionchangeSpells> {
    return this.prisma.playerFactionchangeSpells.delete(args);
  }
}
