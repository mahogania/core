/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, PageTextLocale as PrismaPageTextLocale } from "@prisma/client";

export class PageTextLocaleServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.PageTextLocaleCountArgs, "select">
  ): Promise<number> {
    return this.prisma.pageTextLocale.count(args);
  }

  async pageTextLocales(
    args: Prisma.PageTextLocaleFindManyArgs
  ): Promise<PrismaPageTextLocale[]> {
    return this.prisma.pageTextLocale.findMany(args);
  }
  async pageTextLocale(
    args: Prisma.PageTextLocaleFindUniqueArgs
  ): Promise<PrismaPageTextLocale | null> {
    return this.prisma.pageTextLocale.findUnique(args);
  }
  async createPageTextLocale(
    args: Prisma.PageTextLocaleCreateArgs
  ): Promise<PrismaPageTextLocale> {
    return this.prisma.pageTextLocale.create(args);
  }
  async updatePageTextLocale(
    args: Prisma.PageTextLocaleUpdateArgs
  ): Promise<PrismaPageTextLocale> {
    return this.prisma.pageTextLocale.update(args);
  }
  async deletePageTextLocale(
    args: Prisma.PageTextLocaleDeleteArgs
  ): Promise<PrismaPageTextLocale> {
    return this.prisma.pageTextLocale.delete(args);
  }
}
