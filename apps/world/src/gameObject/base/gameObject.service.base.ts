/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, GameObject as PrismaGameObject } from "@prisma/client";

export class GameObjectServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.GameObjectCountArgs, "select">
  ): Promise<number> {
    return this.prisma.gameObject.count(args);
  }

  async gameObjects(
    args: Prisma.GameObjectFindManyArgs
  ): Promise<PrismaGameObject[]> {
    return this.prisma.gameObject.findMany(args);
  }
  async gameObject(
    args: Prisma.GameObjectFindUniqueArgs
  ): Promise<PrismaGameObject | null> {
    return this.prisma.gameObject.findUnique(args);
  }
  async createGameObject(
    args: Prisma.GameObjectCreateArgs
  ): Promise<PrismaGameObject> {
    return this.prisma.gameObject.create(args);
  }
  async updateGameObject(
    args: Prisma.GameObjectUpdateArgs
  ): Promise<PrismaGameObject> {
    return this.prisma.gameObject.update(args);
  }
  async deleteGameObject(
    args: Prisma.GameObjectDeleteArgs
  ): Promise<PrismaGameObject> {
    return this.prisma.gameObject.delete(args);
  }
}
