syntax = "proto3";

                 package achievementReward;
service AchievementRewardService {
 rpc createAchievementReward (AchievementRewardCreateInput) returns (AchievementReward) {}
rpc achievementRewards (findManyParams) returns (stream AchievementReward) {}
rpc achievementReward (AchievementRewardWhereUniqueInput) returns (AchievementReward) {}
rpc updateAchievementReward (AchievementRewardUpdateInput) returns (AchievementReward) {}
rpc deleteAchievementReward (AchievementRewardWhereUniqueInput) returns (AchievementReward) {}
rpc findManyAchievementRewards (AchievementRewardWhereUniqueInput) returns (stream Achievement) {}
rpc updateAchievementRewards (AchievementParams) returns (stream Achievement) {}
rpc connectAchievementRewards (AchievementParams) returns (Achievement) {}
rpc disconnectAchievementRewards (AchievementParams) returns (Achievement) {} 
 }
message AchievementRewardCreateInput {
repeated Achievement achievements = 1;
string body = 2;
string createdAt = 3;
string id = 4;
int32 itemId = 5;
int32 mailTemplateId = 6;
int32 sender = 7;
string subject = 8;
int32 titleA = 9;
int32 titleH = 10;
string updatedAt = 11;
};
message AchievementReward {
repeated Achievement achievements = 1;
string body = 2;
string createdAt = 3;
string id = 4;
int32 itemId = 5;
int32 mailTemplateId = 6;
int32 sender = 7;
string subject = 8;
int32 titleA = 9;
int32 titleH = 10;
string updatedAt = 11;
};
message AchievementRewardWhereUniqueInput {
repeated Achievement achievements = 1;
string body = 2;
string createdAt = 3;
string id = 4;
int32 itemId = 5;
int32 mailTemplateId = 6;
int32 sender = 7;
string subject = 8;
int32 titleA = 9;
int32 titleH = 10;
string updatedAt = 11;
};
message AchievementRewardUpdateInput {
repeated Achievement achievements = 1;
string body = 2;
string createdAt = 3;
string id = 4;
int32 itemId = 5;
int32 mailTemplateId = 6;
int32 sender = 7;
string subject = 8;
int32 titleA = 9;
int32 titleH = 10;
string updatedAt = 11;
};
message findManyParams {

};
message Achievement {
int32 count = 1;
string createdAt = 2;
int32 flags = 3;
string id = 4;
int32 map = 5;
int32 points = 6;
int32 refAchievement = 7;
int32 requiredFaction = 8;
string updatedAt = 9;
};
message AchievementWhereUniqueInput {
int32 count = 1;
string createdAt = 2;
int32 flags = 3;
string id = 4;
int32 map = 5;
int32 points = 6;
int32 refAchievement = 7;
int32 requiredFaction = 8;
string updatedAt = 9;
};
message AchievementParams {
AchievementRewardWhereUniqueInput achievementRewardWhereUniqueInput = 1;
AchievementWhereUniqueInput achievementWhereUniqueInput = 2;
};