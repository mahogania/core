/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, GuildRewards as PrismaGuildRewards } from "@prisma/client";

export class GuildRewardsServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.GuildRewardsCountArgs, "select">
  ): Promise<number> {
    return this.prisma.guildRewards.count(args);
  }

  async guildRewardsItems(
    args: Prisma.GuildRewardsFindManyArgs
  ): Promise<PrismaGuildRewards[]> {
    return this.prisma.guildRewards.findMany(args);
  }
  async guildRewards(
    args: Prisma.GuildRewardsFindUniqueArgs
  ): Promise<PrismaGuildRewards | null> {
    return this.prisma.guildRewards.findUnique(args);
  }
  async createGuildRewards(
    args: Prisma.GuildRewardsCreateArgs
  ): Promise<PrismaGuildRewards> {
    return this.prisma.guildRewards.create(args);
  }
  async updateGuildRewards(
    args: Prisma.GuildRewardsUpdateArgs
  ): Promise<PrismaGuildRewards> {
    return this.prisma.guildRewards.update(args);
  }
  async deleteGuildRewards(
    args: Prisma.GuildRewardsDeleteArgs
  ): Promise<PrismaGuildRewards> {
    return this.prisma.guildRewards.delete(args);
  }
}
