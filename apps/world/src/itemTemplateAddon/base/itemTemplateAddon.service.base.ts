/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";

import {
  Prisma,
  ItemTemplateAddon as PrismaItemTemplateAddon,
  ItemTemplate as PrismaItemTemplate,
} from "@prisma/client";

export class ItemTemplateAddonServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.ItemTemplateAddonCountArgs, "select">
  ): Promise<number> {
    return this.prisma.itemTemplateAddon.count(args);
  }

  async itemTemplateAddons(
    args: Prisma.ItemTemplateAddonFindManyArgs
  ): Promise<PrismaItemTemplateAddon[]> {
    return this.prisma.itemTemplateAddon.findMany(args);
  }
  async itemTemplateAddon(
    args: Prisma.ItemTemplateAddonFindUniqueArgs
  ): Promise<PrismaItemTemplateAddon | null> {
    return this.prisma.itemTemplateAddon.findUnique(args);
  }
  async createItemTemplateAddon(
    args: Prisma.ItemTemplateAddonCreateArgs
  ): Promise<PrismaItemTemplateAddon> {
    return this.prisma.itemTemplateAddon.create(args);
  }
  async updateItemTemplateAddon(
    args: Prisma.ItemTemplateAddonUpdateArgs
  ): Promise<PrismaItemTemplateAddon> {
    return this.prisma.itemTemplateAddon.update(args);
  }
  async deleteItemTemplateAddon(
    args: Prisma.ItemTemplateAddonDeleteArgs
  ): Promise<PrismaItemTemplateAddon> {
    return this.prisma.itemTemplateAddon.delete(args);
  }

  async findItemTemplates(
    parentId: string,
    args: Prisma.ItemTemplateFindManyArgs
  ): Promise<PrismaItemTemplate[]> {
    return this.prisma.itemTemplateAddon
      .findUniqueOrThrow({
        where: { id: parentId },
      })
      .itemTemplates(args);
  }
}
