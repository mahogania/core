/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";

import {
  Prisma,
  GameObjectTemplate as PrismaGameObjectTemplate,
  GameObjectTemplateAddon as PrismaGameObjectTemplateAddon,
  GameObjectTemplateLocale as PrismaGameObjectTemplateLocale,
  GameObject as PrismaGameObject,
} from "@prisma/client";

export class GameObjectTemplateServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.GameObjectTemplateCountArgs, "select">
  ): Promise<number> {
    return this.prisma.gameObjectTemplate.count(args);
  }

  async gameObjectTemplates(
    args: Prisma.GameObjectTemplateFindManyArgs
  ): Promise<PrismaGameObjectTemplate[]> {
    return this.prisma.gameObjectTemplate.findMany(args);
  }
  async gameObjectTemplate(
    args: Prisma.GameObjectTemplateFindUniqueArgs
  ): Promise<PrismaGameObjectTemplate | null> {
    return this.prisma.gameObjectTemplate.findUnique(args);
  }
  async createGameObjectTemplate(
    args: Prisma.GameObjectTemplateCreateArgs
  ): Promise<PrismaGameObjectTemplate> {
    return this.prisma.gameObjectTemplate.create(args);
  }
  async updateGameObjectTemplate(
    args: Prisma.GameObjectTemplateUpdateArgs
  ): Promise<PrismaGameObjectTemplate> {
    return this.prisma.gameObjectTemplate.update(args);
  }
  async deleteGameObjectTemplate(
    args: Prisma.GameObjectTemplateDeleteArgs
  ): Promise<PrismaGameObjectTemplate> {
    return this.prisma.gameObjectTemplate.delete(args);
  }

  async findGameObjectTemplateAddons(
    parentId: string,
    args: Prisma.GameObjectTemplateAddonFindManyArgs
  ): Promise<PrismaGameObjectTemplateAddon[]> {
    return this.prisma.gameObjectTemplate
      .findUniqueOrThrow({
        where: { id: parentId },
      })
      .gameObjectTemplateAddons(args);
  }

  async findGameObjectTemplateLocales(
    parentId: string,
    args: Prisma.GameObjectTemplateLocaleFindManyArgs
  ): Promise<PrismaGameObjectTemplateLocale[]> {
    return this.prisma.gameObjectTemplate
      .findUniqueOrThrow({
        where: { id: parentId },
      })
      .gameObjectTemplateLocales(args);
  }

  async findGameObjects(
    parentId: string,
    args: Prisma.GameObjectFindManyArgs
  ): Promise<PrismaGameObject[]> {
    return this.prisma.gameObjectTemplate
      .findUniqueOrThrow({
        where: { id: parentId },
      })
      .gameObjects(args);
  }
}
