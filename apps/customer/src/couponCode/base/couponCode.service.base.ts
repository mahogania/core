/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, CouponCode as PrismaCouponCode } from "@prisma/client";

export class CouponCodeServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.CouponCodeCountArgs, "select">
  ): Promise<number> {
    return this.prisma.couponCode.count(args);
  }

  async couponCodes(
    args: Prisma.CouponCodeFindManyArgs
  ): Promise<PrismaCouponCode[]> {
    return this.prisma.couponCode.findMany(args);
  }
  async couponCode(
    args: Prisma.CouponCodeFindUniqueArgs
  ): Promise<PrismaCouponCode | null> {
    return this.prisma.couponCode.findUnique(args);
  }
  async createCouponCode(
    args: Prisma.CouponCodeCreateArgs
  ): Promise<PrismaCouponCode> {
    return this.prisma.couponCode.create(args);
  }
  async updateCouponCode(
    args: Prisma.CouponCodeUpdateArgs
  ): Promise<PrismaCouponCode> {
    return this.prisma.couponCode.update(args);
  }
  async deleteCouponCode(
    args: Prisma.CouponCodeDeleteArgs
  ): Promise<PrismaCouponCode> {
    return this.prisma.couponCode.delete(args);
  }
}
