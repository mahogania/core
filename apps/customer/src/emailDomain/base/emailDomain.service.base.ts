/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, EmailDomain as PrismaEmailDomain } from "@prisma/client";

export class EmailDomainServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.EmailDomainCountArgs, "select">
  ): Promise<number> {
    return this.prisma.emailDomain.count(args);
  }

  async emailDomains(
    args: Prisma.EmailDomainFindManyArgs
  ): Promise<PrismaEmailDomain[]> {
    return this.prisma.emailDomain.findMany(args);
  }
  async emailDomain(
    args: Prisma.EmailDomainFindUniqueArgs
  ): Promise<PrismaEmailDomain | null> {
    return this.prisma.emailDomain.findUnique(args);
  }
  async createEmailDomain(
    args: Prisma.EmailDomainCreateArgs
  ): Promise<PrismaEmailDomain> {
    return this.prisma.emailDomain.create(args);
  }
  async updateEmailDomain(
    args: Prisma.EmailDomainUpdateArgs
  ): Promise<PrismaEmailDomain> {
    return this.prisma.emailDomain.update(args);
  }
  async deleteEmailDomain(
    args: Prisma.EmailDomainDeleteArgs
  ): Promise<PrismaEmailDomain> {
    return this.prisma.emailDomain.delete(args);
  }
}
