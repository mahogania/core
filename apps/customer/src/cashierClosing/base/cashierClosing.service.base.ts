/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, CashierClosing as PrismaCashierClosing } from "@prisma/client";

export class CashierClosingServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.CashierClosingCountArgs, "select">
  ): Promise<number> {
    return this.prisma.cashierClosing.count(args);
  }

  async cashierClosings(
    args: Prisma.CashierClosingFindManyArgs
  ): Promise<PrismaCashierClosing[]> {
    return this.prisma.cashierClosing.findMany(args);
  }
  async cashierClosing(
    args: Prisma.CashierClosingFindUniqueArgs
  ): Promise<PrismaCashierClosing | null> {
    return this.prisma.cashierClosing.findUnique(args);
  }
  async createCashierClosing(
    args: Prisma.CashierClosingCreateArgs
  ): Promise<PrismaCashierClosing> {
    return this.prisma.cashierClosing.create(args);
  }
  async updateCashierClosing(
    args: Prisma.CashierClosingUpdateArgs
  ): Promise<PrismaCashierClosing> {
    return this.prisma.cashierClosing.update(args);
  }
  async deleteCashierClosing(
    args: Prisma.CashierClosingDeleteArgs
  ): Promise<PrismaCashierClosing> {
    return this.prisma.cashierClosing.delete(args);
  }
}
