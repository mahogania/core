/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";

import {
  Prisma,
  CurrencyExchangeSettingsResult as PrismaCurrencyExchangeSettingsResult,
} from "@prisma/client";

export class CurrencyExchangeSettingsResultServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.CurrencyExchangeSettingsResultCountArgs, "select">
  ): Promise<number> {
    return this.prisma.currencyExchangeSettingsResult.count(args);
  }

  async currencyExchangeSettingsResults(
    args: Prisma.CurrencyExchangeSettingsResultFindManyArgs
  ): Promise<PrismaCurrencyExchangeSettingsResult[]> {
    return this.prisma.currencyExchangeSettingsResult.findMany(args);
  }
  async currencyExchangeSettingsResult(
    args: Prisma.CurrencyExchangeSettingsResultFindUniqueArgs
  ): Promise<PrismaCurrencyExchangeSettingsResult | null> {
    return this.prisma.currencyExchangeSettingsResult.findUnique(args);
  }
  async createCurrencyExchangeSettingsResult(
    args: Prisma.CurrencyExchangeSettingsResultCreateArgs
  ): Promise<PrismaCurrencyExchangeSettingsResult> {
    return this.prisma.currencyExchangeSettingsResult.create(args);
  }
  async updateCurrencyExchangeSettingsResult(
    args: Prisma.CurrencyExchangeSettingsResultUpdateArgs
  ): Promise<PrismaCurrencyExchangeSettingsResult> {
    return this.prisma.currencyExchangeSettingsResult.update(args);
  }
  async deleteCurrencyExchangeSettingsResult(
    args: Prisma.CurrencyExchangeSettingsResultDeleteArgs
  ): Promise<PrismaCurrencyExchangeSettingsResult> {
    return this.prisma.currencyExchangeSettingsResult.delete(args);
  }
}
