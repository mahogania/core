/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  EmailDigestRecipient as PrismaEmailDigestRecipient,
} from "@prisma/client";

export class EmailDigestRecipientServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.EmailDigestRecipientCountArgs, "select">
  ): Promise<number> {
    return this.prisma.emailDigestRecipient.count(args);
  }

  async emailDigestRecipients(
    args: Prisma.EmailDigestRecipientFindManyArgs
  ): Promise<PrismaEmailDigestRecipient[]> {
    return this.prisma.emailDigestRecipient.findMany(args);
  }
  async emailDigestRecipient(
    args: Prisma.EmailDigestRecipientFindUniqueArgs
  ): Promise<PrismaEmailDigestRecipient | null> {
    return this.prisma.emailDigestRecipient.findUnique(args);
  }
  async createEmailDigestRecipient(
    args: Prisma.EmailDigestRecipientCreateArgs
  ): Promise<PrismaEmailDigestRecipient> {
    return this.prisma.emailDigestRecipient.create(args);
  }
  async updateEmailDigestRecipient(
    args: Prisma.EmailDigestRecipientUpdateArgs
  ): Promise<PrismaEmailDigestRecipient> {
    return this.prisma.emailDigestRecipient.update(args);
  }
  async deleteEmailDigestRecipient(
    args: Prisma.EmailDigestRecipientDeleteArgs
  ): Promise<PrismaEmailDigestRecipient> {
    return this.prisma.emailDigestRecipient.delete(args);
  }
}
