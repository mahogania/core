/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  EmailGroupMember as PrismaEmailGroupMember,
} from "@prisma/client";

export class EmailGroupMemberServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.EmailGroupMemberCountArgs, "select">
  ): Promise<number> {
    return this.prisma.emailGroupMember.count(args);
  }

  async emailGroupMembers(
    args: Prisma.EmailGroupMemberFindManyArgs
  ): Promise<PrismaEmailGroupMember[]> {
    return this.prisma.emailGroupMember.findMany(args);
  }
  async emailGroupMember(
    args: Prisma.EmailGroupMemberFindUniqueArgs
  ): Promise<PrismaEmailGroupMember | null> {
    return this.prisma.emailGroupMember.findUnique(args);
  }
  async createEmailGroupMember(
    args: Prisma.EmailGroupMemberCreateArgs
  ): Promise<PrismaEmailGroupMember> {
    return this.prisma.emailGroupMember.create(args);
  }
  async updateEmailGroupMember(
    args: Prisma.EmailGroupMemberUpdateArgs
  ): Promise<PrismaEmailGroupMember> {
    return this.prisma.emailGroupMember.update(args);
  }
  async deleteEmailGroupMember(
    args: Prisma.EmailGroupMemberDeleteArgs
  ): Promise<PrismaEmailGroupMember> {
    return this.prisma.emailGroupMember.delete(args);
  }
}
