/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, CallLog as PrismaCallLog } from "@prisma/client";

export class CallLogServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.CallLogCountArgs, "select">): Promise<number> {
    return this.prisma.callLog.count(args);
  }

  async callLogs(args: Prisma.CallLogFindManyArgs): Promise<PrismaCallLog[]> {
    return this.prisma.callLog.findMany(args);
  }
  async callLog(
    args: Prisma.CallLogFindUniqueArgs
  ): Promise<PrismaCallLog | null> {
    return this.prisma.callLog.findUnique(args);
  }
  async createCallLog(args: Prisma.CallLogCreateArgs): Promise<PrismaCallLog> {
    return this.prisma.callLog.create(args);
  }
  async updateCallLog(args: Prisma.CallLogUpdateArgs): Promise<PrismaCallLog> {
    return this.prisma.callLog.update(args);
  }
  async deleteCallLog(args: Prisma.CallLogDeleteArgs): Promise<PrismaCallLog> {
    return this.prisma.callLog.delete(args);
  }
}
