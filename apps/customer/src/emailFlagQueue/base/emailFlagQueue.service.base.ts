/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, EmailFlagQueue as PrismaEmailFlagQueue } from "@prisma/client";

export class EmailFlagQueueServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.EmailFlagQueueCountArgs, "select">
  ): Promise<number> {
    return this.prisma.emailFlagQueue.count(args);
  }

  async emailFlagQueues(
    args: Prisma.EmailFlagQueueFindManyArgs
  ): Promise<PrismaEmailFlagQueue[]> {
    return this.prisma.emailFlagQueue.findMany(args);
  }
  async emailFlagQueue(
    args: Prisma.EmailFlagQueueFindUniqueArgs
  ): Promise<PrismaEmailFlagQueue | null> {
    return this.prisma.emailFlagQueue.findUnique(args);
  }
  async createEmailFlagQueue(
    args: Prisma.EmailFlagQueueCreateArgs
  ): Promise<PrismaEmailFlagQueue> {
    return this.prisma.emailFlagQueue.create(args);
  }
  async updateEmailFlagQueue(
    args: Prisma.EmailFlagQueueUpdateArgs
  ): Promise<PrismaEmailFlagQueue> {
    return this.prisma.emailFlagQueue.update(args);
  }
  async deleteEmailFlagQueue(
    args: Prisma.EmailFlagQueueDeleteArgs
  ): Promise<PrismaEmailFlagQueue> {
    return this.prisma.emailFlagQueue.delete(args);
  }
}
