/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, DunningType as PrismaDunningType } from "@prisma/client";

export class DunningTypeServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.DunningTypeCountArgs, "select">
  ): Promise<number> {
    return this.prisma.dunningType.count(args);
  }

  async dunningTypes(
    args: Prisma.DunningTypeFindManyArgs
  ): Promise<PrismaDunningType[]> {
    return this.prisma.dunningType.findMany(args);
  }
  async dunningType(
    args: Prisma.DunningTypeFindUniqueArgs
  ): Promise<PrismaDunningType | null> {
    return this.prisma.dunningType.findUnique(args);
  }
  async createDunningType(
    args: Prisma.DunningTypeCreateArgs
  ): Promise<PrismaDunningType> {
    return this.prisma.dunningType.create(args);
  }
  async updateDunningType(
    args: Prisma.DunningTypeUpdateArgs
  ): Promise<PrismaDunningType> {
    return this.prisma.dunningType.update(args);
  }
  async deleteDunningType(
    args: Prisma.DunningTypeDeleteArgs
  ): Promise<PrismaDunningType> {
    return this.prisma.dunningType.delete(args);
  }
}
