/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  CommunicationMediumTimeslot as PrismaCommunicationMediumTimeslot,
} from "@prisma/client";

export class CommunicationMediumTimeslotServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.CommunicationMediumTimeslotCountArgs, "select">
  ): Promise<number> {
    return this.prisma.communicationMediumTimeslot.count(args);
  }

  async communicationMediumTimeslots(
    args: Prisma.CommunicationMediumTimeslotFindManyArgs
  ): Promise<PrismaCommunicationMediumTimeslot[]> {
    return this.prisma.communicationMediumTimeslot.findMany(args);
  }
  async communicationMediumTimeslot(
    args: Prisma.CommunicationMediumTimeslotFindUniqueArgs
  ): Promise<PrismaCommunicationMediumTimeslot | null> {
    return this.prisma.communicationMediumTimeslot.findUnique(args);
  }
  async createCommunicationMediumTimeslot(
    args: Prisma.CommunicationMediumTimeslotCreateArgs
  ): Promise<PrismaCommunicationMediumTimeslot> {
    return this.prisma.communicationMediumTimeslot.create(args);
  }
  async updateCommunicationMediumTimeslot(
    args: Prisma.CommunicationMediumTimeslotUpdateArgs
  ): Promise<PrismaCommunicationMediumTimeslot> {
    return this.prisma.communicationMediumTimeslot.update(args);
  }
  async deleteCommunicationMediumTimeslot(
    args: Prisma.CommunicationMediumTimeslotDeleteArgs
  ): Promise<PrismaCommunicationMediumTimeslot> {
    return this.prisma.communicationMediumTimeslot.delete(args);
  }
}
