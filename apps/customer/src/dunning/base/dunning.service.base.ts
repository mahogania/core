/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Dunning as PrismaDunning } from "@prisma/client";

export class DunningServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.DunningCountArgs, "select">): Promise<number> {
    return this.prisma.dunning.count(args);
  }

  async dunnings(args: Prisma.DunningFindManyArgs): Promise<PrismaDunning[]> {
    return this.prisma.dunning.findMany(args);
  }
  async dunning(
    args: Prisma.DunningFindUniqueArgs
  ): Promise<PrismaDunning | null> {
    return this.prisma.dunning.findUnique(args);
  }
  async createDunning(args: Prisma.DunningCreateArgs): Promise<PrismaDunning> {
    return this.prisma.dunning.create(args);
  }
  async updateDunning(args: Prisma.DunningUpdateArgs): Promise<PrismaDunning> {
    return this.prisma.dunning.update(args);
  }
  async deleteDunning(args: Prisma.DunningDeleteArgs): Promise<PrismaDunning> {
    return this.prisma.dunning.delete(args);
  }
}
