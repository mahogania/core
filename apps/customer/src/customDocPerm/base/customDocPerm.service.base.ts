/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, CustomDocPerm as PrismaCustomDocPerm } from "@prisma/client";

export class CustomDocPermServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.CustomDocPermCountArgs, "select">
  ): Promise<number> {
    return this.prisma.customDocPerm.count(args);
  }

  async customDocPerms(
    args: Prisma.CustomDocPermFindManyArgs
  ): Promise<PrismaCustomDocPerm[]> {
    return this.prisma.customDocPerm.findMany(args);
  }
  async customDocPerm(
    args: Prisma.CustomDocPermFindUniqueArgs
  ): Promise<PrismaCustomDocPerm | null> {
    return this.prisma.customDocPerm.findUnique(args);
  }
  async createCustomDocPerm(
    args: Prisma.CustomDocPermCreateArgs
  ): Promise<PrismaCustomDocPerm> {
    return this.prisma.customDocPerm.create(args);
  }
  async updateCustomDocPerm(
    args: Prisma.CustomDocPermUpdateArgs
  ): Promise<PrismaCustomDocPerm> {
    return this.prisma.customDocPerm.update(args);
  }
  async deleteCustomDocPerm(
    args: Prisma.CustomDocPermDeleteArgs
  ): Promise<PrismaCustomDocPerm> {
    return this.prisma.customDocPerm.delete(args);
  }
}
