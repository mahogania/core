/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, CustomRole as PrismaCustomRole } from "@prisma/client";

export class CustomRoleServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.CustomRoleCountArgs, "select">
  ): Promise<number> {
    return this.prisma.customRole.count(args);
  }

  async customRoles(
    args: Prisma.CustomRoleFindManyArgs
  ): Promise<PrismaCustomRole[]> {
    return this.prisma.customRole.findMany(args);
  }
  async customRole(
    args: Prisma.CustomRoleFindUniqueArgs
  ): Promise<PrismaCustomRole | null> {
    return this.prisma.customRole.findUnique(args);
  }
  async createCustomRole(
    args: Prisma.CustomRoleCreateArgs
  ): Promise<PrismaCustomRole> {
    return this.prisma.customRole.create(args);
  }
  async updateCustomRole(
    args: Prisma.CustomRoleUpdateArgs
  ): Promise<PrismaCustomRole> {
    return this.prisma.customRole.update(args);
  }
  async deleteCustomRole(
    args: Prisma.CustomRoleDeleteArgs
  ): Promise<PrismaCustomRole> {
    return this.prisma.customRole.delete(args);
  }
}
