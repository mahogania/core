/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Color as PrismaColor } from "@prisma/client";

export class ColorServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.ColorCountArgs, "select">): Promise<number> {
    return this.prisma.color.count(args);
  }

  async colors(args: Prisma.ColorFindManyArgs): Promise<PrismaColor[]> {
    return this.prisma.color.findMany(args);
  }
  async color(args: Prisma.ColorFindUniqueArgs): Promise<PrismaColor | null> {
    return this.prisma.color.findUnique(args);
  }
  async createColor(args: Prisma.ColorCreateArgs): Promise<PrismaColor> {
    return this.prisma.color.create(args);
  }
  async updateColor(args: Prisma.ColorUpdateArgs): Promise<PrismaColor> {
    return this.prisma.color.update(args);
  }
  async deleteColor(args: Prisma.ColorDeleteArgs): Promise<PrismaColor> {
    return this.prisma.color.delete(args);
  }
}
