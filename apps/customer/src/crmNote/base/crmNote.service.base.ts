/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, CrmNote as PrismaCrmNote } from "@prisma/client";

export class CrmNoteServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.CrmNoteCountArgs, "select">): Promise<number> {
    return this.prisma.crmNote.count(args);
  }

  async crmNotes(args: Prisma.CrmNoteFindManyArgs): Promise<PrismaCrmNote[]> {
    return this.prisma.crmNote.findMany(args);
  }
  async crmNote(
    args: Prisma.CrmNoteFindUniqueArgs
  ): Promise<PrismaCrmNote | null> {
    return this.prisma.crmNote.findUnique(args);
  }
  async createCrmNote(args: Prisma.CrmNoteCreateArgs): Promise<PrismaCrmNote> {
    return this.prisma.crmNote.create(args);
  }
  async updateCrmNote(args: Prisma.CrmNoteUpdateArgs): Promise<PrismaCrmNote> {
    return this.prisma.crmNote.update(args);
  }
  async deleteCrmNote(args: Prisma.CrmNoteDeleteArgs): Promise<PrismaCrmNote> {
    return this.prisma.crmNote.delete(args);
  }
}
