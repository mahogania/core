/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";

import {
  Prisma,
  CostCenterAllocationPercentage as PrismaCostCenterAllocationPercentage,
} from "@prisma/client";

export class CostCenterAllocationPercentageServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.CostCenterAllocationPercentageCountArgs, "select">
  ): Promise<number> {
    return this.prisma.costCenterAllocationPercentage.count(args);
  }

  async costCenterAllocationPercentages(
    args: Prisma.CostCenterAllocationPercentageFindManyArgs
  ): Promise<PrismaCostCenterAllocationPercentage[]> {
    return this.prisma.costCenterAllocationPercentage.findMany(args);
  }
  async costCenterAllocationPercentage(
    args: Prisma.CostCenterAllocationPercentageFindUniqueArgs
  ): Promise<PrismaCostCenterAllocationPercentage | null> {
    return this.prisma.costCenterAllocationPercentage.findUnique(args);
  }
  async createCostCenterAllocationPercentage(
    args: Prisma.CostCenterAllocationPercentageCreateArgs
  ): Promise<PrismaCostCenterAllocationPercentage> {
    return this.prisma.costCenterAllocationPercentage.create(args);
  }
  async updateCostCenterAllocationPercentage(
    args: Prisma.CostCenterAllocationPercentageUpdateArgs
  ): Promise<PrismaCostCenterAllocationPercentage> {
    return this.prisma.costCenterAllocationPercentage.update(args);
  }
  async deleteCostCenterAllocationPercentage(
    args: Prisma.CostCenterAllocationPercentageDeleteArgs
  ): Promise<PrismaCostCenterAllocationPercentage> {
    return this.prisma.costCenterAllocationPercentage.delete(args);
  }
}
