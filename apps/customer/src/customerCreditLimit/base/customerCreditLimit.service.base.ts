/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  CustomerCreditLimit as PrismaCustomerCreditLimit,
} from "@prisma/client";

export class CustomerCreditLimitServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.CustomerCreditLimitCountArgs, "select">
  ): Promise<number> {
    return this.prisma.customerCreditLimit.count(args);
  }

  async customerCreditLimits(
    args: Prisma.CustomerCreditLimitFindManyArgs
  ): Promise<PrismaCustomerCreditLimit[]> {
    return this.prisma.customerCreditLimit.findMany(args);
  }
  async customerCreditLimit(
    args: Prisma.CustomerCreditLimitFindUniqueArgs
  ): Promise<PrismaCustomerCreditLimit | null> {
    return this.prisma.customerCreditLimit.findUnique(args);
  }
  async createCustomerCreditLimit(
    args: Prisma.CustomerCreditLimitCreateArgs
  ): Promise<PrismaCustomerCreditLimit> {
    return this.prisma.customerCreditLimit.create(args);
  }
  async updateCustomerCreditLimit(
    args: Prisma.CustomerCreditLimitUpdateArgs
  ): Promise<PrismaCustomerCreditLimit> {
    return this.prisma.customerCreditLimit.update(args);
  }
  async deleteCustomerCreditLimit(
    args: Prisma.CustomerCreditLimitDeleteArgs
  ): Promise<PrismaCustomerCreditLimit> {
    return this.prisma.customerCreditLimit.delete(args);
  }
}
