/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  MaterialRequestItem as PrismaMaterialRequestItem,
} from "@prisma/client";

export class MaterialRequestItemServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.MaterialRequestItemCountArgs, "select">
  ): Promise<number> {
    return this.prisma.materialRequestItem.count(args);
  }

  async materialRequestItems(
    args: Prisma.MaterialRequestItemFindManyArgs
  ): Promise<PrismaMaterialRequestItem[]> {
    return this.prisma.materialRequestItem.findMany(args);
  }
  async materialRequestItem(
    args: Prisma.MaterialRequestItemFindUniqueArgs
  ): Promise<PrismaMaterialRequestItem | null> {
    return this.prisma.materialRequestItem.findUnique(args);
  }
  async createMaterialRequestItem(
    args: Prisma.MaterialRequestItemCreateArgs
  ): Promise<PrismaMaterialRequestItem> {
    return this.prisma.materialRequestItem.create(args);
  }
  async updateMaterialRequestItem(
    args: Prisma.MaterialRequestItemUpdateArgs
  ): Promise<PrismaMaterialRequestItem> {
    return this.prisma.materialRequestItem.update(args);
  }
  async deleteMaterialRequestItem(
    args: Prisma.MaterialRequestItemDeleteArgs
  ): Promise<PrismaMaterialRequestItem> {
    return this.prisma.materialRequestItem.delete(args);
  }
}
