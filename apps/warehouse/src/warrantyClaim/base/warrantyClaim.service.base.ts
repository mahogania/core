/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, WarrantyClaim as PrismaWarrantyClaim } from "@prisma/client";

export class WarrantyClaimServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.WarrantyClaimCountArgs, "select">
  ): Promise<number> {
    return this.prisma.warrantyClaim.count(args);
  }

  async warrantyClaims(
    args: Prisma.WarrantyClaimFindManyArgs
  ): Promise<PrismaWarrantyClaim[]> {
    return this.prisma.warrantyClaim.findMany(args);
  }
  async warrantyClaim(
    args: Prisma.WarrantyClaimFindUniqueArgs
  ): Promise<PrismaWarrantyClaim | null> {
    return this.prisma.warrantyClaim.findUnique(args);
  }
  async createWarrantyClaim(
    args: Prisma.WarrantyClaimCreateArgs
  ): Promise<PrismaWarrantyClaim> {
    return this.prisma.warrantyClaim.create(args);
  }
  async updateWarrantyClaim(
    args: Prisma.WarrantyClaimUpdateArgs
  ): Promise<PrismaWarrantyClaim> {
    return this.prisma.warrantyClaim.update(args);
  }
  async deleteWarrantyClaim(
    args: Prisma.WarrantyClaimDeleteArgs
  ): Promise<PrismaWarrantyClaim> {
    return this.prisma.warrantyClaim.delete(args);
  }
}
