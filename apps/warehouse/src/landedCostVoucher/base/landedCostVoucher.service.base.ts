/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  LandedCostVoucher as PrismaLandedCostVoucher,
} from "@prisma/client";

export class LandedCostVoucherServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.LandedCostVoucherCountArgs, "select">
  ): Promise<number> {
    return this.prisma.landedCostVoucher.count(args);
  }

  async landedCostVouchers(
    args: Prisma.LandedCostVoucherFindManyArgs
  ): Promise<PrismaLandedCostVoucher[]> {
    return this.prisma.landedCostVoucher.findMany(args);
  }
  async landedCostVoucher(
    args: Prisma.LandedCostVoucherFindUniqueArgs
  ): Promise<PrismaLandedCostVoucher | null> {
    return this.prisma.landedCostVoucher.findUnique(args);
  }
  async createLandedCostVoucher(
    args: Prisma.LandedCostVoucherCreateArgs
  ): Promise<PrismaLandedCostVoucher> {
    return this.prisma.landedCostVoucher.create(args);
  }
  async updateLandedCostVoucher(
    args: Prisma.LandedCostVoucherUpdateArgs
  ): Promise<PrismaLandedCostVoucher> {
    return this.prisma.landedCostVoucher.update(args);
  }
  async deleteLandedCostVoucher(
    args: Prisma.LandedCostVoucherDeleteArgs
  ): Promise<PrismaLandedCostVoucher> {
    return this.prisma.landedCostVoucher.delete(args);
  }
}
