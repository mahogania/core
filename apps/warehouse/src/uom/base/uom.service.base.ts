/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Uom as PrismaUom } from "@prisma/client";

export class UomServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.UomCountArgs, "select">): Promise<number> {
    return this.prisma.uom.count(args);
  }

  async uoms(args: Prisma.UomFindManyArgs): Promise<PrismaUom[]> {
    return this.prisma.uom.findMany(args);
  }
  async uom(args: Prisma.UomFindUniqueArgs): Promise<PrismaUom | null> {
    return this.prisma.uom.findUnique(args);
  }
  async createUom(args: Prisma.UomCreateArgs): Promise<PrismaUom> {
    return this.prisma.uom.create(args);
  }
  async updateUom(args: Prisma.UomUpdateArgs): Promise<PrismaUom> {
    return this.prisma.uom.update(args);
  }
  async deleteUom(args: Prisma.UomDeleteArgs): Promise<PrismaUom> {
    return this.prisma.uom.delete(args);
  }
}
