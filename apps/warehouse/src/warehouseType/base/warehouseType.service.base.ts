/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, WarehouseType as PrismaWarehouseType } from "@prisma/client";

export class WarehouseTypeServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.WarehouseTypeCountArgs, "select">
  ): Promise<number> {
    return this.prisma.warehouseType.count(args);
  }

  async warehouseTypes(
    args: Prisma.WarehouseTypeFindManyArgs
  ): Promise<PrismaWarehouseType[]> {
    return this.prisma.warehouseType.findMany(args);
  }
  async warehouseType(
    args: Prisma.WarehouseTypeFindUniqueArgs
  ): Promise<PrismaWarehouseType | null> {
    return this.prisma.warehouseType.findUnique(args);
  }
  async createWarehouseType(
    args: Prisma.WarehouseTypeCreateArgs
  ): Promise<PrismaWarehouseType> {
    return this.prisma.warehouseType.create(args);
  }
  async updateWarehouseType(
    args: Prisma.WarehouseTypeUpdateArgs
  ): Promise<PrismaWarehouseType> {
    return this.prisma.warehouseType.update(args);
  }
  async deleteWarehouseType(
    args: Prisma.WarehouseTypeDeleteArgs
  ): Promise<PrismaWarehouseType> {
    return this.prisma.warehouseType.delete(args);
  }
}
