/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  StockEntryDetail as PrismaStockEntryDetail,
} from "@prisma/client";

export class StockEntryDetailServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.StockEntryDetailCountArgs, "select">
  ): Promise<number> {
    return this.prisma.stockEntryDetail.count(args);
  }

  async stockEntryDetails(
    args: Prisma.StockEntryDetailFindManyArgs
  ): Promise<PrismaStockEntryDetail[]> {
    return this.prisma.stockEntryDetail.findMany(args);
  }
  async stockEntryDetail(
    args: Prisma.StockEntryDetailFindUniqueArgs
  ): Promise<PrismaStockEntryDetail | null> {
    return this.prisma.stockEntryDetail.findUnique(args);
  }
  async createStockEntryDetail(
    args: Prisma.StockEntryDetailCreateArgs
  ): Promise<PrismaStockEntryDetail> {
    return this.prisma.stockEntryDetail.create(args);
  }
  async updateStockEntryDetail(
    args: Prisma.StockEntryDetailUpdateArgs
  ): Promise<PrismaStockEntryDetail> {
    return this.prisma.stockEntryDetail.update(args);
  }
  async deleteStockEntryDetail(
    args: Prisma.StockEntryDetailDeleteArgs
  ): Promise<PrismaStockEntryDetail> {
    return this.prisma.stockEntryDetail.delete(args);
  }
}
