/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Bin as PrismaBin } from "@prisma/client";

export class BinServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.BinCountArgs, "select">): Promise<number> {
    return this.prisma.bin.count(args);
  }

  async bins(args: Prisma.BinFindManyArgs): Promise<PrismaBin[]> {
    return this.prisma.bin.findMany(args);
  }
  async bin(args: Prisma.BinFindUniqueArgs): Promise<PrismaBin | null> {
    return this.prisma.bin.findUnique(args);
  }
  async createBin(args: Prisma.BinCreateArgs): Promise<PrismaBin> {
    return this.prisma.bin.create(args);
  }
  async updateBin(args: Prisma.BinUpdateArgs): Promise<PrismaBin> {
    return this.prisma.bin.update(args);
  }
  async deleteBin(args: Prisma.BinDeleteArgs): Promise<PrismaBin> {
    return this.prisma.bin.delete(args);
  }
}
