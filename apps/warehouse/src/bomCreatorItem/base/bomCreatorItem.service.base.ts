/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, BomCreatorItem as PrismaBomCreatorItem } from "@prisma/client";

export class BomCreatorItemServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.BomCreatorItemCountArgs, "select">
  ): Promise<number> {
    return this.prisma.bomCreatorItem.count(args);
  }

  async bomCreatorItems(
    args: Prisma.BomCreatorItemFindManyArgs
  ): Promise<PrismaBomCreatorItem[]> {
    return this.prisma.bomCreatorItem.findMany(args);
  }
  async bomCreatorItem(
    args: Prisma.BomCreatorItemFindUniqueArgs
  ): Promise<PrismaBomCreatorItem | null> {
    return this.prisma.bomCreatorItem.findUnique(args);
  }
  async createBomCreatorItem(
    args: Prisma.BomCreatorItemCreateArgs
  ): Promise<PrismaBomCreatorItem> {
    return this.prisma.bomCreatorItem.create(args);
  }
  async updateBomCreatorItem(
    args: Prisma.BomCreatorItemUpdateArgs
  ): Promise<PrismaBomCreatorItem> {
    return this.prisma.bomCreatorItem.update(args);
  }
  async deleteBomCreatorItem(
    args: Prisma.BomCreatorItemDeleteArgs
  ): Promise<PrismaBomCreatorItem> {
    return this.prisma.bomCreatorItem.delete(args);
  }
}
