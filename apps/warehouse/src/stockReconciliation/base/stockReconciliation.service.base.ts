/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  StockReconciliation as PrismaStockReconciliation,
} from "@prisma/client";

export class StockReconciliationServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.StockReconciliationCountArgs, "select">
  ): Promise<number> {
    return this.prisma.stockReconciliation.count(args);
  }

  async stockReconciliations(
    args: Prisma.StockReconciliationFindManyArgs
  ): Promise<PrismaStockReconciliation[]> {
    return this.prisma.stockReconciliation.findMany(args);
  }
  async stockReconciliation(
    args: Prisma.StockReconciliationFindUniqueArgs
  ): Promise<PrismaStockReconciliation | null> {
    return this.prisma.stockReconciliation.findUnique(args);
  }
  async createStockReconciliation(
    args: Prisma.StockReconciliationCreateArgs
  ): Promise<PrismaStockReconciliation> {
    return this.prisma.stockReconciliation.create(args);
  }
  async updateStockReconciliation(
    args: Prisma.StockReconciliationUpdateArgs
  ): Promise<PrismaStockReconciliation> {
    return this.prisma.stockReconciliation.update(args);
  }
  async deleteStockReconciliation(
    args: Prisma.StockReconciliationDeleteArgs
  ): Promise<PrismaStockReconciliation> {
    return this.prisma.stockReconciliation.delete(args);
  }
}
