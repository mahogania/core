/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  PackingSlipItem as PrismaPackingSlipItem,
} from "@prisma/client";

export class PackingSlipItemServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.PackingSlipItemCountArgs, "select">
  ): Promise<number> {
    return this.prisma.packingSlipItem.count(args);
  }

  async packingSlipItems(
    args: Prisma.PackingSlipItemFindManyArgs
  ): Promise<PrismaPackingSlipItem[]> {
    return this.prisma.packingSlipItem.findMany(args);
  }
  async packingSlipItem(
    args: Prisma.PackingSlipItemFindUniqueArgs
  ): Promise<PrismaPackingSlipItem | null> {
    return this.prisma.packingSlipItem.findUnique(args);
  }
  async createPackingSlipItem(
    args: Prisma.PackingSlipItemCreateArgs
  ): Promise<PrismaPackingSlipItem> {
    return this.prisma.packingSlipItem.create(args);
  }
  async updatePackingSlipItem(
    args: Prisma.PackingSlipItemUpdateArgs
  ): Promise<PrismaPackingSlipItem> {
    return this.prisma.packingSlipItem.update(args);
  }
  async deletePackingSlipItem(
    args: Prisma.PackingSlipItemDeleteArgs
  ): Promise<PrismaPackingSlipItem> {
    return this.prisma.packingSlipItem.delete(args);
  }
}
