/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, StockEntryType as PrismaStockEntryType } from "@prisma/client";

export class StockEntryTypeServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.StockEntryTypeCountArgs, "select">
  ): Promise<number> {
    return this.prisma.stockEntryType.count(args);
  }

  async stockEntryTypes(
    args: Prisma.StockEntryTypeFindManyArgs
  ): Promise<PrismaStockEntryType[]> {
    return this.prisma.stockEntryType.findMany(args);
  }
  async stockEntryType(
    args: Prisma.StockEntryTypeFindUniqueArgs
  ): Promise<PrismaStockEntryType | null> {
    return this.prisma.stockEntryType.findUnique(args);
  }
  async createStockEntryType(
    args: Prisma.StockEntryTypeCreateArgs
  ): Promise<PrismaStockEntryType> {
    return this.prisma.stockEntryType.create(args);
  }
  async updateStockEntryType(
    args: Prisma.StockEntryTypeUpdateArgs
  ): Promise<PrismaStockEntryType> {
    return this.prisma.stockEntryType.update(args);
  }
  async deleteStockEntryType(
    args: Prisma.StockEntryTypeDeleteArgs
  ): Promise<PrismaStockEntryType> {
    return this.prisma.stockEntryType.delete(args);
  }
}
