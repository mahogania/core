/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  ProductionPlanItemReference as PrismaProductionPlanItemReference,
} from "@prisma/client";

export class ProductionPlanItemReferenceServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.ProductionPlanItemReferenceCountArgs, "select">
  ): Promise<number> {
    return this.prisma.productionPlanItemReference.count(args);
  }

  async productionPlanItemReferences(
    args: Prisma.ProductionPlanItemReferenceFindManyArgs
  ): Promise<PrismaProductionPlanItemReference[]> {
    return this.prisma.productionPlanItemReference.findMany(args);
  }
  async productionPlanItemReference(
    args: Prisma.ProductionPlanItemReferenceFindUniqueArgs
  ): Promise<PrismaProductionPlanItemReference | null> {
    return this.prisma.productionPlanItemReference.findUnique(args);
  }
  async createProductionPlanItemReference(
    args: Prisma.ProductionPlanItemReferenceCreateArgs
  ): Promise<PrismaProductionPlanItemReference> {
    return this.prisma.productionPlanItemReference.create(args);
  }
  async updateProductionPlanItemReference(
    args: Prisma.ProductionPlanItemReferenceUpdateArgs
  ): Promise<PrismaProductionPlanItemReference> {
    return this.prisma.productionPlanItemReference.update(args);
  }
  async deleteProductionPlanItemReference(
    args: Prisma.ProductionPlanItemReferenceDeleteArgs
  ): Promise<PrismaProductionPlanItemReference> {
    return this.prisma.productionPlanItemReference.delete(args);
  }
}
