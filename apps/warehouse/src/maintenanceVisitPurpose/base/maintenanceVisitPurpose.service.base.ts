/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  MaintenanceVisitPurpose as PrismaMaintenanceVisitPurpose,
} from "@prisma/client";

export class MaintenanceVisitPurposeServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.MaintenanceVisitPurposeCountArgs, "select">
  ): Promise<number> {
    return this.prisma.maintenanceVisitPurpose.count(args);
  }

  async maintenanceVisitPurposes(
    args: Prisma.MaintenanceVisitPurposeFindManyArgs
  ): Promise<PrismaMaintenanceVisitPurpose[]> {
    return this.prisma.maintenanceVisitPurpose.findMany(args);
  }
  async maintenanceVisitPurpose(
    args: Prisma.MaintenanceVisitPurposeFindUniqueArgs
  ): Promise<PrismaMaintenanceVisitPurpose | null> {
    return this.prisma.maintenanceVisitPurpose.findUnique(args);
  }
  async createMaintenanceVisitPurpose(
    args: Prisma.MaintenanceVisitPurposeCreateArgs
  ): Promise<PrismaMaintenanceVisitPurpose> {
    return this.prisma.maintenanceVisitPurpose.create(args);
  }
  async updateMaintenanceVisitPurpose(
    args: Prisma.MaintenanceVisitPurposeUpdateArgs
  ): Promise<PrismaMaintenanceVisitPurpose> {
    return this.prisma.maintenanceVisitPurpose.update(args);
  }
  async deleteMaintenanceVisitPurpose(
    args: Prisma.MaintenanceVisitPurposeDeleteArgs
  ): Promise<PrismaMaintenanceVisitPurpose> {
    return this.prisma.maintenanceVisitPurpose.delete(args);
  }
}
