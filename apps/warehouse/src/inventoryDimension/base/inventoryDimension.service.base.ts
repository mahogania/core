/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  InventoryDimension as PrismaInventoryDimension,
} from "@prisma/client";

export class InventoryDimensionServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.InventoryDimensionCountArgs, "select">
  ): Promise<number> {
    return this.prisma.inventoryDimension.count(args);
  }

  async inventoryDimensions(
    args: Prisma.InventoryDimensionFindManyArgs
  ): Promise<PrismaInventoryDimension[]> {
    return this.prisma.inventoryDimension.findMany(args);
  }
  async inventoryDimension(
    args: Prisma.InventoryDimensionFindUniqueArgs
  ): Promise<PrismaInventoryDimension | null> {
    return this.prisma.inventoryDimension.findUnique(args);
  }
  async createInventoryDimension(
    args: Prisma.InventoryDimensionCreateArgs
  ): Promise<PrismaInventoryDimension> {
    return this.prisma.inventoryDimension.create(args);
  }
  async updateInventoryDimension(
    args: Prisma.InventoryDimensionUpdateArgs
  ): Promise<PrismaInventoryDimension> {
    return this.prisma.inventoryDimension.update(args);
  }
  async deleteInventoryDimension(
    args: Prisma.InventoryDimensionDeleteArgs
  ): Promise<PrismaInventoryDimension> {
    return this.prisma.inventoryDimension.delete(args);
  }
}
