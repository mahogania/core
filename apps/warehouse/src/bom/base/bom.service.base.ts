/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Bom as PrismaBom } from "@prisma/client";

export class BomServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.BomCountArgs, "select">): Promise<number> {
    return this.prisma.bom.count(args);
  }

  async boms(args: Prisma.BomFindManyArgs): Promise<PrismaBom[]> {
    return this.prisma.bom.findMany(args);
  }
  async bom(args: Prisma.BomFindUniqueArgs): Promise<PrismaBom | null> {
    return this.prisma.bom.findUnique(args);
  }
  async createBom(args: Prisma.BomCreateArgs): Promise<PrismaBom> {
    return this.prisma.bom.create(args);
  }
  async updateBom(args: Prisma.BomUpdateArgs): Promise<PrismaBom> {
    return this.prisma.bom.update(args);
  }
  async deleteBom(args: Prisma.BomDeleteArgs): Promise<PrismaBom> {
    return this.prisma.bom.delete(args);
  }
}
