/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, SerialNo as PrismaSerialNo } from "@prisma/client";

export class SerialNoServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.SerialNoCountArgs, "select">): Promise<number> {
    return this.prisma.serialNo.count(args);
  }

  async serialNos(
    args: Prisma.SerialNoFindManyArgs
  ): Promise<PrismaSerialNo[]> {
    return this.prisma.serialNo.findMany(args);
  }
  async serialNo(
    args: Prisma.SerialNoFindUniqueArgs
  ): Promise<PrismaSerialNo | null> {
    return this.prisma.serialNo.findUnique(args);
  }
  async createSerialNo(
    args: Prisma.SerialNoCreateArgs
  ): Promise<PrismaSerialNo> {
    return this.prisma.serialNo.create(args);
  }
  async updateSerialNo(
    args: Prisma.SerialNoUpdateArgs
  ): Promise<PrismaSerialNo> {
    return this.prisma.serialNo.update(args);
  }
  async deleteSerialNo(
    args: Prisma.SerialNoDeleteArgs
  ): Promise<PrismaSerialNo> {
    return this.prisma.serialNo.delete(args);
  }
}
