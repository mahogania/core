/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, ProductionPlan as PrismaProductionPlan } from "@prisma/client";

export class ProductionPlanServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.ProductionPlanCountArgs, "select">
  ): Promise<number> {
    return this.prisma.productionPlan.count(args);
  }

  async productionPlans(
    args: Prisma.ProductionPlanFindManyArgs
  ): Promise<PrismaProductionPlan[]> {
    return this.prisma.productionPlan.findMany(args);
  }
  async productionPlan(
    args: Prisma.ProductionPlanFindUniqueArgs
  ): Promise<PrismaProductionPlan | null> {
    return this.prisma.productionPlan.findUnique(args);
  }
  async createProductionPlan(
    args: Prisma.ProductionPlanCreateArgs
  ): Promise<PrismaProductionPlan> {
    return this.prisma.productionPlan.create(args);
  }
  async updateProductionPlan(
    args: Prisma.ProductionPlanUpdateArgs
  ): Promise<PrismaProductionPlan> {
    return this.prisma.productionPlan.update(args);
  }
  async deleteProductionPlan(
    args: Prisma.ProductionPlanDeleteArgs
  ): Promise<PrismaProductionPlan> {
    return this.prisma.productionPlan.delete(args);
  }
}
