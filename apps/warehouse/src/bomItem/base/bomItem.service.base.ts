/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, BomItem as PrismaBomItem } from "@prisma/client";

export class BomItemServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.BomItemCountArgs, "select">): Promise<number> {
    return this.prisma.bomItem.count(args);
  }

  async bomItems(args: Prisma.BomItemFindManyArgs): Promise<PrismaBomItem[]> {
    return this.prisma.bomItem.findMany(args);
  }
  async bomItem(
    args: Prisma.BomItemFindUniqueArgs
  ): Promise<PrismaBomItem | null> {
    return this.prisma.bomItem.findUnique(args);
  }
  async createBomItem(args: Prisma.BomItemCreateArgs): Promise<PrismaBomItem> {
    return this.prisma.bomItem.create(args);
  }
  async updateBomItem(args: Prisma.BomItemUpdateArgs): Promise<PrismaBomItem> {
    return this.prisma.bomItem.update(args);
  }
  async deleteBomItem(args: Prisma.BomItemDeleteArgs): Promise<PrismaBomItem> {
    return this.prisma.bomItem.delete(args);
  }
}
