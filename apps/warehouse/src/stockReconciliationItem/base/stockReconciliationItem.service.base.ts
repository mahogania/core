/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  StockReconciliationItem as PrismaStockReconciliationItem,
} from "@prisma/client";

export class StockReconciliationItemServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.StockReconciliationItemCountArgs, "select">
  ): Promise<number> {
    return this.prisma.stockReconciliationItem.count(args);
  }

  async stockReconciliationItems(
    args: Prisma.StockReconciliationItemFindManyArgs
  ): Promise<PrismaStockReconciliationItem[]> {
    return this.prisma.stockReconciliationItem.findMany(args);
  }
  async stockReconciliationItem(
    args: Prisma.StockReconciliationItemFindUniqueArgs
  ): Promise<PrismaStockReconciliationItem | null> {
    return this.prisma.stockReconciliationItem.findUnique(args);
  }
  async createStockReconciliationItem(
    args: Prisma.StockReconciliationItemCreateArgs
  ): Promise<PrismaStockReconciliationItem> {
    return this.prisma.stockReconciliationItem.create(args);
  }
  async updateStockReconciliationItem(
    args: Prisma.StockReconciliationItemUpdateArgs
  ): Promise<PrismaStockReconciliationItem> {
    return this.prisma.stockReconciliationItem.update(args);
  }
  async deleteStockReconciliationItem(
    args: Prisma.StockReconciliationItemDeleteArgs
  ): Promise<PrismaStockReconciliationItem> {
    return this.prisma.stockReconciliationItem.delete(args);
  }
}
