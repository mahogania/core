/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  SerialAndBatchEntry as PrismaSerialAndBatchEntry,
} from "@prisma/client";

export class SerialAndBatchEntryServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.SerialAndBatchEntryCountArgs, "select">
  ): Promise<number> {
    return this.prisma.serialAndBatchEntry.count(args);
  }

  async serialAndBatchEntries(
    args: Prisma.SerialAndBatchEntryFindManyArgs
  ): Promise<PrismaSerialAndBatchEntry[]> {
    return this.prisma.serialAndBatchEntry.findMany(args);
  }
  async serialAndBatchEntry(
    args: Prisma.SerialAndBatchEntryFindUniqueArgs
  ): Promise<PrismaSerialAndBatchEntry | null> {
    return this.prisma.serialAndBatchEntry.findUnique(args);
  }
  async createSerialAndBatchEntry(
    args: Prisma.SerialAndBatchEntryCreateArgs
  ): Promise<PrismaSerialAndBatchEntry> {
    return this.prisma.serialAndBatchEntry.create(args);
  }
  async updateSerialAndBatchEntry(
    args: Prisma.SerialAndBatchEntryUpdateArgs
  ): Promise<PrismaSerialAndBatchEntry> {
    return this.prisma.serialAndBatchEntry.update(args);
  }
  async deleteSerialAndBatchEntry(
    args: Prisma.SerialAndBatchEntryDeleteArgs
  ): Promise<PrismaSerialAndBatchEntry> {
    return this.prisma.serialAndBatchEntry.delete(args);
  }
}
