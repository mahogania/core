/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  StockReservationEntry as PrismaStockReservationEntry,
} from "@prisma/client";

export class StockReservationEntryServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.StockReservationEntryCountArgs, "select">
  ): Promise<number> {
    return this.prisma.stockReservationEntry.count(args);
  }

  async stockReservationEntries(
    args: Prisma.StockReservationEntryFindManyArgs
  ): Promise<PrismaStockReservationEntry[]> {
    return this.prisma.stockReservationEntry.findMany(args);
  }
  async stockReservationEntry(
    args: Prisma.StockReservationEntryFindUniqueArgs
  ): Promise<PrismaStockReservationEntry | null> {
    return this.prisma.stockReservationEntry.findUnique(args);
  }
  async createStockReservationEntry(
    args: Prisma.StockReservationEntryCreateArgs
  ): Promise<PrismaStockReservationEntry> {
    return this.prisma.stockReservationEntry.create(args);
  }
  async updateStockReservationEntry(
    args: Prisma.StockReservationEntryUpdateArgs
  ): Promise<PrismaStockReservationEntry> {
    return this.prisma.stockReservationEntry.update(args);
  }
  async deleteStockReservationEntry(
    args: Prisma.StockReservationEntryDeleteArgs
  ): Promise<PrismaStockReservationEntry> {
    return this.prisma.stockReservationEntry.delete(args);
  }
}
