/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Batch as PrismaBatch } from "@prisma/client";

export class BatchServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.BatchCountArgs, "select">): Promise<number> {
    return this.prisma.batch.count(args);
  }

  async batches(args: Prisma.BatchFindManyArgs): Promise<PrismaBatch[]> {
    return this.prisma.batch.findMany(args);
  }
  async batch(args: Prisma.BatchFindUniqueArgs): Promise<PrismaBatch | null> {
    return this.prisma.batch.findUnique(args);
  }
  async createBatch(args: Prisma.BatchCreateArgs): Promise<PrismaBatch> {
    return this.prisma.batch.create(args);
  }
  async updateBatch(args: Prisma.BatchUpdateArgs): Promise<PrismaBatch> {
    return this.prisma.batch.update(args);
  }
  async deleteBatch(args: Prisma.BatchDeleteArgs): Promise<PrismaBatch> {
    return this.prisma.batch.delete(args);
  }
}
