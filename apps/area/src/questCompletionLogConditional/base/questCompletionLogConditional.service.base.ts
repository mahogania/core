/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";

import {
  Prisma,
  QuestCompletionLogConditional as PrismaQuestCompletionLogConditional,
} from "@prisma/client";

export class QuestCompletionLogConditionalServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.QuestCompletionLogConditionalCountArgs, "select">
  ): Promise<number> {
    return this.prisma.questCompletionLogConditional.count(args);
  }

  async questCompletionLogConditionals(
    args: Prisma.QuestCompletionLogConditionalFindManyArgs
  ): Promise<PrismaQuestCompletionLogConditional[]> {
    return this.prisma.questCompletionLogConditional.findMany(args);
  }
  async questCompletionLogConditional(
    args: Prisma.QuestCompletionLogConditionalFindUniqueArgs
  ): Promise<PrismaQuestCompletionLogConditional | null> {
    return this.prisma.questCompletionLogConditional.findUnique(args);
  }
  async createQuestCompletionLogConditional(
    args: Prisma.QuestCompletionLogConditionalCreateArgs
  ): Promise<PrismaQuestCompletionLogConditional> {
    return this.prisma.questCompletionLogConditional.create(args);
  }
  async updateQuestCompletionLogConditional(
    args: Prisma.QuestCompletionLogConditionalUpdateArgs
  ): Promise<PrismaQuestCompletionLogConditional> {
    return this.prisma.questCompletionLogConditional.update(args);
  }
  async deleteQuestCompletionLogConditional(
    args: Prisma.QuestCompletionLogConditionalDeleteArgs
  ): Promise<PrismaQuestCompletionLogConditional> {
    return this.prisma.questCompletionLogConditional.delete(args);
  }
}
