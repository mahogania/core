/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  ScriptSplineChainMeta as PrismaScriptSplineChainMeta,
} from "@prisma/client";

export class ScriptSplineChainMetaServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.ScriptSplineChainMetaCountArgs, "select">
  ): Promise<number> {
    return this.prisma.scriptSplineChainMeta.count(args);
  }

  async scriptSplineChainMetas(
    args: Prisma.ScriptSplineChainMetaFindManyArgs
  ): Promise<PrismaScriptSplineChainMeta[]> {
    return this.prisma.scriptSplineChainMeta.findMany(args);
  }
  async scriptSplineChainMeta(
    args: Prisma.ScriptSplineChainMetaFindUniqueArgs
  ): Promise<PrismaScriptSplineChainMeta | null> {
    return this.prisma.scriptSplineChainMeta.findUnique(args);
  }
  async createScriptSplineChainMeta(
    args: Prisma.ScriptSplineChainMetaCreateArgs
  ): Promise<PrismaScriptSplineChainMeta> {
    return this.prisma.scriptSplineChainMeta.create(args);
  }
  async updateScriptSplineChainMeta(
    args: Prisma.ScriptSplineChainMetaUpdateArgs
  ): Promise<PrismaScriptSplineChainMeta> {
    return this.prisma.scriptSplineChainMeta.update(args);
  }
  async deleteScriptSplineChainMeta(
    args: Prisma.ScriptSplineChainMetaDeleteArgs
  ): Promise<PrismaScriptSplineChainMeta> {
    return this.prisma.scriptSplineChainMeta.delete(args);
  }
}
