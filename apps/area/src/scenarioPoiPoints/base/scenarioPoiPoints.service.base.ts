/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  ScenarioPoiPoints as PrismaScenarioPoiPoints,
} from "@prisma/client";

export class ScenarioPoiPointsServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.ScenarioPoiPointsCountArgs, "select">
  ): Promise<number> {
    return this.prisma.scenarioPoiPoints.count(args);
  }

  async scenarioPoiPointsItems(
    args: Prisma.ScenarioPoiPointsFindManyArgs
  ): Promise<PrismaScenarioPoiPoints[]> {
    return this.prisma.scenarioPoiPoints.findMany(args);
  }
  async scenarioPoiPoints(
    args: Prisma.ScenarioPoiPointsFindUniqueArgs
  ): Promise<PrismaScenarioPoiPoints | null> {
    return this.prisma.scenarioPoiPoints.findUnique(args);
  }
  async createScenarioPoiPoints(
    args: Prisma.ScenarioPoiPointsCreateArgs
  ): Promise<PrismaScenarioPoiPoints> {
    return this.prisma.scenarioPoiPoints.create(args);
  }
  async updateScenarioPoiPoints(
    args: Prisma.ScenarioPoiPointsUpdateArgs
  ): Promise<PrismaScenarioPoiPoints> {
    return this.prisma.scenarioPoiPoints.update(args);
  }
  async deleteScenarioPoiPoints(
    args: Prisma.ScenarioPoiPointsDeleteArgs
  ): Promise<PrismaScenarioPoiPoints> {
    return this.prisma.scenarioPoiPoints.delete(args);
  }
}
