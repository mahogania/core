/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import * as common from "@nestjs/common";
import * as swagger from "@nestjs/swagger";
import { isRecordNotFoundError } from "../../prisma.util";
import * as errors from "../../errors";
import { Request } from "express";
import { plainToClass } from "class-transformer";
import { ApiNestedQuery } from "../../decorators/api-nested-query.decorator";
import { GrpcMethod } from "@nestjs/microservices";
import { AreaTriggerTemplateActionService } from "../areaTriggerTemplateAction.service";
import { AreaTriggerTemplateActionCreateInput } from "./AreaTriggerTemplateActionCreateInput";
import { AreaTriggerTemplateActionWhereInput } from "./AreaTriggerTemplateActionWhereInput";
import { AreaTriggerTemplateActionWhereUniqueInput } from "./AreaTriggerTemplateActionWhereUniqueInput";
import { AreaTriggerTemplateActionFindManyArgs } from "./AreaTriggerTemplateActionFindManyArgs";
import { AreaTriggerTemplateActionUpdateInput } from "./AreaTriggerTemplateActionUpdateInput";
import { AreaTriggerTemplateAction } from "./AreaTriggerTemplateAction";

export class AreaTriggerTemplateActionGrpcControllerBase {
  constructor(protected readonly service: AreaTriggerTemplateActionService) {}
  @common.Post()
  @swagger.ApiCreatedResponse({ type: AreaTriggerTemplateAction })
  @GrpcMethod(
    "AreaTriggerTemplateActionService",
    "createAreaTriggerTemplateAction"
  )
  async createAreaTriggerTemplateAction(
    @common.Body() data: AreaTriggerTemplateActionCreateInput
  ): Promise<AreaTriggerTemplateAction> {
    return await this.service.createAreaTriggerTemplateAction({
      data: data,
      select: {
        actionParam: true,
        actionType: true,
        areaTriggerId: true,
        createdAt: true,
        id: true,
        isCustom: true,
        targetType: true,
        updatedAt: true,
      },
    });
  }

  @common.Get()
  @swagger.ApiOkResponse({ type: [AreaTriggerTemplateAction] })
  @ApiNestedQuery(AreaTriggerTemplateActionFindManyArgs)
  @GrpcMethod("AreaTriggerTemplateActionService", "areaTriggerTemplateActions")
  async areaTriggerTemplateActions(
    @common.Req() request: Request
  ): Promise<AreaTriggerTemplateAction[]> {
    const args = plainToClass(
      AreaTriggerTemplateActionFindManyArgs,
      request.query
    );
    return this.service.areaTriggerTemplateActions({
      ...args,
      select: {
        actionParam: true,
        actionType: true,
        areaTriggerId: true,
        createdAt: true,
        id: true,
        isCustom: true,
        targetType: true,
        updatedAt: true,
      },
    });
  }

  @common.Get("/:id")
  @swagger.ApiOkResponse({ type: AreaTriggerTemplateAction })
  @swagger.ApiNotFoundResponse({ type: errors.NotFoundException })
  @GrpcMethod("AreaTriggerTemplateActionService", "areaTriggerTemplateAction")
  async areaTriggerTemplateAction(
    @common.Param() params: AreaTriggerTemplateActionWhereUniqueInput
  ): Promise<AreaTriggerTemplateAction | null> {
    const result = await this.service.areaTriggerTemplateAction({
      where: params,
      select: {
        actionParam: true,
        actionType: true,
        areaTriggerId: true,
        createdAt: true,
        id: true,
        isCustom: true,
        targetType: true,
        updatedAt: true,
      },
    });
    if (result === null) {
      throw new errors.NotFoundException(
        `No resource was found for ${JSON.stringify(params)}`
      );
    }
    return result;
  }

  @common.Patch("/:id")
  @swagger.ApiOkResponse({ type: AreaTriggerTemplateAction })
  @swagger.ApiNotFoundResponse({ type: errors.NotFoundException })
  @GrpcMethod(
    "AreaTriggerTemplateActionService",
    "updateAreaTriggerTemplateAction"
  )
  async updateAreaTriggerTemplateAction(
    @common.Param() params: AreaTriggerTemplateActionWhereUniqueInput,
    @common.Body() data: AreaTriggerTemplateActionUpdateInput
  ): Promise<AreaTriggerTemplateAction | null> {
    try {
      return await this.service.updateAreaTriggerTemplateAction({
        where: params,
        data: data,
        select: {
          actionParam: true,
          actionType: true,
          areaTriggerId: true,
          createdAt: true,
          id: true,
          isCustom: true,
          targetType: true,
          updatedAt: true,
        },
      });
    } catch (error) {
      if (isRecordNotFoundError(error)) {
        throw new errors.NotFoundException(
          `No resource was found for ${JSON.stringify(params)}`
        );
      }
      throw error;
    }
  }

  @common.Delete("/:id")
  @swagger.ApiOkResponse({ type: AreaTriggerTemplateAction })
  @swagger.ApiNotFoundResponse({ type: errors.NotFoundException })
  @GrpcMethod(
    "AreaTriggerTemplateActionService",
    "deleteAreaTriggerTemplateAction"
  )
  async deleteAreaTriggerTemplateAction(
    @common.Param() params: AreaTriggerTemplateActionWhereUniqueInput
  ): Promise<AreaTriggerTemplateAction | null> {
    try {
      return await this.service.deleteAreaTriggerTemplateAction({
        where: params,
        select: {
          actionParam: true,
          actionType: true,
          areaTriggerId: true,
          createdAt: true,
          id: true,
          isCustom: true,
          targetType: true,
          updatedAt: true,
        },
      });
    } catch (error) {
      if (isRecordNotFoundError(error)) {
        throw new errors.NotFoundException(
          `No resource was found for ${JSON.stringify(params)}`
        );
      }
      throw error;
    }
  }
}
