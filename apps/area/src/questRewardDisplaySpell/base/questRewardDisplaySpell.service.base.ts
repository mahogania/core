/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  QuestRewardDisplaySpell as PrismaQuestRewardDisplaySpell,
} from "@prisma/client";

export class QuestRewardDisplaySpellServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.QuestRewardDisplaySpellCountArgs, "select">
  ): Promise<number> {
    return this.prisma.questRewardDisplaySpell.count(args);
  }

  async questRewardDisplaySpells(
    args: Prisma.QuestRewardDisplaySpellFindManyArgs
  ): Promise<PrismaQuestRewardDisplaySpell[]> {
    return this.prisma.questRewardDisplaySpell.findMany(args);
  }
  async questRewardDisplaySpell(
    args: Prisma.QuestRewardDisplaySpellFindUniqueArgs
  ): Promise<PrismaQuestRewardDisplaySpell | null> {
    return this.prisma.questRewardDisplaySpell.findUnique(args);
  }
  async createQuestRewardDisplaySpell(
    args: Prisma.QuestRewardDisplaySpellCreateArgs
  ): Promise<PrismaQuestRewardDisplaySpell> {
    return this.prisma.questRewardDisplaySpell.create(args);
  }
  async updateQuestRewardDisplaySpell(
    args: Prisma.QuestRewardDisplaySpellUpdateArgs
  ): Promise<PrismaQuestRewardDisplaySpell> {
    return this.prisma.questRewardDisplaySpell.update(args);
  }
  async deleteQuestRewardDisplaySpell(
    args: Prisma.QuestRewardDisplaySpellDeleteArgs
  ): Promise<PrismaQuestRewardDisplaySpell> {
    return this.prisma.questRewardDisplaySpell.delete(args);
  }
}
