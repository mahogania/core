/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  QuestRequestItems as PrismaQuestRequestItems,
} from "@prisma/client";

export class QuestRequestItemsServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.QuestRequestItemsCountArgs, "select">
  ): Promise<number> {
    return this.prisma.questRequestItems.count(args);
  }

  async questRequestItemsItems(
    args: Prisma.QuestRequestItemsFindManyArgs
  ): Promise<PrismaQuestRequestItems[]> {
    return this.prisma.questRequestItems.findMany(args);
  }
  async questRequestItems(
    args: Prisma.QuestRequestItemsFindUniqueArgs
  ): Promise<PrismaQuestRequestItems | null> {
    return this.prisma.questRequestItems.findUnique(args);
  }
  async createQuestRequestItems(
    args: Prisma.QuestRequestItemsCreateArgs
  ): Promise<PrismaQuestRequestItems> {
    return this.prisma.questRequestItems.create(args);
  }
  async updateQuestRequestItems(
    args: Prisma.QuestRequestItemsUpdateArgs
  ): Promise<PrismaQuestRequestItems> {
    return this.prisma.questRequestItems.update(args);
  }
  async deleteQuestRequestItems(
    args: Prisma.QuestRequestItemsDeleteArgs
  ): Promise<PrismaQuestRequestItems> {
    return this.prisma.questRequestItems.delete(args);
  }
}
