/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import * as graphql from "@nestjs/graphql";
import { GraphQLError } from "graphql";
import { isRecordNotFoundError } from "../../prisma.util";
import { MetaQueryPayload } from "../../util/MetaQueryPayload";
import * as nestAccessControl from "nest-access-control";
import * as gqlACGuard from "../../auth/gqlAC.guard";
import { GqlDefaultAuthGuard } from "../../auth/gqlDefaultAuth.guard";
import * as common from "@nestjs/common";
import { AclFilterResponseInterceptor } from "../../interceptors/aclFilterResponse.interceptor";
import { AclValidateRequestInterceptor } from "../../interceptors/aclValidateRequest.interceptor";
import { AreaTriggerCreatePropertiesPolygonVertex } from "./AreaTriggerCreatePropertiesPolygonVertex";
import { AreaTriggerCreatePropertiesPolygonVertexCountArgs } from "./AreaTriggerCreatePropertiesPolygonVertexCountArgs";
import { AreaTriggerCreatePropertiesPolygonVertexFindManyArgs } from "./AreaTriggerCreatePropertiesPolygonVertexFindManyArgs";
import { AreaTriggerCreatePropertiesPolygonVertexFindUniqueArgs } from "./AreaTriggerCreatePropertiesPolygonVertexFindUniqueArgs";
import { CreateAreaTriggerCreatePropertiesPolygonVertexArgs } from "./CreateAreaTriggerCreatePropertiesPolygonVertexArgs";
import { UpdateAreaTriggerCreatePropertiesPolygonVertexArgs } from "./UpdateAreaTriggerCreatePropertiesPolygonVertexArgs";
import { DeleteAreaTriggerCreatePropertiesPolygonVertexArgs } from "./DeleteAreaTriggerCreatePropertiesPolygonVertexArgs";
import { AreaTriggerCreatePropertiesPolygonVertexService } from "../areaTriggerCreatePropertiesPolygonVertex.service";
@common.UseGuards(GqlDefaultAuthGuard, gqlACGuard.GqlACGuard)
@graphql.Resolver(() => AreaTriggerCreatePropertiesPolygonVertex)
export class AreaTriggerCreatePropertiesPolygonVertexResolverBase {
  constructor(
    protected readonly service: AreaTriggerCreatePropertiesPolygonVertexService,
    protected readonly rolesBuilder: nestAccessControl.RolesBuilder
  ) {}

  @graphql.Query(() => MetaQueryPayload)
  @nestAccessControl.UseRoles({
    resource: "AreaTriggerCreatePropertiesPolygonVertex",
    action: "read",
    possession: "any",
  })
  async _areaTriggerCreatePropertiesPolygonVerticesMeta(
    @graphql.Args() args: AreaTriggerCreatePropertiesPolygonVertexCountArgs
  ): Promise<MetaQueryPayload> {
    const result = await this.service.count(args);
    return {
      count: result,
    };
  }

  @common.UseInterceptors(AclFilterResponseInterceptor)
  @graphql.Query(() => [AreaTriggerCreatePropertiesPolygonVertex])
  @nestAccessControl.UseRoles({
    resource: "AreaTriggerCreatePropertiesPolygonVertex",
    action: "read",
    possession: "any",
  })
  async areaTriggerCreatePropertiesPolygonVertices(
    @graphql.Args() args: AreaTriggerCreatePropertiesPolygonVertexFindManyArgs
  ): Promise<AreaTriggerCreatePropertiesPolygonVertex[]> {
    return this.service.areaTriggerCreatePropertiesPolygonVertices(args);
  }

  @common.UseInterceptors(AclFilterResponseInterceptor)
  @graphql.Query(() => AreaTriggerCreatePropertiesPolygonVertex, {
    nullable: true,
  })
  @nestAccessControl.UseRoles({
    resource: "AreaTriggerCreatePropertiesPolygonVertex",
    action: "read",
    possession: "own",
  })
  async areaTriggerCreatePropertiesPolygonVertex(
    @graphql.Args() args: AreaTriggerCreatePropertiesPolygonVertexFindUniqueArgs
  ): Promise<AreaTriggerCreatePropertiesPolygonVertex | null> {
    const result = await this.service.areaTriggerCreatePropertiesPolygonVertex(
      args
    );
    if (result === null) {
      return null;
    }
    return result;
  }

  @common.UseInterceptors(AclValidateRequestInterceptor)
  @graphql.Mutation(() => AreaTriggerCreatePropertiesPolygonVertex)
  @nestAccessControl.UseRoles({
    resource: "AreaTriggerCreatePropertiesPolygonVertex",
    action: "create",
    possession: "any",
  })
  async createAreaTriggerCreatePropertiesPolygonVertex(
    @graphql.Args() args: CreateAreaTriggerCreatePropertiesPolygonVertexArgs
  ): Promise<AreaTriggerCreatePropertiesPolygonVertex> {
    return await this.service.createAreaTriggerCreatePropertiesPolygonVertex({
      ...args,
      data: args.data,
    });
  }

  @common.UseInterceptors(AclValidateRequestInterceptor)
  @graphql.Mutation(() => AreaTriggerCreatePropertiesPolygonVertex)
  @nestAccessControl.UseRoles({
    resource: "AreaTriggerCreatePropertiesPolygonVertex",
    action: "update",
    possession: "any",
  })
  async updateAreaTriggerCreatePropertiesPolygonVertex(
    @graphql.Args() args: UpdateAreaTriggerCreatePropertiesPolygonVertexArgs
  ): Promise<AreaTriggerCreatePropertiesPolygonVertex | null> {
    try {
      return await this.service.updateAreaTriggerCreatePropertiesPolygonVertex({
        ...args,
        data: args.data,
      });
    } catch (error) {
      if (isRecordNotFoundError(error)) {
        throw new GraphQLError(
          `No resource was found for ${JSON.stringify(args.where)}`
        );
      }
      throw error;
    }
  }

  @graphql.Mutation(() => AreaTriggerCreatePropertiesPolygonVertex)
  @nestAccessControl.UseRoles({
    resource: "AreaTriggerCreatePropertiesPolygonVertex",
    action: "delete",
    possession: "any",
  })
  async deleteAreaTriggerCreatePropertiesPolygonVertex(
    @graphql.Args() args: DeleteAreaTriggerCreatePropertiesPolygonVertexArgs
  ): Promise<AreaTriggerCreatePropertiesPolygonVertex | null> {
    try {
      return await this.service.deleteAreaTriggerCreatePropertiesPolygonVertex(
        args
      );
    } catch (error) {
      if (isRecordNotFoundError(error)) {
        throw new GraphQLError(
          `No resource was found for ${JSON.stringify(args.where)}`
        );
      }
      throw error;
    }
  }
}
