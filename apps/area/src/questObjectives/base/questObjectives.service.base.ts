/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  QuestObjectives as PrismaQuestObjectives,
} from "@prisma/client";

export class QuestObjectivesServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.QuestObjectivesCountArgs, "select">
  ): Promise<number> {
    return this.prisma.questObjectives.count(args);
  }

  async questObjectivesItems(
    args: Prisma.QuestObjectivesFindManyArgs
  ): Promise<PrismaQuestObjectives[]> {
    return this.prisma.questObjectives.findMany(args);
  }
  async questObjectives(
    args: Prisma.QuestObjectivesFindUniqueArgs
  ): Promise<PrismaQuestObjectives | null> {
    return this.prisma.questObjectives.findUnique(args);
  }
  async createQuestObjectives(
    args: Prisma.QuestObjectivesCreateArgs
  ): Promise<PrismaQuestObjectives> {
    return this.prisma.questObjectives.create(args);
  }
  async updateQuestObjectives(
    args: Prisma.QuestObjectivesUpdateArgs
  ): Promise<PrismaQuestObjectives> {
    return this.prisma.questObjectives.update(args);
  }
  async deleteQuestObjectives(
    args: Prisma.QuestObjectivesDeleteArgs
  ): Promise<PrismaQuestObjectives> {
    return this.prisma.questObjectives.delete(args);
  }
}
