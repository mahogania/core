/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  QuestTemplateAddon as PrismaQuestTemplateAddon,
} from "@prisma/client";

export class QuestTemplateAddonServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.QuestTemplateAddonCountArgs, "select">
  ): Promise<number> {
    return this.prisma.questTemplateAddon.count(args);
  }

  async questTemplateAddons(
    args: Prisma.QuestTemplateAddonFindManyArgs
  ): Promise<PrismaQuestTemplateAddon[]> {
    return this.prisma.questTemplateAddon.findMany(args);
  }
  async questTemplateAddon(
    args: Prisma.QuestTemplateAddonFindUniqueArgs
  ): Promise<PrismaQuestTemplateAddon | null> {
    return this.prisma.questTemplateAddon.findUnique(args);
  }
  async createQuestTemplateAddon(
    args: Prisma.QuestTemplateAddonCreateArgs
  ): Promise<PrismaQuestTemplateAddon> {
    return this.prisma.questTemplateAddon.create(args);
  }
  async updateQuestTemplateAddon(
    args: Prisma.QuestTemplateAddonUpdateArgs
  ): Promise<PrismaQuestTemplateAddon> {
    return this.prisma.questTemplateAddon.update(args);
  }
  async deleteQuestTemplateAddon(
    args: Prisma.QuestTemplateAddonDeleteArgs
  ): Promise<PrismaQuestTemplateAddon> {
    return this.prisma.questTemplateAddon.delete(args);
  }
}
