/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  QuestVisualEffect as PrismaQuestVisualEffect,
} from "@prisma/client";

export class QuestVisualEffectServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.QuestVisualEffectCountArgs, "select">
  ): Promise<number> {
    return this.prisma.questVisualEffect.count(args);
  }

  async questVisualEffects(
    args: Prisma.QuestVisualEffectFindManyArgs
  ): Promise<PrismaQuestVisualEffect[]> {
    return this.prisma.questVisualEffect.findMany(args);
  }
  async questVisualEffect(
    args: Prisma.QuestVisualEffectFindUniqueArgs
  ): Promise<PrismaQuestVisualEffect | null> {
    return this.prisma.questVisualEffect.findUnique(args);
  }
  async createQuestVisualEffect(
    args: Prisma.QuestVisualEffectCreateArgs
  ): Promise<PrismaQuestVisualEffect> {
    return this.prisma.questVisualEffect.create(args);
  }
  async updateQuestVisualEffect(
    args: Prisma.QuestVisualEffectUpdateArgs
  ): Promise<PrismaQuestVisualEffect> {
    return this.prisma.questVisualEffect.update(args);
  }
  async deleteQuestVisualEffect(
    args: Prisma.QuestVisualEffectDeleteArgs
  ): Promise<PrismaQuestVisualEffect> {
    return this.prisma.questVisualEffect.delete(args);
  }
}
