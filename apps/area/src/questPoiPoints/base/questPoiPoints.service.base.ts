/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, QuestPoiPoints as PrismaQuestPoiPoints } from "@prisma/client";

export class QuestPoiPointsServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.QuestPoiPointsCountArgs, "select">
  ): Promise<number> {
    return this.prisma.questPoiPoints.count(args);
  }

  async questPoiPointsItems(
    args: Prisma.QuestPoiPointsFindManyArgs
  ): Promise<PrismaQuestPoiPoints[]> {
    return this.prisma.questPoiPoints.findMany(args);
  }
  async questPoiPoints(
    args: Prisma.QuestPoiPointsFindUniqueArgs
  ): Promise<PrismaQuestPoiPoints | null> {
    return this.prisma.questPoiPoints.findUnique(args);
  }
  async createQuestPoiPoints(
    args: Prisma.QuestPoiPointsCreateArgs
  ): Promise<PrismaQuestPoiPoints> {
    return this.prisma.questPoiPoints.create(args);
  }
  async updateQuestPoiPoints(
    args: Prisma.QuestPoiPointsUpdateArgs
  ): Promise<PrismaQuestPoiPoints> {
    return this.prisma.questPoiPoints.update(args);
  }
  async deleteQuestPoiPoints(
    args: Prisma.QuestPoiPointsDeleteArgs
  ): Promise<PrismaQuestPoiPoints> {
    return this.prisma.questPoiPoints.delete(args);
  }
}
