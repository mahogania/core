/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import * as graphql from "@nestjs/graphql";
import { GraphQLError } from "graphql";
import { isRecordNotFoundError } from "../../prisma.util";
import { MetaQueryPayload } from "../../util/MetaQueryPayload";
import * as nestAccessControl from "nest-access-control";
import * as gqlACGuard from "../../auth/gqlAC.guard";
import { GqlDefaultAuthGuard } from "../../auth/gqlDefaultAuth.guard";
import * as common from "@nestjs/common";
import { AclFilterResponseInterceptor } from "../../interceptors/aclFilterResponse.interceptor";
import { AclValidateRequestInterceptor } from "../../interceptors/aclValidateRequest.interceptor";
import { AreaTriggerCreatePropertiesSplinePoint } from "./AreaTriggerCreatePropertiesSplinePoint";
import { AreaTriggerCreatePropertiesSplinePointCountArgs } from "./AreaTriggerCreatePropertiesSplinePointCountArgs";
import { AreaTriggerCreatePropertiesSplinePointFindManyArgs } from "./AreaTriggerCreatePropertiesSplinePointFindManyArgs";
import { AreaTriggerCreatePropertiesSplinePointFindUniqueArgs } from "./AreaTriggerCreatePropertiesSplinePointFindUniqueArgs";
import { CreateAreaTriggerCreatePropertiesSplinePointArgs } from "./CreateAreaTriggerCreatePropertiesSplinePointArgs";
import { UpdateAreaTriggerCreatePropertiesSplinePointArgs } from "./UpdateAreaTriggerCreatePropertiesSplinePointArgs";
import { DeleteAreaTriggerCreatePropertiesSplinePointArgs } from "./DeleteAreaTriggerCreatePropertiesSplinePointArgs";
import { AreaTriggerCreatePropertiesSplinePointService } from "../areaTriggerCreatePropertiesSplinePoint.service";
@common.UseGuards(GqlDefaultAuthGuard, gqlACGuard.GqlACGuard)
@graphql.Resolver(() => AreaTriggerCreatePropertiesSplinePoint)
export class AreaTriggerCreatePropertiesSplinePointResolverBase {
  constructor(
    protected readonly service: AreaTriggerCreatePropertiesSplinePointService,
    protected readonly rolesBuilder: nestAccessControl.RolesBuilder
  ) {}

  @graphql.Query(() => MetaQueryPayload)
  @nestAccessControl.UseRoles({
    resource: "AreaTriggerCreatePropertiesSplinePoint",
    action: "read",
    possession: "any",
  })
  async _areaTriggerCreatePropertiesSplinePointsMeta(
    @graphql.Args() args: AreaTriggerCreatePropertiesSplinePointCountArgs
  ): Promise<MetaQueryPayload> {
    const result = await this.service.count(args);
    return {
      count: result,
    };
  }

  @common.UseInterceptors(AclFilterResponseInterceptor)
  @graphql.Query(() => [AreaTriggerCreatePropertiesSplinePoint])
  @nestAccessControl.UseRoles({
    resource: "AreaTriggerCreatePropertiesSplinePoint",
    action: "read",
    possession: "any",
  })
  async areaTriggerCreatePropertiesSplinePoints(
    @graphql.Args() args: AreaTriggerCreatePropertiesSplinePointFindManyArgs
  ): Promise<AreaTriggerCreatePropertiesSplinePoint[]> {
    return this.service.areaTriggerCreatePropertiesSplinePoints(args);
  }

  @common.UseInterceptors(AclFilterResponseInterceptor)
  @graphql.Query(() => AreaTriggerCreatePropertiesSplinePoint, {
    nullable: true,
  })
  @nestAccessControl.UseRoles({
    resource: "AreaTriggerCreatePropertiesSplinePoint",
    action: "read",
    possession: "own",
  })
  async areaTriggerCreatePropertiesSplinePoint(
    @graphql.Args() args: AreaTriggerCreatePropertiesSplinePointFindUniqueArgs
  ): Promise<AreaTriggerCreatePropertiesSplinePoint | null> {
    const result = await this.service.areaTriggerCreatePropertiesSplinePoint(
      args
    );
    if (result === null) {
      return null;
    }
    return result;
  }

  @common.UseInterceptors(AclValidateRequestInterceptor)
  @graphql.Mutation(() => AreaTriggerCreatePropertiesSplinePoint)
  @nestAccessControl.UseRoles({
    resource: "AreaTriggerCreatePropertiesSplinePoint",
    action: "create",
    possession: "any",
  })
  async createAreaTriggerCreatePropertiesSplinePoint(
    @graphql.Args() args: CreateAreaTriggerCreatePropertiesSplinePointArgs
  ): Promise<AreaTriggerCreatePropertiesSplinePoint> {
    return await this.service.createAreaTriggerCreatePropertiesSplinePoint({
      ...args,
      data: args.data,
    });
  }

  @common.UseInterceptors(AclValidateRequestInterceptor)
  @graphql.Mutation(() => AreaTriggerCreatePropertiesSplinePoint)
  @nestAccessControl.UseRoles({
    resource: "AreaTriggerCreatePropertiesSplinePoint",
    action: "update",
    possession: "any",
  })
  async updateAreaTriggerCreatePropertiesSplinePoint(
    @graphql.Args() args: UpdateAreaTriggerCreatePropertiesSplinePointArgs
  ): Promise<AreaTriggerCreatePropertiesSplinePoint | null> {
    try {
      return await this.service.updateAreaTriggerCreatePropertiesSplinePoint({
        ...args,
        data: args.data,
      });
    } catch (error) {
      if (isRecordNotFoundError(error)) {
        throw new GraphQLError(
          `No resource was found for ${JSON.stringify(args.where)}`
        );
      }
      throw error;
    }
  }

  @graphql.Mutation(() => AreaTriggerCreatePropertiesSplinePoint)
  @nestAccessControl.UseRoles({
    resource: "AreaTriggerCreatePropertiesSplinePoint",
    action: "delete",
    possession: "any",
  })
  async deleteAreaTriggerCreatePropertiesSplinePoint(
    @graphql.Args() args: DeleteAreaTriggerCreatePropertiesSplinePointArgs
  ): Promise<AreaTriggerCreatePropertiesSplinePoint | null> {
    try {
      return await this.service.deleteAreaTriggerCreatePropertiesSplinePoint(
        args
      );
    } catch (error) {
      if (isRecordNotFoundError(error)) {
        throw new GraphQLError(
          `No resource was found for ${JSON.stringify(args.where)}`
        );
      }
      throw error;
    }
  }
}
