/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  QuestDescriptionConditional as PrismaQuestDescriptionConditional,
} from "@prisma/client";

export class QuestDescriptionConditionalServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.QuestDescriptionConditionalCountArgs, "select">
  ): Promise<number> {
    return this.prisma.questDescriptionConditional.count(args);
  }

  async questDescriptionConditionals(
    args: Prisma.QuestDescriptionConditionalFindManyArgs
  ): Promise<PrismaQuestDescriptionConditional[]> {
    return this.prisma.questDescriptionConditional.findMany(args);
  }
  async questDescriptionConditional(
    args: Prisma.QuestDescriptionConditionalFindUniqueArgs
  ): Promise<PrismaQuestDescriptionConditional | null> {
    return this.prisma.questDescriptionConditional.findUnique(args);
  }
  async createQuestDescriptionConditional(
    args: Prisma.QuestDescriptionConditionalCreateArgs
  ): Promise<PrismaQuestDescriptionConditional> {
    return this.prisma.questDescriptionConditional.create(args);
  }
  async updateQuestDescriptionConditional(
    args: Prisma.QuestDescriptionConditionalUpdateArgs
  ): Promise<PrismaQuestDescriptionConditional> {
    return this.prisma.questDescriptionConditional.update(args);
  }
  async deleteQuestDescriptionConditional(
    args: Prisma.QuestDescriptionConditionalDeleteArgs
  ): Promise<PrismaQuestDescriptionConditional> {
    return this.prisma.questDescriptionConditional.delete(args);
  }
}
