/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  ProspectingLootTemplate as PrismaProspectingLootTemplate,
} from "@prisma/client";

export class ProspectingLootTemplateServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.ProspectingLootTemplateCountArgs, "select">
  ): Promise<number> {
    return this.prisma.prospectingLootTemplate.count(args);
  }

  async prospectingLootTemplates(
    args: Prisma.ProspectingLootTemplateFindManyArgs
  ): Promise<PrismaProspectingLootTemplate[]> {
    return this.prisma.prospectingLootTemplate.findMany(args);
  }
  async prospectingLootTemplate(
    args: Prisma.ProspectingLootTemplateFindUniqueArgs
  ): Promise<PrismaProspectingLootTemplate | null> {
    return this.prisma.prospectingLootTemplate.findUnique(args);
  }
  async createProspectingLootTemplate(
    args: Prisma.ProspectingLootTemplateCreateArgs
  ): Promise<PrismaProspectingLootTemplate> {
    return this.prisma.prospectingLootTemplate.create(args);
  }
  async updateProspectingLootTemplate(
    args: Prisma.ProspectingLootTemplateUpdateArgs
  ): Promise<PrismaProspectingLootTemplate> {
    return this.prisma.prospectingLootTemplate.update(args);
  }
  async deleteProspectingLootTemplate(
    args: Prisma.ProspectingLootTemplateDeleteArgs
  ): Promise<PrismaProspectingLootTemplate> {
    return this.prisma.prospectingLootTemplate.delete(args);
  }
}
