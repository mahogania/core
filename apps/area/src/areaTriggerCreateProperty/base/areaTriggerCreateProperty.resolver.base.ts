/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import * as graphql from "@nestjs/graphql";
import { GraphQLError } from "graphql";
import { isRecordNotFoundError } from "../../prisma.util";
import { MetaQueryPayload } from "../../util/MetaQueryPayload";
import * as nestAccessControl from "nest-access-control";
import * as gqlACGuard from "../../auth/gqlAC.guard";
import { GqlDefaultAuthGuard } from "../../auth/gqlDefaultAuth.guard";
import * as common from "@nestjs/common";
import { AclFilterResponseInterceptor } from "../../interceptors/aclFilterResponse.interceptor";
import { AclValidateRequestInterceptor } from "../../interceptors/aclValidateRequest.interceptor";
import { AreaTriggerCreateProperty } from "./AreaTriggerCreateProperty";
import { AreaTriggerCreatePropertyCountArgs } from "./AreaTriggerCreatePropertyCountArgs";
import { AreaTriggerCreatePropertyFindManyArgs } from "./AreaTriggerCreatePropertyFindManyArgs";
import { AreaTriggerCreatePropertyFindUniqueArgs } from "./AreaTriggerCreatePropertyFindUniqueArgs";
import { CreateAreaTriggerCreatePropertyArgs } from "./CreateAreaTriggerCreatePropertyArgs";
import { UpdateAreaTriggerCreatePropertyArgs } from "./UpdateAreaTriggerCreatePropertyArgs";
import { DeleteAreaTriggerCreatePropertyArgs } from "./DeleteAreaTriggerCreatePropertyArgs";
import { AreaTriggerCreatePropertyService } from "../areaTriggerCreateProperty.service";
@common.UseGuards(GqlDefaultAuthGuard, gqlACGuard.GqlACGuard)
@graphql.Resolver(() => AreaTriggerCreateProperty)
export class AreaTriggerCreatePropertyResolverBase {
  constructor(
    protected readonly service: AreaTriggerCreatePropertyService,
    protected readonly rolesBuilder: nestAccessControl.RolesBuilder
  ) {}

  @graphql.Query(() => MetaQueryPayload)
  @nestAccessControl.UseRoles({
    resource: "AreaTriggerCreateProperty",
    action: "read",
    possession: "any",
  })
  async _areaTriggerCreatePropertiesMeta(
    @graphql.Args() args: AreaTriggerCreatePropertyCountArgs
  ): Promise<MetaQueryPayload> {
    const result = await this.service.count(args);
    return {
      count: result,
    };
  }

  @common.UseInterceptors(AclFilterResponseInterceptor)
  @graphql.Query(() => [AreaTriggerCreateProperty])
  @nestAccessControl.UseRoles({
    resource: "AreaTriggerCreateProperty",
    action: "read",
    possession: "any",
  })
  async areaTriggerCreateProperties(
    @graphql.Args() args: AreaTriggerCreatePropertyFindManyArgs
  ): Promise<AreaTriggerCreateProperty[]> {
    return this.service.areaTriggerCreateProperties(args);
  }

  @common.UseInterceptors(AclFilterResponseInterceptor)
  @graphql.Query(() => AreaTriggerCreateProperty, { nullable: true })
  @nestAccessControl.UseRoles({
    resource: "AreaTriggerCreateProperty",
    action: "read",
    possession: "own",
  })
  async areaTriggerCreateProperty(
    @graphql.Args() args: AreaTriggerCreatePropertyFindUniqueArgs
  ): Promise<AreaTriggerCreateProperty | null> {
    const result = await this.service.areaTriggerCreateProperty(args);
    if (result === null) {
      return null;
    }
    return result;
  }

  @common.UseInterceptors(AclValidateRequestInterceptor)
  @graphql.Mutation(() => AreaTriggerCreateProperty)
  @nestAccessControl.UseRoles({
    resource: "AreaTriggerCreateProperty",
    action: "create",
    possession: "any",
  })
  async createAreaTriggerCreateProperty(
    @graphql.Args() args: CreateAreaTriggerCreatePropertyArgs
  ): Promise<AreaTriggerCreateProperty> {
    return await this.service.createAreaTriggerCreateProperty({
      ...args,
      data: args.data,
    });
  }

  @common.UseInterceptors(AclValidateRequestInterceptor)
  @graphql.Mutation(() => AreaTriggerCreateProperty)
  @nestAccessControl.UseRoles({
    resource: "AreaTriggerCreateProperty",
    action: "update",
    possession: "any",
  })
  async updateAreaTriggerCreateProperty(
    @graphql.Args() args: UpdateAreaTriggerCreatePropertyArgs
  ): Promise<AreaTriggerCreateProperty | null> {
    try {
      return await this.service.updateAreaTriggerCreateProperty({
        ...args,
        data: args.data,
      });
    } catch (error) {
      if (isRecordNotFoundError(error)) {
        throw new GraphQLError(
          `No resource was found for ${JSON.stringify(args.where)}`
        );
      }
      throw error;
    }
  }

  @graphql.Mutation(() => AreaTriggerCreateProperty)
  @nestAccessControl.UseRoles({
    resource: "AreaTriggerCreateProperty",
    action: "delete",
    possession: "any",
  })
  async deleteAreaTriggerCreateProperty(
    @graphql.Args() args: DeleteAreaTriggerCreatePropertyArgs
  ): Promise<AreaTriggerCreateProperty | null> {
    try {
      return await this.service.deleteAreaTriggerCreateProperty(args);
    } catch (error) {
      if (isRecordNotFoundError(error)) {
        throw new GraphQLError(
          `No resource was found for ${JSON.stringify(args.where)}`
        );
      }
      throw error;
    }
  }
}
