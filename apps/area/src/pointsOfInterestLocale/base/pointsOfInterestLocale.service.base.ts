/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  PointsOfInterestLocale as PrismaPointsOfInterestLocale,
} from "@prisma/client";

export class PointsOfInterestLocaleServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.PointsOfInterestLocaleCountArgs, "select">
  ): Promise<number> {
    return this.prisma.pointsOfInterestLocale.count(args);
  }

  async pointsOfInterestLocales(
    args: Prisma.PointsOfInterestLocaleFindManyArgs
  ): Promise<PrismaPointsOfInterestLocale[]> {
    return this.prisma.pointsOfInterestLocale.findMany(args);
  }
  async pointsOfInterestLocale(
    args: Prisma.PointsOfInterestLocaleFindUniqueArgs
  ): Promise<PrismaPointsOfInterestLocale | null> {
    return this.prisma.pointsOfInterestLocale.findUnique(args);
  }
  async createPointsOfInterestLocale(
    args: Prisma.PointsOfInterestLocaleCreateArgs
  ): Promise<PrismaPointsOfInterestLocale> {
    return this.prisma.pointsOfInterestLocale.create(args);
  }
  async updatePointsOfInterestLocale(
    args: Prisma.PointsOfInterestLocaleUpdateArgs
  ): Promise<PrismaPointsOfInterestLocale> {
    return this.prisma.pointsOfInterestLocale.update(args);
  }
  async deletePointsOfInterestLocale(
    args: Prisma.PointsOfInterestLocaleDeleteArgs
  ): Promise<PrismaPointsOfInterestLocale> {
    return this.prisma.pointsOfInterestLocale.delete(args);
  }
}
