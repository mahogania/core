/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  AreaTriggerTeleport as PrismaAreaTriggerTeleport,
} from "@prisma/client";

export class AreaTriggerTeleportServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.AreaTriggerTeleportCountArgs, "select">
  ): Promise<number> {
    return this.prisma.areaTriggerTeleport.count(args);
  }

  async areaTriggerTeleports(
    args: Prisma.AreaTriggerTeleportFindManyArgs
  ): Promise<PrismaAreaTriggerTeleport[]> {
    return this.prisma.areaTriggerTeleport.findMany(args);
  }
  async areaTriggerTeleport(
    args: Prisma.AreaTriggerTeleportFindUniqueArgs
  ): Promise<PrismaAreaTriggerTeleport | null> {
    return this.prisma.areaTriggerTeleport.findUnique(args);
  }
  async createAreaTriggerTeleport(
    args: Prisma.AreaTriggerTeleportCreateArgs
  ): Promise<PrismaAreaTriggerTeleport> {
    return this.prisma.areaTriggerTeleport.create(args);
  }
  async updateAreaTriggerTeleport(
    args: Prisma.AreaTriggerTeleportUpdateArgs
  ): Promise<PrismaAreaTriggerTeleport> {
    return this.prisma.areaTriggerTeleport.update(args);
  }
  async deleteAreaTriggerTeleport(
    args: Prisma.AreaTriggerTeleportDeleteArgs
  ): Promise<PrismaAreaTriggerTeleport> {
    return this.prisma.areaTriggerTeleport.delete(args);
  }
}
