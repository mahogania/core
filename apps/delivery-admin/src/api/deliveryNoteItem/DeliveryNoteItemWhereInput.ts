import { FloatNullableFilter } from "../../util/FloatNullableFilter";
import { StringNullableFilter } from "../../util/StringNullableFilter";
import { BooleanNullableFilter } from "../../util/BooleanNullableFilter";
import { DateTimeNullableFilter } from "../../util/DateTimeNullableFilter";
import { IntNullableFilter } from "../../util/IntNullableFilter";
import { StringFilter } from "../../util/StringFilter";

export type DeliveryNoteItemWhereInput = {
  actualBatchQty?: FloatNullableFilter;
  actualQty?: FloatNullableFilter;
  againstSalesInvoice?: StringNullableFilter;
  againstSalesOrder?: StringNullableFilter;
  allowZeroValuationRate?: BooleanNullableFilter;
  amount?: FloatNullableFilter;
  barcode?: StringNullableFilter;
  baseAmount?: FloatNullableFilter;
  baseNetAmount?: FloatNullableFilter;
  baseNetRate?: FloatNullableFilter;
  basePriceListRate?: FloatNullableFilter;
  baseRate?: FloatNullableFilter;
  baseRateWithMargin?: FloatNullableFilter;
  batchNo?: StringNullableFilter;
  billedAmt?: FloatNullableFilter;
  brand?: StringNullableFilter;
  conversionFactor?: FloatNullableFilter;
  costCenter?: StringNullableFilter;
  creation?: DateTimeNullableFilter;
  customerItemCode?: StringNullableFilter;
  description?: StringNullableFilter;
  discountAmount?: FloatNullableFilter;
  discountPercentage?: FloatNullableFilter;
  dnDetail?: StringNullableFilter;
  docstatus?: IntNullableFilter;
  expenseAccount?: StringNullableFilter;
  grantCommission?: BooleanNullableFilter;
  hasItemScanned?: BooleanNullableFilter;
  id?: StringFilter;
  idx?: IntNullableFilter;
  image?: StringNullableFilter;
  incomingRate?: FloatNullableFilter;
  installedQty?: FloatNullableFilter;
  isFreeItem?: BooleanNullableFilter;
  itemCode?: StringNullableFilter;
  itemGroup?: StringNullableFilter;
  itemName?: StringNullableFilter;
  itemTaxRate?: StringNullableFilter;
  itemTaxTemplate?: StringNullableFilter;
  marginRateOrAmount?: FloatNullableFilter;
  marginType?: StringNullableFilter;
  materialRequest?: StringNullableFilter;
  materialRequestItem?: StringNullableFilter;
  modified?: DateTimeNullableFilter;
  modifiedBy?: StringNullableFilter;
  name?: StringNullableFilter;
  netAmount?: FloatNullableFilter;
  netRate?: FloatNullableFilter;
  owner?: StringNullableFilter;
  packedQty?: FloatNullableFilter;
  pageBreak?: BooleanNullableFilter;
  parent?: StringNullableFilter;
  parentfield?: StringNullableFilter;
  parenttype?: StringNullableFilter;
  pickListItem?: StringNullableFilter;
  priceListRate?: FloatNullableFilter;
  pricingRules?: StringNullableFilter;
  project?: StringNullableFilter;
  purchaseOrder?: StringNullableFilter;
  purchaseOrderItem?: StringNullableFilter;
  qty?: FloatNullableFilter;
  qualityInspection?: StringNullableFilter;
  rate?: FloatNullableFilter;
  rateWithMargin?: FloatNullableFilter;
  receivedQty?: FloatNullableFilter;
  returnedQty?: FloatNullableFilter;
  serialAndBatchBundle?: StringNullableFilter;
  serialNo?: StringNullableFilter;
  siDetail?: StringNullableFilter;
  soDetail?: StringNullableFilter;
  stockQty?: FloatNullableFilter;
  stockUom?: StringNullableFilter;
  stockUomRate?: FloatNullableFilter;
  targetWarehouse?: StringNullableFilter;
  totalWeight?: FloatNullableFilter;
  uom?: StringNullableFilter;
  useSerialBatchFields?: BooleanNullableFilter;
  warehouse?: StringNullableFilter;
  weightPerUnit?: FloatNullableFilter;
  weightUom?: StringNullableFilter;
};
