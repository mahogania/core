/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { ContractListRelationFilter } from "../../contract/base/ContractListRelationFilter";
import { ValidateNested, IsOptional } from "class-validator";
import { Type } from "class-transformer";
import { StringFilter } from "../../util/StringFilter";
import { InvoiceListRelationFilter } from "../../invoice/base/InvoiceListRelationFilter";
import { OrderListRelationFilter } from "../../order/base/OrderListRelationFilter";
import { UnitWhereUniqueInput } from "../../unit/base/UnitWhereUniqueInput";

@InputType()
class DealWhereInput {
  @ApiProperty({
    required: false,
    type: () => ContractListRelationFilter,
  })
  @ValidateNested()
  @Type(() => ContractListRelationFilter)
  @IsOptional()
  @Field(() => ContractListRelationFilter, {
    nullable: true,
  })
  contracts?: ContractListRelationFilter;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  id?: StringFilter;

  @ApiProperty({
    required: false,
    type: () => InvoiceListRelationFilter,
  })
  @ValidateNested()
  @Type(() => InvoiceListRelationFilter)
  @IsOptional()
  @Field(() => InvoiceListRelationFilter, {
    nullable: true,
  })
  invoices?: InvoiceListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => OrderListRelationFilter,
  })
  @ValidateNested()
  @Type(() => OrderListRelationFilter)
  @IsOptional()
  @Field(() => OrderListRelationFilter, {
    nullable: true,
  })
  orders?: OrderListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => UnitWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => UnitWhereUniqueInput)
  @IsOptional()
  @Field(() => UnitWhereUniqueInput, {
    nullable: true,
  })
  unit?: UnitWhereUniqueInput;
}

export { DealWhereInput as DealWhereInput };
