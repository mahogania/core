/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { AddressWhereUniqueInput } from "../../address/base/AddressWhereUniqueInput";
import { ValidateNested, IsOptional } from "class-validator";
import { Type } from "class-transformer";
import { CatalogCreateNestedManyWithoutUnitsInput } from "./CatalogCreateNestedManyWithoutUnitsInput";
import { BusinessWhereUniqueInput } from "../../business/base/BusinessWhereUniqueInput";
import { DealCreateNestedManyWithoutUnitsInput } from "./DealCreateNestedManyWithoutUnitsInput";
import { OpportunityCreateNestedManyWithoutUnitsInput } from "./OpportunityCreateNestedManyWithoutUnitsInput";
import { ThreatCreateNestedManyWithoutUnitsInput } from "./ThreatCreateNestedManyWithoutUnitsInput";

@InputType()
class UnitCreateInput {
  @ApiProperty({
    required: false,
    type: () => AddressWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => AddressWhereUniqueInput)
  @IsOptional()
  @Field(() => AddressWhereUniqueInput, {
    nullable: true,
  })
  address?: AddressWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: () => CatalogCreateNestedManyWithoutUnitsInput,
  })
  @ValidateNested()
  @Type(() => CatalogCreateNestedManyWithoutUnitsInput)
  @IsOptional()
  @Field(() => CatalogCreateNestedManyWithoutUnitsInput, {
    nullable: true,
  })
  catalogs?: CatalogCreateNestedManyWithoutUnitsInput;

  @ApiProperty({
    required: false,
    type: () => BusinessWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => BusinessWhereUniqueInput)
  @IsOptional()
  @Field(() => BusinessWhereUniqueInput, {
    nullable: true,
  })
  competitor?: BusinessWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: () => DealCreateNestedManyWithoutUnitsInput,
  })
  @ValidateNested()
  @Type(() => DealCreateNestedManyWithoutUnitsInput)
  @IsOptional()
  @Field(() => DealCreateNestedManyWithoutUnitsInput, {
    nullable: true,
  })
  deals?: DealCreateNestedManyWithoutUnitsInput;

  @ApiProperty({
    required: false,
    type: () => OpportunityCreateNestedManyWithoutUnitsInput,
  })
  @ValidateNested()
  @Type(() => OpportunityCreateNestedManyWithoutUnitsInput)
  @IsOptional()
  @Field(() => OpportunityCreateNestedManyWithoutUnitsInput, {
    nullable: true,
  })
  opportunities?: OpportunityCreateNestedManyWithoutUnitsInput;

  @ApiProperty({
    required: false,
    type: () => ThreatCreateNestedManyWithoutUnitsInput,
  })
  @ValidateNested()
  @Type(() => ThreatCreateNestedManyWithoutUnitsInput)
  @IsOptional()
  @Field(() => ThreatCreateNestedManyWithoutUnitsInput, {
    nullable: true,
  })
  threats?: ThreatCreateNestedManyWithoutUnitsInput;
}

export { UnitCreateInput as UnitCreateInput };
