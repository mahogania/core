import { StringNullableFilter } from "../../util/StringNullableFilter";
import { DateTimeNullableFilter } from "../../util/DateTimeNullableFilter";
import { FloatNullableFilter } from "../../util/FloatNullableFilter";
import { BooleanNullableFilter } from "../../util/BooleanNullableFilter";
import { IntNullableFilter } from "../../util/IntNullableFilter";
import { StringFilter } from "../../util/StringFilter";

export type CustomerWhereInput = {
  accountManager?: StringNullableFilter;
  creation?: DateTimeNullableFilter;
  customerDetails?: StringNullableFilter;
  customerGroup?: StringNullableFilter;
  customerName?: StringNullableFilter;
  customerPosId?: StringNullableFilter;
  customerPrimaryAddress?: StringNullableFilter;
  customerPrimaryContact?: StringNullableFilter;
  customerType?: StringNullableFilter;
  defaultBankAccount?: StringNullableFilter;
  defaultCommissionRate?: FloatNullableFilter;
  defaultCurrency?: StringNullableFilter;
  defaultPriceList?: StringNullableFilter;
  defaultSalesPartner?: StringNullableFilter;
  disabled?: BooleanNullableFilter;
  dnRequired?: BooleanNullableFilter;
  docstatus?: IntNullableFilter;
  emailId?: StringNullableFilter;
  gender?: StringNullableFilter;
  id?: StringFilter;
  idx?: IntNullableFilter;
  image?: StringNullableFilter;
  industry?: StringNullableFilter;
  isFrozen?: BooleanNullableFilter;
  isInternalCustomer?: BooleanNullableFilter;
  language?: StringNullableFilter;
  leadName?: StringNullableFilter;
  loyaltyProgram?: StringNullableFilter;
  loyaltyProgramTier?: StringNullableFilter;
  marketSegment?: StringNullableFilter;
  mobileNo?: StringNullableFilter;
  modified?: DateTimeNullableFilter;
  modifiedBy?: StringNullableFilter;
  name?: StringNullableFilter;
  namingSeries?: StringNullableFilter;
  opportunityName?: StringNullableFilter;
  owner?: StringNullableFilter;
  paymentTerms?: StringNullableFilter;
  primaryAddress?: StringNullableFilter;
  prospectName?: StringNullableFilter;
  representsCompany?: StringNullableFilter;
  salutation?: StringNullableFilter;
  soRequired?: BooleanNullableFilter;
  taxCategory?: StringNullableFilter;
  taxId?: StringNullableFilter;
  taxWithholdingCategory?: StringNullableFilter;
  territory?: StringNullableFilter;
  website?: StringNullableFilter;
};
